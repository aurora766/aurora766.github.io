<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>🍉6、控制器Controller资源</title>
      <link href="/posts/64ee6901.html"/>
      <url>/posts/64ee6901.html</url>
      
        <content type="html"><![CDATA[<h2 id="控制器-Controller资源">控制器 Controller资源</h2><h3 id="1、控制器作用"><strong>1、控制器作用</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.pod类型的资源，删除pod后，不会重建</span><br><span class="line">2.替用户监视并保证相应的节点上始终有用户所期望的副本数量的pod在运行</span><br><span class="line">3.如果所运行的pod副本数超过了用户期望的，那么控制器就会屾掉，直到和用户期望的一致</span><br><span class="line">4.如果所运行的pod副本数低于用户期望的，那么控制器就会创建，直到和用户期望的一致</span><br></pre></td></tr></table></figure><h3 id="2、控制器的类型"><strong>2、控制器的类型</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1) Replicacontroller:Rc  <span class="string">&quot;已经淘汰掉了&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#常用的</span></span><br><span class="line">2) Replicaset Rs:按用户期望的副本创建pod,并始终保持相应数量副本</span><br><span class="line"></span><br><span class="line">3) Deployment:</span><br><span class="line">Deployment通过控制RS来保证POD始终保持相应的数量副本支持滚动更新，回滚，回滚默认保留10个版本提供声明式配置，支持动态修改管理无状态应用最理想的控制器node节点可能会运行0个或多个POD</span><br><span class="line"></span><br><span class="line">4)Deamonset:</span><br><span class="line">一个节点只运行一个，必须是始终运行的状态</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个用的比较少</span></span><br><span class="line">5)statefulset:     </span><br><span class="line">有状态应用</span><br></pre></td></tr></table></figure><h3 id="3、ReplicaSet-Rs-控制器"><strong>3、ReplicaSet     Rs 控制器</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span>        <span class="comment">#RS控制器的接口</span></span><br><span class="line">kind: <span class="string">&quot;ReplicaSet&quot;</span>           <span class="comment">#RS控制器的类型</span></span><br><span class="line">metadata:                    <span class="comment">#RS控制器的元数据</span></span><br><span class="line"><span class="comment">#metadata里面的name是这个资源的name,这个name是给Rs控制器起的名</span></span><br><span class="line">  name: nginx-rs             <span class="comment">#RS控制器的名字</span></span><br><span class="line"><span class="comment">#labes不需要打，因为service资源找的是Pod资源的标签，所以控制器的标签没必要打</span></span><br><span class="line">  namespace: default         <span class="comment">#RS控制器启动在default名称空间  </span></span><br><span class="line">spec:                        <span class="comment">#RS控制器关联Pod</span></span><br><span class="line"><span class="comment">#最小的准备时间，给控制器一个就绪时间，一般不需要写，不需要约束</span></span><br><span class="line">  <span class="comment">#minReadySeconds: integer</span></span><br><span class="line"><span class="comment">#期望的副本，比如说起5个nginx副本</span></span><br><span class="line">  replicas: 5                <span class="comment">#pod副本数量</span></span><br><span class="line"><span class="comment">#匹配标签的，有2种写法，一个是拿正则匹配，一个精确匹配</span></span><br><span class="line">  selector:                  <span class="comment">#标签选择器</span></span><br><span class="line">    matchLabels:             <span class="comment">#匹配的标签</span></span><br><span class="line">    <span class="comment">#标签能让控制器找到pod,所以这里写pod的标签,一会pod里面要打的标签一定要和这个一样</span></span><br><span class="line">      app: nginx             <span class="comment">#控制器匹配的Pod标签</span></span><br><span class="line">  template:                  <span class="comment">#Pod资源信息</span></span><br><span class="line">    metadata:                <span class="comment">#Pod的元数据</span></span><br><span class="line">      name: nginx-rs-pod       <span class="comment">#Pod的名字</span></span><br><span class="line">      labels:                  <span class="comment">#POD打标签</span></span><br><span class="line">        app: nginx             <span class="comment">#POD打标签</span></span><br><span class="line">    spec:                      <span class="comment">#容器相关信息</span></span><br><span class="line">      containers:              <span class="comment">#容器信息</span></span><br><span class="line">      - name: nginx-web-containers     <span class="comment">#容器名</span></span><br><span class="line">        image: nginx:alpine            <span class="comment">#镜像</span></span><br><span class="line">        imagePullPolicy: IfNotPresent  <span class="comment">#拉取规则</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">其实Rs控制器就是把之前的Pod资源包含起来</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5CMac%5CDesktop%5Casm_blog%5Chexo-theme-Fomalhaut%5Csource%5Cimage%5Cstudy_img%5Cimage-20240923164211035.png" alt="image-20240923164211035"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1、编写Rs控制器的资源清单</span><br><span class="line">[root@master01 kubernetes]# vim nginx-rs.yml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;ReplicaSet&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-rs</span><br><span class="line">  namespace: default</span><br><span class="line">spec: </span><br><span class="line">  replicas: 5</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">    <span class="comment">#控制器匹配的pod标签</span></span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-rs-pod</span><br><span class="line">      labels:</span><br><span class="line">    <span class="comment">#Pod的标签被Rs控制器匹配</span></span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx-web-containers</span><br><span class="line">        image: nginx:alpine</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">  </span><br><span class="line">2、运行，并查看，运行的Pod是轮询在node1、2、3的</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-rs.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide| grep nginx-rs</span><br><span class="line">nginx-rs-4z82q   1/1     Running   0      6m13s   10.2.2.9    node02</span><br><span class="line">nginx-rs-d5mhz   1/1     Running   0      6m13s   10.2.2.10   node02</span><br><span class="line">nginx-rs-qv5l6   1/1     Running   0      6m13s   10.2.3.62   node03</span><br><span class="line">nginx-rs-t8hz6   1/1     Running   0      6m13s   10.2.1.16   node01</span><br><span class="line">nginx-rs-tksxm   1/1     Running   0      6m13s   10.2.1.17   node01</span><br><span class="line"></span><br><span class="line">Pod的名字在资源清单中加nginx-pod,但是不按pod名字来，是根具控制器name: nginx-rs这个加上随机字符串</span><br></pre></td></tr></table></figure><p>1、rs资源的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、查看</span><br><span class="line">[root@master01 kubernetes]# kubectl get replicasets</span><br><span class="line"> <span class="comment">#                  期望数量   当前数量</span></span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-5f5d9d69c4   1         1         1       5d2h</span><br><span class="line">nginx-65cc99f84f   0         0         0       5d8h</span><br><span class="line">nginx-rs           5         5         5       11m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl get rs -owide</span><br><span class="line">[root@master01 kubernetes]# kubectl get replicasets -owide</span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE    CONTAINERS             IMAGES         SELECTOR  </span><br><span class="line">nginx-rs           5         5         5       13m    nginx-web-containers   nginx:alpine   app=nginx  <span class="comment">#标签选择器选择带app=nginx这个标签的 </span></span><br><span class="line"></span><br><span class="line">2、#查看详细信息</span><br><span class="line">[root@master01 kubernetes]# kubectl describe rs nginx-rs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#持续输出</span><br><span class="line">当前窗口A</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs -w</span><br><span class="line">再打开一个master新窗口B，</span><br><span class="line">[root@master01 ~]# kubectl get pod -w</span><br><span class="line"></span><br><span class="line">再打开一个master新窗口C，删除一个pod,旧窗口有输出信息</span><br><span class="line">[root@master01 ~]# kubectl delete pod nginx-rs-4z82q</span><br><span class="line"></span><br><span class="line">窗口A、B会有输出信息，窗口B会标记删除Terminating(此时只是标记，并没有真删除)，然后为了保证你的期望，会赶紧创建一个新的Pending，然后初始化容器ContainerCreating，之后在删除Terminating，新容器运行之后，才彻底被删除掉</span><br><span class="line"></span><br><span class="line">4、#删除POD（只能删除rs控制器，否则会自动拉起）</span><br><span class="line">当我们不需要这个pod，delete pod是删不掉的，删了就会重新起来，所以删rs控制器才彻底删除</span><br><span class="line">kubectl delete 控制器 控制器名</span><br><span class="line">[root@master01 kubernetes]# kubectl delete rs nginx-rs</span><br></pre></td></tr></table></figure><p>2、Rs资源手动扩缩容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：</span></span><br><span class="line">1、编辑资源清单，根据自己的需求修改副本数量</span><br><span class="line">[root@master01 kubernetes]# vim nginx-rs.yml </span><br><span class="line">replicas: 8</span><br><span class="line"></span><br><span class="line">2、运行，查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-rs.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs </span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-rs           8         8         8       10s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：  使用内置的edit命令去修改资源清单</span></span><br><span class="line">1、编辑控制器的资源清单，根据自己的需求修改副本数量   如果是放到其他名称空间，后面要加 -n 指定名称空间</span><br><span class="line">[root@master01 kubernetes]# kubectl edit rs nginx-rs </span><br><span class="line">replicas: 4</span><br><span class="line">修改之后直接查看，不需要apply,直接生效</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs</span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-rs           4         4         4       5m56s</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法三：   使用专门的命令修改配置，扩缩容，升级</span></span><br><span class="line">[root@master01 kubernetes]# kubectl scale rs nginx-rs --replicas=7</span><br><span class="line"></span><br><span class="line">scale：手动扩缩容</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs</span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-rs           7         7         7       13m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#专业一点是根据物理机的资源占用情况来做一个计算，如果抗不住了就自动缩容</span></span><br></pre></td></tr></table></figure><h3 id="4、Deployment-控制器"><strong>4、Deployment 控制器</strong></h3><p>1、Deployment控制器的功能和关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deployment通过控制RS来保证Pod始终保持相对于的数量副本</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240923200104784.png" alt="image-20240923200104784"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RS控制器他会达到你的期望副本，缺陷不能做版本升级</span><br><span class="line">Deployment之所以要控制RS控制器是因为要保留RS控制器的功能，保证用户期望的副本数量一直存在</span><br><span class="line"></span><br><span class="line">支持滚动更新，回滚，回滚默认保留10个版本(也就默认保留10个RS控制器)</span><br><span class="line">提供声明式配置，支持动态修改</span><br><span class="line">管理无状态应用最理想的控制器</span><br><span class="line">node节点可能运行0个或多个pod</span><br></pre></td></tr></table></figure><p>2、Deployment控制器的资源清单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cp</span> nginx-rs.yml nginx-dp.yml </span><br><span class="line">[root@master01 kubernetes]# vim nginx-dp.yml </span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line"><span class="comment">#就修改这里控制器的名字，然后再修改一下下面的标签</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec: </span><br><span class="line">  replicas: 8</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx-dp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-dp-pod</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-dp</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx-web-containers</span><br><span class="line">        image: nginx:alpine</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">2、运行并查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-dp.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">[root@master01 kubernetes]# kubectl get deployments.apps </span><br><span class="line">NAME       READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-dp   8/8     8            8           39s</span><br><span class="line"></span><br><span class="line">3、查看控制器的详细信息</span><br><span class="line">[root@master01 kubernetes]# kubectl describe deployments.apps nginx-dp </span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240923202757305.png" alt="image-20240923202757305"></p><p>3、Deployment的扩缩容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：</span></span><br><span class="line">1、编辑资源清单，根据自己的需求修改副本数量</span><br><span class="line">[root@master01 kubernetes]# vim nginx-dp.yml </span><br><span class="line">replicas: 6</span><br><span class="line"></span><br><span class="line">2、运行，查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-dp.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">[root@master01 kubernetes]# kubectl get deployments.apps </span><br><span class="line">NAME       READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-dp   6/6     6            6           69m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：  使用内置的edit命令去修改资源清单</span></span><br><span class="line">1、编辑控制器的资源清单，根据自己的需求修改副本数量   如果是放到其他名称空间，后面要加 -n 指定名称空间</span><br><span class="line">[root@master01 kubernetes]# kubectl edit deployments.apps nginx-dp </span><br><span class="line">replicas: 10</span><br><span class="line">修改之后直接查看，不需要apply,直接生效</span><br><span class="line">[root@master01 kubernetes]# kubectl get deployments.apps </span><br><span class="line">NAME       READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-dp   10/10   10           10          71m</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法三：   使用专门的命令修改配置，扩缩容</span></span><br><span class="line">[root@master01 kubernetes]# kubectl scale deployment nginx-dp --replicas=4</span><br><span class="line">scale：手动扩缩容</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">[root@master01 kubernetes]# kubectl get deployments.apps </span><br><span class="line">NAME       READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-dp   4/4     4            4           73m</span><br></pre></td></tr></table></figure><p>4、Deployment更新版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：</span></span><br><span class="line">1、编辑资源清单，根据自己的需求修改版本</span><br><span class="line">[root@master01 kubernetes]# vim nginx-dp.yml </span><br><span class="line">image: nginx:alpine 改成 image: nginx:1.20.1</span><br><span class="line"></span><br><span class="line">2、运行，查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-dp.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">[root@master01 kubernetes]# kubectl get deployments.apps </span><br><span class="line">NAME       READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-dp   6/6     6            6           69m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：  使用内置的edit命令去修改资源清单</span></span><br><span class="line">1、编辑控制器的资源清单，根据自己的需求修改版本   如果是放到其他名称空间，后面要加 -n 指定名称空间</span><br><span class="line">[root@master01 kubernetes]# kubectl edit deployments.apps nginx-dp </span><br><span class="line">- image: nginx:alpine 改成 - image: nginx:1.20.1</span><br><span class="line"></span><br><span class="line">修改之后直接查看，不需要apply,直接生效</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs</span><br><span class="line">NAME                  DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-dp-6447db69d8   0         0         0       79m</span><br><span class="line">nginx-dp-7b88fc7dff   6         6         6       2m8s</span><br><span class="line"></span><br><span class="line">这个版本是没有直接显示，可以查看</span><br><span class="line">[root@master01 kubernetes]# kubectl describe rs nginx-dp-7b88fc7dff| grep -n <span class="string">&#x27;.*&#x27;</span></span><br><span class="line">17行    Image:        nginx:1.20.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法三：   使用专门的命令升级</span></span><br><span class="line">kubectl <span class="built_in">set</span> image -f 资源清单 容器名=镜像:版本</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">set</span> image -f nginx-dp.yml nginx-web-containers=nginx:1.16.0</span><br><span class="line"></span><br><span class="line">查看保留的几个版本</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs</span><br></pre></td></tr></table></figure><p>滚动更新示意图：</p><p><img src="../image/study_img/image-20240923115022973.png" alt="image-20240923115022973"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看版本滚动的状态是否成功</span></span><br><span class="line">[root@master01 kubernetes]# kubectl rollout status deployment nginx-dp </span><br><span class="line">deployment <span class="string">&quot;nginx-dp&quot;</span> successfully rolled out</span><br></pre></td></tr></table></figure><p>5、Deployment回滚到上一个版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#回滚其实和上面的更新方法一样的，改版本号</span></span><br><span class="line"><span class="comment">#方法一：</span></span><br><span class="line">1、编辑资源清单，根据自己的需求修改版本</span><br><span class="line">[root@master01 kubernetes]# vim nginx-dp.yml </span><br><span class="line">image: nginx:alpine 改成 image: nginx:1.20.1</span><br><span class="line"></span><br><span class="line">2、运行，查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-dp.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">[root@master01 kubernetes]# kubectl get deployments.apps </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：  使用内置的edit命令去修改资源清单</span></span><br><span class="line">1、编辑控制器的资源清单，根据自己的需求修改版本   如果是放到其他名称空间，后面要加 -n 指定名称空间</span><br><span class="line">[root@master01 kubernetes]# kubectl edit deployments.apps nginx-dp </span><br><span class="line">- image: nginx:alpine 改成 - image: nginx:1.20.1</span><br><span class="line"></span><br><span class="line">修改之后直接查看，不需要apply,直接生效</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs</span><br><span class="line"></span><br><span class="line">这个版本是没有直接显示，可以查看</span><br><span class="line">[root@master01 kubernetes]# kubectl describe rs nginx-dp-7b88fc7dff| grep -n <span class="string">&#x27;.*&#x27;</span></span><br><span class="line">17行    Image:        nginx:1.20.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法三：   使用专门的命令升级</span></span><br><span class="line">kubectl <span class="built_in">set</span> image -f 资源清单 容器名=镜像:版本</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">set</span> image -f nginx-dp.yml nginx-web-containers=nginx:1.16.0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看历史版本</span></span><br><span class="line">[root@master01 kubernetes]# kubectl rollout <span class="built_in">history</span> deployment nginx-dp </span><br><span class="line">deployment.apps/nginx-dp </span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">1         &lt;none&gt;</span><br><span class="line">2         &lt;none&gt;</span><br><span class="line">3         &lt;none&gt;</span><br><span class="line">保留10个，现在只要3个</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看指定历史版本的信息</span></span><br><span class="line">[root@master01 kubernetes]# kubectl rollout <span class="built_in">history</span> deployment nginx-dp --revision=1</span><br><span class="line">第7行可以看到版本信息</span><br><span class="line">Image:      nginx:alpine</span><br><span class="line"></span><br><span class="line"><span class="comment">#看完版本后，就可以回滚到指定版本</span></span><br><span class="line">[root@master01 kubernetes]# kubectl rollout undo deployment nginx-dp --to-revision=1</span><br><span class="line">[root@master01 kubernetes]# kubectl get rs</span><br><span class="line">NAME                  DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-dp-57fb845d6d   0         0         0       3m45s</span><br><span class="line">nginx-dp-6447db69d8   6         6         6       109m</span><br><span class="line">nginx-dp-6c696f4449   0         0         0       22m</span><br><span class="line">nginx-dp-7b88fc7dff   0         0         0       31m</span><br><span class="line">[root@master01 kubernetes]# kubectl describe rs nginx-dp-6447db69d8</span><br><span class="line">查看已经回到alpine版本</span><br><span class="line">    Image:        nginx:alpine</span><br></pre></td></tr></table></figure><p>小技巧  使用–record在历史版本中记录命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看历史版本</span></span><br><span class="line">[root@master01 kubernetes]# kubectl rollout <span class="built_in">history</span> deployment nginx-dp </span><br><span class="line">deployment.apps/nginx-dp </span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">1         &lt;none&gt;</span><br><span class="line">2         &lt;none&gt;</span><br><span class="line">3         &lt;none&gt;</span><br><span class="line"></span><br><span class="line">当前版本信息为&lt;none&gt;，当使用命令去更改的使用，可以在最后面加上选项--record,可以记录这条执行的命令，如果资源清单加上版本号，也是可以显示，用法如下</span><br><span class="line"><span class="comment">#方法一：</span></span><br><span class="line">1、修改资源清单，改一下里面的版本</span><br><span class="line">[root@master01 kubernetes]# vim nginx-dp.yml </span><br><span class="line">image: nginx:1.17.4</span><br><span class="line"></span><br><span class="line">2、运行资源清单</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-dp.yml --record</span><br><span class="line">[root@master01 kubernetes]# kubectl rollout <span class="built_in">history</span> deployment nginx-dp </span><br><span class="line">deployment.apps/nginx-dp </span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">2         &lt;none&gt;</span><br><span class="line">3         &lt;none&gt;</span><br><span class="line">4         &lt;none&gt;</span><br><span class="line">5         &lt;none&gt;</span><br><span class="line">6         kubectl apply --filename=nginx-dp.yml --record=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：</span></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">set</span> image -f nginx-dp.yml nginx-web-containers=nginx:1.18.4 --record</span><br><span class="line">deployment.apps/nginx-dp image updated</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl rollout <span class="built_in">history</span> deployment nginx-dp </span><br><span class="line">deployment.apps/nginx-dp </span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">2         &lt;none&gt;</span><br><span class="line">3         &lt;none&gt;</span><br><span class="line">4         &lt;none&gt;</span><br><span class="line">5         &lt;none&gt;</span><br><span class="line">6         kubectl apply --filename=nginx-dp.yml --record=<span class="literal">true</span></span><br><span class="line">7         kubectl <span class="built_in">set</span> image nginx-web-containers=nginx:1.18.4 --filename=nginx-dp.yml --record=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="5、DaemonSet-控制器"><strong>5、DaemonSet 控制器</strong></h3><p>1、DaemonSet类型介绍   应用场景：每一个节点有且只起一个pod，像zabbix-agent,flannel</p><p><img src="../image/study_img/image-20240923120503080.png" alt="image-20240923120503080"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">简单来说就是每个节点部署一个POD副本</span><br><span class="line">常见的应用场景：</span><br><span class="line">监控容器</span><br><span class="line">日志收集容器</span><br></pre></td></tr></table></figure><p>2、DaemonSet的资源清单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cp</span> nginx-dp.yml nginx-ds.yml</span><br><span class="line">[root@master01 kubernetes]# vim nginx-ds.yml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line"><span class="comment">#修改一下控制器类型</span></span><br><span class="line">kind: <span class="string">&quot;DaemonSet&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ds</span><br><span class="line">  namespace: default</span><br><span class="line">spec: </span><br><span class="line">  <span class="comment">#replicas: 6  这行不要</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx-ds</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-ds-pod</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-ds</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx-web-containers</span><br><span class="line">        image: nginx:alpine</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">2、运行资源清单，并查看</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide| grep nginx-ds</span><br><span class="line">nginx-ds-7gpkh              1/1     Running            0          3m21s   10.2.1.38   node01</span><br><span class="line">nginx-ds-9r2hz              1/1     Running            0          3m21s   10.2.2.34   node02</span><br><span class="line">nginx-ds-vmjsj              1/1     Running            0          3m21s   10.2.3.81   node03</span><br><span class="line">[root@master01 kubernetes]# kubectl get ds</span><br><span class="line">NAME       DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE</span><br><span class="line">nginx-ds   3         3         3       3            3   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#不需要扩缩容，一台机器只能起一个，除非加node</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这几个控制器，以后看你起什么样的服务，去决定你用什么类型的控制器，除了客户端类型的，大部分都是Deplament</span><br><span class="line"></span><br><span class="line">StatefulSet控制器</span><br><span class="line">mysql主从复制 ，kepalived</span><br><span class="line">这个用的少，如果需要可以从网上搜索K8smysql主从复制</span><br></pre></td></tr></table></figure><p>小练习：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1、## 使用控制器起wordpress</span><br><span class="line">一：wordpress镜像</span><br><span class="line">在一个POD里启动两个容器</span><br><span class="line">- wordpress</span><br><span class="line">- mysql5.7</span><br><span class="line">1.就绪性探针</span><br><span class="line">2.存活性探针</span><br><span class="line">3.启动钩子</span><br><span class="line">4.停止钩子</span><br><span class="line">5.初始化容器</span><br><span class="line">二：尝试 wordpress 启动一个POD</span><br><span class="line">MySQL单独启动在一个POD里</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、## 了解HPA 自动扩缩容</span><br><span class="line">3、## 写一个MySQL主从复制的资源清单</span><br></pre></td></tr></table></figure><p>一、使用控制器起wordpress</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line"><span class="comment">#给Deployment资源起的名字</span></span><br><span class="line">  name: wp-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#起2个，数据也是2个，除非把数据分开，所以现在只能起1个</span></span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: wp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: wp-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        app: wp</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: mysql-data</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/mysql</span><br><span class="line">      - name: wp-data</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/wp</span><br><span class="line">      containers:</span><br><span class="line">      - name: wp-container</span><br><span class="line">        image: wordpress</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        livenessProbe:</span><br><span class="line">          tcpSocket:</span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 3</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">        readinessProbe:</span><br><span class="line">          tcpSocket:</span><br><span class="line">            port: 3306</span><br><span class="line">          initialDelaySeconds: 3</span><br><span class="line">          timeoutSeconds: 1</span><br><span class="line">          periodSeconds: 2</span><br><span class="line">          successThreshold: 3</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: WORDPRESS_DB_HOST</span><br><span class="line">          value: <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_USER</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_NAME</span><br><span class="line">          value: <span class="string">&#x27;wp_db&#x27;</span></span><br><span class="line">        </span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: wp-data</span><br><span class="line">          mountPath: /var/www/html/</span><br><span class="line">    </span><br><span class="line">      - name: mysql-container</span><br><span class="line">        image: mysql:5.7</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        args:</span><br><span class="line">        - --character-set-server=utf8</span><br><span class="line">        - --collation-server=utf8_general_ci</span><br><span class="line">        livenessProbe:</span><br><span class="line">          <span class="built_in">exec</span>:</span><br><span class="line">            <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;mysqladmin -uroot -p123 ping&quot;</span>]</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 3</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        - name: MYSQL_DATABASE</span><br><span class="line">          value: <span class="string">&#x27;wp_db&#x27;</span></span><br><span class="line">        - name: MYSQL_USER</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: MYSQL_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: mysql-data</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line">          </span><br><span class="line">目前的资源清单还是有缺陷</span><br><span class="line">1、对外提供服务的问题</span><br><span class="line">2、数据容器和wordpress容器在同一个pod里，正常应该分开起在不同pod</span><br><span class="line">3、自动扩缩容</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉7、自动扩缩容HPA</title>
      <link href="/posts/276654d0.html"/>
      <url>/posts/276654d0.html</url>
      
        <content type="html"><![CDATA[<h2 id="自动扩缩容HPA">自动扩缩容HPA</h2><h3 id="1、HPA的介绍"><strong>1、HPA的介绍</strong></h3><p>HorizontalPodAutoscaler（简称 HPA ） 自动更新工作负载资源（例如 Deployment 或者StatefulSet）， 目的是自动扩缩工作负载以满足需求。<br>水平扩缩意味着对增加的负载的响应是部署更多的 Pod。 这与“垂直（Vertical）”扩缩不同，对于Kubernetes， 垂直扩缩意味着将更多资源（例如：内存或 CPU）分配给已经为工作负载运行的 Pod。<br>如果负载减少，并且 Pod 的数量高于配置的最小值， HorizontalPodAutoscaler 会指示工作负载资源（Deployment、StatefulSet 或其他类似资源）缩减。<br>本文档将引导你完成启用 HorizontalPodAutoscaler 以自动管理示例 Web 应用程序的扩缩的示例。 此示例工作负载是运行一些 PHP 代码的 Apache httpd</p><p><font color=red>总结：HPA可根据系统负载情况(CPU、内存、磁盘、平均负载)，对控制器(Deployment、statefulset、ReplicaSet)进行操作，修改副本数量，达到扩缩容的目的</font>&gt;</p><h3 id="2、Metrics-Service介绍"><strong>2、Metrics Service介绍</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Metrics：指标的意思</span><br><span class="line">什么情况下扩容量：负载高</span><br><span class="line">缩容：Pod 的数量高于配置的最小值</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看node资源的使用情况</span></span><br><span class="line">[root@master01 ~]# kubectl top node</span><br><span class="line">error: Metrics API not available</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">官方文档地址：https://kubernetes.io/zh-cn/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/</span><br><span class="line"></span><br><span class="line">HPA怎么知道系统负载的情况？</span><br><span class="line">需要有Metrics service服务</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240924084519004.png" alt="image-20240924084519004"></p><p><img src="../image/study_img/image-20240924085953555.png" alt="image-20240924085953555"></p><p><img src="../image/study_img/image-20240924141858256.png" alt="image-20240924141858256"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Metrics Server是Kubernetes内置自动缩放管道的可扩展、高效的容器资源度量源。</span><br><span class="line">Metrics Server从Kubelets收集资源度量，并通过Metrics API在Kubernetes apiserver中公开这些度量，供Horizontal Pod Autoscaler和Vertical Pod Autocaler使用。kubectl top还可以访问度量API，从而更容易地调试自动缩放管道</span><br></pre></td></tr></table></figure><p>版本的选择：</p><table><thead><tr><th>Metrics Server</th><th>Metrics APl group/version</th><th>Supported Kubernetes version</th></tr></thead><tbody><tr><td>0.7.x</td><td><a href="http://metrics.k8s.io/v1beta1">metrics.k8s.io/v1beta1</a></td><td>1.19+</td></tr><tr><td>0.6.x</td><td><a href="http://metrics.k8s.io/v1beta1">metrics.k8s.io/v1beta1</a></td><td>1.19+</td></tr><tr><td>0.5.x</td><td><a href="http://metrics.k8s.io/v1beta1">metrics.k8s.io/v1beta1</a></td><td>*1.8+</td></tr><tr><td>0.4.x</td><td><a href="http://metrics.k8s.io/v1beta1">metrics.k8s.io/v1beta1</a></td><td>*1.8+</td></tr><tr><td>0.3.x</td><td><a href="http://metrics.k8s.io/v1beta1">metrics.k8s.io/v1beta1</a></td><td>1.8-1.21</td></tr></tbody></table><h3 id="3、部署Metics-Server"><strong>3、部署Metics Server</strong></h3><p>1、部署Metics Server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">registry.k8s.io/metrics-server/metrics-server:v0.7.2是谷歌内部镜像站下载，但是无法下载，需要手段，可以从如下地址下载</span><br><span class="line">http://test.driverzeng.com/HPA/metrics-server.tar，资源清单和镜像都有</span><br><span class="line"></span><br><span class="line">1、查看当前k8s版本</span><br><span class="line">[root@master01 service]#  kubectl version | grep <span class="string">&quot;GitVersion:&quot;</span></span><br><span class="line">GitVersion:<span class="string">&quot;v1.19.3&quot;</span></span><br><span class="line"></span><br><span class="line">2、建议每个node都下载镜像</span><br><span class="line">wget http://test.driverzeng.com/HPA/metrics-server.tar</span><br><span class="line">wget http://test.driverzeng.com/HPA/components.yaml</span><br><span class="line"></span><br><span class="line">3、每个node导入镜像</span><br><span class="line">[root@node01 ~]# docker load &lt; metrics-server.tar</span><br><span class="line"></span><br><span class="line">4、修改资源清单</span><br><span class="line"></span><br><span class="line">[root@node01 ~]# <span class="built_in">mv</span> components.yaml.1 components.yaml</span><br><span class="line">[root@node01 ~]# vim components.yaml</span><br><span class="line">①、删除这几行</span><br><span class="line">122   strategy:</span><br><span class="line">123     rollingUpdate:</span><br><span class="line">124       maxUnavailable: 0</span><br><span class="line">②、修改控制器资源，为了保证每台起一个所以要修改</span><br><span class="line">112 将kind: Deployment 改为kind: DaemonSet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、启动，并查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f components.yaml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -n kube-system -owide</span><br><span class="line">NAME                  READY   STATUS    RE         AGE     </span><br><span class="line">metrics-server-9kcvb  1/1     Running   0      5h40m 10.0.0.202   node02  </span><br><span class="line">metrics-server-nltkh  1/1     Running   0          5h40m 10.0.0.201   node01  </span><br><span class="line">metrics-server-v28cw  1/1     Running   0          5h40m 10.0.0.203   node03  </span><br><span class="line"></span><br><span class="line">6、查看node节点资源的占用情况            </span><br><span class="line">[root@master01 kubernetes]# kubectl top node</span><br><span class="line">NAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line">master01   167m         16%    1248Mi          71%       </span><br><span class="line">node01     70m          7%     507Mi           29%       </span><br><span class="line">node02     73m          7%     615Mi           35%       </span><br><span class="line">node03     110m         5%     688Mi           20% </span><br><span class="line"></span><br><span class="line">7、查看pod资源的占用情况  </span><br><span class="line">[root@master01 kubernetes]# kubectl top pod</span><br><span class="line">NAME                            CPU(cores)   MEMORY(bytes)   </span><br><span class="line">c7-nginx                        0m           1Mi             </span><br><span class="line">nginx-deploy-545f948568-4tgvd   0m           2Mi             </span><br><span class="line">nginx-deploy-545f948568-7jnbf   0m           2Mi             </span><br><span class="line">nginx-deploy-545f948568-v5v82   0m           2Mi             </span><br><span class="line">nginx-ds-7gpkh                  0m           1Mi             </span><br><span class="line">nginx-ds-9r2hz                  0m           1Mi             </span><br><span class="line">nginx-ds-vmjsj                  0m           2Mi </span><br><span class="line"></span><br><span class="line">HPA就是掉node的接口获取资源信息</span><br></pre></td></tr></table></figure><p>2、生成测试镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1、每个node编写php代码，创建测试首页</span><br><span class="line"><span class="built_in">cat</span> &gt; index.php &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&lt;?php</span><br><span class="line">  <span class="variable">$x</span> = 0.0001;</span><br><span class="line">  <span class="keyword">for</span> (<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt;= 1000000; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$x</span> += sqrt(<span class="variable">$x</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;OK!&quot;</span>;</span><br><span class="line">?&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">一般做计算是cpu计算，实际上就是在压你的cpu，计算100亿次</span><br><span class="line"></span><br><span class="line">2、每个node创建Dockerfile</span><br><span class="line"><span class="built_in">cat</span> &gt; dockerfile &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">FROM php:5-apache</span><br><span class="line">ADD index.php /var/www/html/index.php</span><br><span class="line">RUN <span class="built_in">chmod</span> a+rx index.php</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、每个node构建镜像</span><br><span class="line">docker build -t php:v1 .</span><br></pre></td></tr></table></figure><p>3、编写资源清单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单    kubectl run php-apache --image=php:v1 --requests=cpu=200m --expose --port=80</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# vim php-dp.yml</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: php-apache</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      run: php-apache</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        run: php-apache</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: php:v1</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: php-apache</span><br><span class="line"><span class="comment">#现在CPU最多使用200毫核 0.2核</span></span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 200m</span><br><span class="line">  </span><br><span class="line">2、运行，并查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f php-dp.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE     IP          NODE</span><br><span class="line">php-apache-869dfddb74-qgffj     1/1     Running   0          53s     10.2.3.90   node03</span><br><span class="line">[root@master01 kubernetes]# curl 10.2.3.90 </span><br><span class="line">OK!</span><br><span class="line"></span><br><span class="line">3、目前还没有部署HPA,</span><br><span class="line">[root@master01 kubernetes]# kubectl get hpa</span><br><span class="line">No resources found <span class="keyword">in</span> default namespace.</span><br><span class="line"></span><br><span class="line">4、刚刚部署了Metics Server，hpa才是扩容的东西，所以现在编写资源清单</span><br><span class="line">编写HPA监控资源扩容php的Deployment</span><br><span class="line">kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# vim php-hpa.yml</span><br><span class="line">apiVersion: <span class="string">&quot;autoscaling/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;HorizontalPodAutoscaler&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: php-apache</span><br><span class="line">  namespace: default</span><br><span class="line">spec: </span><br><span class="line">  <span class="comment">#自动扩容最大扩到多少</span></span><br><span class="line">  maxReplicas: 8</span><br><span class="line">  <span class="comment">#自动扩容最大扩到多少</span></span><br><span class="line">  minReplicas: 1</span><br><span class="line">  scaleTargetRef:</span><br><span class="line">    apiVersion: apps/v1</span><br><span class="line">    kind: Deployment</span><br><span class="line">    name: php-apache</span><br><span class="line">  targetCPUUtilizationPercentage: 50</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">5、启动hpa资源</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f php-hpa.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get hpa</span><br><span class="line">NAME         REFERENCE               TARGETS   MINPODS   MAXPODS   REPLICAS   AGE</span><br><span class="line">php-apache   Deployment/php-apache   0%/50%    1         8         1          16s</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#你想让哪个Deployment控制器自动扩缩容，就要谁的HPA资源清单，wordpress自动扩缩容，就要写wordpress的HPA资源监控wordpress</span></span><br><span class="line"></span><br><span class="line">apiVersion: <span class="string">&quot;autoscaling/v1&quot;</span>           <span class="comment">#HPA接口</span></span><br><span class="line">kind: <span class="string">&quot;HorizontalPodAutoscaler&quot;</span>        <span class="comment">#HPA资源类型</span></span><br><span class="line">metadata:                              <span class="comment">#HPA元数据</span></span><br><span class="line">  name: php-apache                     <span class="comment">#HPA资源名</span></span><br><span class="line">  namespace: default                   <span class="comment">#名称空间</span></span><br><span class="line">spec:                                  <span class="comment">#HPA控制信息</span></span><br><span class="line">  maxReplicas: 8                       <span class="comment">#最多扩容8个副本         </span></span><br><span class="line">  minReplicas: 1                       <span class="comment">#最少扩容1个副本</span></span><br><span class="line">  scaleTargetRef:                      <span class="comment">#HPA关联控制器</span></span><br><span class="line">    apiVersion: apps/v1                <span class="comment">#控制器的接口</span></span><br><span class="line">    kind: Deployment                   <span class="comment">#控制器类型</span></span><br><span class="line">    name: php-apache                   <span class="comment">#控制器名字</span></span><br><span class="line">  targetCPUUtilizationPercentage: 50   <span class="comment">#CPU使用率达到50%则扩容</span></span><br></pre></td></tr></table></figure><p>4、压测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1、查看需要压测的pod的ip</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE     IP          NODE</span><br><span class="line">php-apache-869dfddb74-qgffj     1/1     Running   0          28m     10.2.3.90   node03</span><br><span class="line"></span><br><span class="line">2、写循环脚本压测</span><br><span class="line">打开2个窗口，执行如下命令，压测效果就比较明显</span><br><span class="line">[root@master01 kubernetes]# <span class="keyword">while</span> <span class="literal">true</span> ;<span class="keyword">do</span> curl 10.2.3.90;<span class="built_in">sleep</span> 0.2;<span class="keyword">done</span></span><br><span class="line">OK!OK!OK!OK!OK!OK!OK!OK!OK</span><br><span class="line"></span><br><span class="line">3、再开一个master窗口，查看cup的使用率，需要等待一下下，才可以看到cpu变化</span><br><span class="line">[root@master01 ~]# kubectl get hpa -w</span><br><span class="line">NAME         REFERENCE               TARGETS   MINPODS   MAXPODS   REPLICAS   AGE</span><br><span class="line">php-apache   Deployment/php-apache   0%/50%    1         8         1          6m37s</span><br><span class="line">php-apache   Deployment/php-apache   386%/50%   1         8         1          8m38s</span><br><span class="line">php-apache   Deployment/php-apache   386%/50%   1         8         4          8m53s</span><br><span class="line">php-apache   Deployment/php-apache   386%/50%   1         8         8          9m9s</span><br><span class="line">php-apache   Deployment/php-apache   103%/50%   1         8         8          9m39s</span><br><span class="line"></span><br><span class="line">4、再开一个窗口，查看pod的副本数量，可以看到，cpu使用率增加，pod的副本增加，此时已经增加到8个了</span><br><span class="line">[root@master01 ~]# kubectl get pod</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE</span><br><span class="line">php-apache-869dfddb74-2x25m     1/1     Running   0          64s</span><br><span class="line">php-apache-869dfddb74-884jw     1/1     Running   0          79s</span><br><span class="line">php-apache-869dfddb74-m6vb7     1/1     Running   0          64s</span><br><span class="line">php-apache-869dfddb74-mck7s     1/1     Running   0          64s</span><br><span class="line">php-apache-869dfddb74-mg9pf     1/1     Running   0          79s</span><br><span class="line">php-apache-869dfddb74-qgffj     1/1     Running   0          35m</span><br><span class="line">php-apache-869dfddb74-t49wf     1/1     Running   0          64s</span><br><span class="line">php-apache-869dfddb74-xdtv6     1/1     Running   0          79s</span><br><span class="line"></span><br><span class="line">5、停止压测命令，稍等一会，查看pod的副本数量，可以看到，cpu使用率减少，pod数量减少，变成1个pod</span><br><span class="line">[root@master01 ~]# kubectl get pod</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE</span><br><span class="line">php-apache-869dfddb74-884jw     1/1     Running   0          8m54s</span><br><span class="line"></span><br><span class="line">压力减小没有立马缩容，就像搞大活动618，用户量有一部分买完产品了，如果突然又上了产品就不会缩容。这个设计很合理的，他会觉得没有什么大流量，就会缩容</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉8、Service资源</title>
      <link href="/posts/b92e2a5d.html"/>
      <url>/posts/b92e2a5d.html</url>
      
        <content type="html"><![CDATA[<h2 id="Service资源">Service资源</h2><p>没有service资源，想要访问服务，需要在防火墙做端口转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">1、起一个pod资源</span><br><span class="line">[root@master01 kubernetes]# vim nginx.yml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-test</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container-v2</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="comment">#端口映射</span></span><br><span class="line">    ports:</span><br><span class="line">    - name: http-port</span><br><span class="line">    <span class="comment">#容器的80端口映射到宿主机的8081端口</span></span><br><span class="line">      containerPort: 80</span><br><span class="line">      hostPort: 8081</span><br><span class="line"></span><br><span class="line">2、运行</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide</span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE     IP          NODE  </span><br><span class="line">nginx-test                    1/1     Running   0          46s     10.2.3.96   node03</span><br><span class="line"></span><br><span class="line">3、pod起来了，并且运行在node03节点上，查看node03的端口，看不到8081端口，可以浏览器直接访问，能够访问到nginx主页面</span><br><span class="line">10.0.0.203:8081</span><br><span class="line"></span><br><span class="line">4、因为防火墙在底层做了端口转发，是看不到的，只要访问到node03的8081端口，会自动转发转发到容器里的80端口</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果如上端口转发一般不使用，映射的端口看不到</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 使用控制器启动POD时，无法多个POD绑定同一个端口，而且每次pod起来，ip会发生变化</span></span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> nginx-dp.yaml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  replicas: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      run: nginx-dp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        run: nginx-dp</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx-container</span><br><span class="line">        image: nginx:alpine</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - name: http-port</span><br><span class="line">          containerPort: 80</span><br><span class="line">          hostPort: 8081</span><br><span class="line"></span><br><span class="line"><span class="comment">#报错端口被占用</span></span><br><span class="line">[root@master01 kubernetes]# kubectl describe pod nginx-dp-69c9d4dbc5-9xp64</span><br><span class="line">Warning FailedScheduling 44s default-scheduler 0/4 nodes are available: 1 node(s) had taint &#123;node-role.kubernetes.io/master: &#125;, that the pod didn<span class="string">&#x27;t tolerate, 3 node(s) didn&#x27;</span>t have free ports <span class="keyword">for</span> the requested pod ports.</span><br><span class="line">Warning FailedScheduling 44s default-scheduler 0/4 nodes are available: 1 node(s) had taint &#123;node-role.kubernetes.io/master: &#125;, that the pod didn<span class="string">&#x27;t tolerate, 3 node(s) didn&#x27;</span>t have free ports <span class="keyword">for</span> the requested pod ports.</span><br></pre></td></tr></table></figure><h3 id="1、Service资源介绍"><strong>1、Service资源介绍</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   通过前面的实验我们已经掌握了使用Pod控制器来管理Pod，我们也会发现，Pod的生命周期非常短暂，每次镜像升级都会销毁以及创建，而我们知道每个Pod都拥有自己的IP地址，并且随着Pod删除和创建，这个IP是会变化的。</span><br><span class="line">当我们的Pod数量非常多的时候前端的入口服务该怎么知道后面都有哪些Pod呢？</span><br><span class="line">为了解决这个问题k8s提供了一个对象Service和三种IP，创建的Service资源通过标签可以动态的知道后端的Pod的IP地址，在PodIP之上设计一个固定的IP，也就是ClusterIP，然后使用NodePort来对外暴露端口提供访问。</span><br><span class="line">接下来我们先认识一下K8s里的三种IP及其作用。</span><br></pre></td></tr></table></figure><p><strong>K8s使用的三种IP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、nodes IP：宿主机的IP</span><br><span class="line">2、Pod IP：容器的IP地址</span><br><span class="line">3、Cluster IP：容器的负载均衡IP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Service资源涉及到的IP和网络</span></span><br><span class="line">ClusterIP：IP地址</span><br><span class="line">NodePort：端口</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240924175240230.png" alt="image-20240924175240230"></p><h3 id="2、ClusterIP的资源"><strong>2、ClusterIP的资源</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果要起一个service资源，就必须先起一个Pod,再给POD打上Cluster IP</span></span><br><span class="line"></span><br><span class="line">1、需要先起一个Deployment控制器资源</span><br><span class="line">[root@master01 service]# vim nginx-dp.yaml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deploy</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      run: nginx-deploy</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        run: nginx-deploy</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx-container</span><br><span class="line">        image: nginx:alpine</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">[root@master01 service]# kubectl apply -f nginx-dp.yaml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-deploy-545f948568-66bjf   1/1     Running   0          5s</span><br><span class="line">nginx-deploy-545f948568-f5mhc   1/1     Running   0          5s</span><br><span class="line">nginx-deploy-545f948568-vmkpz   1/1     Running   0          5s</span><br><span class="line"><span class="comment">#现在访问，就相当于访问web01、web02、web03，但是前面没有加lb01,接下来就写Cluster资源清单，就相当于lb01</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、写Cluster资源清单,这个资源清单要给上面的3个pod打一个负载均衡的Cluster IP</span><br><span class="line">[root@master01 service]# vim nginx-svc.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-svc</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#你的service起的cluster IP要给哪个pod绑定，就相当于标签选择器，这里的标签要和pod的标签一样</span></span><br><span class="line">  selector:</span><br><span class="line">    run: nginx-deploy</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-nginx</span><br><span class="line">  <span class="comment">#宿主机里映射的端口</span></span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    <span class="comment">#容器的的端口</span></span><br><span class="line">    targetPort: 80</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 service]# kubectl apply -f nginx-svc.yaml</span><br><span class="line"></span><br><span class="line">3、查看svc详细信息</span><br><span class="line">[root@master01 kubernetes]# kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.1.0.1       &lt;none&gt;        443/TCP   11d  <span class="comment">#这个是k8s创建的svc</span></span><br><span class="line">nginx-svc    ClusterIP   10.1.168.150   &lt;none&gt;        80/TCP    8h</span><br><span class="line">[root@master01 kubernetes]# curl 10.1.168.150</span><br><span class="line">curl 一下，如果通了，这个负载均衡就做好了</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意，如果curl不通，不要着急，先curl一下POd的ip是否能通，通过可以通，那就是svc的请求无法到达pod,可能是iptables防火墙阻止了，可以在前面加ingress，如果在浏览器里面可以访问，那么ingress能正常对外提供服务，就没问题</span></span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl describe svc nginx-svc</span><br><span class="line">Name:              nginx-svc</span><br><span class="line">Namespace:         default</span><br><span class="line">Labels:            &lt;none&gt;</span><br><span class="line">Annotations:       &lt;none&gt;</span><br><span class="line">Selector:          run=nginx-deploy</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.1.168.150     <span class="comment">#serivice资源的ip</span></span><br><span class="line">Port:              http-nginx  80/TCP</span><br><span class="line">TargetPort:        80/TCP</span><br><span class="line">Endpoints:         10.2.1.52:80,10.2.2.46:80,10.2.3.111:80</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240925231650457.png" alt="image-20240925231650457"></p><p>同一个名称空间通信的方法：通过ping server资源名 进行通信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">4、随便起一个有ping命令的pod，并进入pod</span><br><span class="line">[root@master01 kubernetes]# vim c7.yml </span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: c7-nginx</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f c7.yml </span><br><span class="line"></span><br><span class="line">5、连接进入容器,ping serivice资源的ip和serivice资源的名字</span><br><span class="line">[root@master01 service]# kubectl <span class="built_in">exec</span> -it c7-nginx -c c7-container -- /bin/bash</span><br><span class="line">[root@c7-nginx /]# ping  10.1.189.201</span><br><span class="line">[root@c7-nginx /]# ping  nginx-svc</span><br><span class="line">可以ping</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240924195940632.png" alt="image-20240924195940632"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 prometheus]# kubectl get pod -n kube-system</span><br><span class="line">NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-85k2r           1/1     Running   2          13d</span><br><span class="line">coredns-6d56c8448f-h697m           1/1     Running   2          8d</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment">#流程梳理：</span></span><br><span class="line">1、因为我们有2个coredns服务器，他会帮我们做一个域名解析</span><br><span class="line">2、啥时候做域名解析呢？</span><br><span class="line">当你apply起一个svc时，当svc起来了后，他会把10.1.189.201  nginx-svc(serivice资源的ip和serivice资源的名字)绑定到那2个dns服务器里面，做一个域名解析</span><br><span class="line"></span><br><span class="line">起了一个pod，pod里面有dns的配置，里面有一个ip,是service的ip,这个起在kube-system名称空间里面的</span><br><span class="line"></span><br><span class="line">[root@master01 prometheus]# kubectl get svc -n kube-system</span><br><span class="line">NAME             TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">kube-dns         ClusterIP   10.1.0.10     &lt;none&gt;        53/UDP,53/TCP,9153/TCP   13d</span><br><span class="line">metrics-server   ClusterIP   10.1.11.158   &lt;none&gt;        443/TCP                  2d13h</span><br><span class="line">[root@master01 kubernetes]# kubectl describe svc -n kube-system kube-dns</span><br><span class="line">Name:              kube-dns</span><br><span class="line">Namespace:         kube-system</span><br><span class="line">Labels:            k8s-app=kube-dns</span><br><span class="line">                   kubernetes.io/cluster-service=<span class="literal">true</span></span><br><span class="line">                   kubernetes.io/name=KubeDNS</span><br><span class="line">Annotations:       prometheus.io/port: 9153</span><br><span class="line">                   prometheus.io/scrape: <span class="literal">true</span></span><br><span class="line">Selector:          k8s-app=kube-dns</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.1.0.10</span><br><span class="line">Port:              dns  53/UDP</span><br><span class="line">TargetPort:        53/UDP</span><br><span class="line">Endpoints:         10.2.1.5:53,10.2.2.7:53</span><br><span class="line">Port:              dns-tcp  53/TCP</span><br><span class="line">TargetPort:        53/TCP</span><br><span class="line">Endpoints:         10.2.1.5:53,10.2.2.7:53</span><br><span class="line">Port:              metrics  9153/TCP</span><br><span class="line">TargetPort:        9153/TCP</span><br><span class="line">Endpoints:         10.2.1.5:9153,10.2.2.7:9153</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926232750951.png" alt="image-20240926232750951"></p><p><img src="../image/study_img/image-20240926233119633.png" alt="image-20240926233119633"></p><p>不名称空间通信的方法：ping service的名字.service的名称空间.svc.cluster.local</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1、随便起一个有ping命令的pod，并进入pod</span><br><span class="line">[root@master01 kubernetes]# vim c7.yml </span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: c7-test</span><br><span class="line">  <span class="comment">#这里指定一个名称空间</span></span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f c7.yml </span><br><span class="line"></span><br><span class="line">5、连接进入容器,ping serivice资源的ip和serivice资源的名字</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it c7-test -n  kube-system -- /bin/bash</span><br><span class="line">[root@c7-test /]# ping nginx-svc</span><br><span class="line">ping: nginx-svc: Name or service not known</span><br><span class="line"><span class="comment">#ping资源名，无法通，说明不在同一个名称空间是做网络隔离的，不在同一个pod不能用service通信</span></span><br><span class="line"></span><br><span class="line">[root@c7-nginx /]# ping  10.1.189.201</span><br><span class="line">ip可以通，但是ip通没啥用，ip会发生变化</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果有时候，就是想要不同名称空间的通信，就像阿里云买机器，把网络打通内网的需求，打通内外这种事，k8s也能做</span></span><br><span class="line">ping service的名字.service的名称空间.svc.cluster.local</span><br><span class="line"> </span><br><span class="line">[root@c7-test /]# ping nginx-svc.default.svc.cluster.local</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#原理：</span></span><br><span class="line">1、首先起了一个c7-test的pod，里面有dns服务器的配置</span><br><span class="line">[root@c7-test /]# <span class="built_in">cat</span> /etc/resolv.conf</span><br><span class="line">nameserver 10.1.0.10</span><br><span class="line">search kube-system.svc.cluster.local svc.cluster.local cluster.local</span><br><span class="line">options ndots:5</span><br><span class="line"></span><br><span class="line">2、10.1.0.10这个ip是一个svc的ip,不过这个svc起在kube-system这个名称空间里</span><br><span class="line">[root@master01 prometheus]# kubectl get svc -n kube-system</span><br><span class="line">NAME             TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">kube-dns         ClusterIP   10.1.0.10     &lt;none&gt;        53/UDP,53/TCP,9153/TCP   13d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl describe svc -n kube-system kube-dns</span><br><span class="line">Name:              kube-dns</span><br><span class="line">Namespace:         kube-system</span><br><span class="line">Labels:            k8s-app=kube-dns</span><br><span class="line">                   kubernetes.io/cluster-service=<span class="literal">true</span></span><br><span class="line">                   kubernetes.io/name=KubeDNS</span><br><span class="line">Annotations:       prometheus.io/port: 9153</span><br><span class="line">                   prometheus.io/scrape: <span class="literal">true</span></span><br><span class="line">Selector:          k8s-app=kube-dns</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.1.0.10</span><br><span class="line">Port:              dns  53/UDP</span><br><span class="line">TargetPort:        53/UDP</span><br><span class="line">Endpoints:         10.2.1.5:53,10.2.2.7:53</span><br><span class="line">Port:              dns-tcp  53/TCP</span><br><span class="line">TargetPort:        53/TCP</span><br><span class="line">Endpoints:         10.2.1.5:53,10.2.2.7:53</span><br><span class="line">Port:              metrics  9153/TCP</span><br><span class="line">TargetPort:        9153/TCP</span><br><span class="line">Endpoints:         10.2.1.5:9153,10.2.2.7:9153</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure><p>以后pod与pod的通信流程图</p><p><img src="../image/study_img/image-20240927194820715.png" alt="image-20240927194820715"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">但是现在光用Cluster ip是没啥用的，会发现Cluster ip的ip在浏览器无法访问，因为他是一个内网ip,想要这个ip能够访问，还需要在宿主机上做一个NodePort 端口映射，映射到clusterip</span><br></pre></td></tr></table></figure><h3 id="3、NodePort资源-做端口映射"><strong>3、NodePort资源    做端口映射</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果要起一个service资源，就必须先起一个Pod,再给POD打上NodePort</span></span><br><span class="line"></span><br><span class="line">1、需要先起一个Deployment控制器资源</span><br><span class="line">[root@master01 service]# vim nginx-dp.yaml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deploy</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      run: nginx-deploy</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        run: nginx-deploy</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx-container</span><br><span class="line">        image: nginx:alpine</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-dp.yml</span><br><span class="line"></span><br><span class="line">2、编写nodeport资源清单   写发和clusterip一样，就把后面的<span class="built_in">type</span>换一下</span><br><span class="line">[root@master01 service]# vim nginx-svc.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-svc</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    run: nginx-deploy</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-nginx</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">    <span class="comment">#映射到宿主机30000的端口</span></span><br><span class="line">    nodePort: 30000</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  </span><br><span class="line">3、删除上一个实验的nginx-svc资源，运行本次编写的资源清单  </span><br><span class="line">[root@master01 service]# kubectl delete service nginx-svc</span><br><span class="line">service <span class="string">&quot;nginx-svc&quot;</span> deleted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 service]# kubectl apply -f nginx-svc.yml </span><br><span class="line">[root@master01 service]# kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   ClusterIP   10.1.0.1      &lt;none&gt;        443/TCP        11d</span><br><span class="line">nginx-svc    NodePort    10.1.171.27   &lt;none&gt;        80:30000/TCP   63s</span><br><span class="line"><span class="comment">#把cluster ip的80端口，映射到宿主机的30000</span></span><br><span class="line">他起NodePort也帮你起一个cluster ip,也就是说NodePort也包含cluster ip,所以以后起的时候就不需要单独起cluster ip的资源了</span><br><span class="line"></span><br><span class="line">3、连接进入容器,ping serivice资源的名字,可以ping通</span><br><span class="line">[root@master01 service]# kubectl <span class="built_in">exec</span> -it c7-nginx -c c7-container -- /bin/bash</span><br><span class="line">[root@c7-nginx /]# ping  nginx-svc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将拥有同一个标签的pod分为一组 对外映射端口（30000-65535） 进行负载 </span></span><br><span class="line">宿主机 30000 --- &gt; serIP:80 -----&gt; podip:80</span><br><span class="line"></span><br><span class="line"><span class="comment">## NodePort端口范围：30000-32767</span></span><br><span class="line">The Service <span class="string">&quot;nginx-svc&quot;</span> is invalid: spec.ports[0].nodePort: Invalid value: 80:provided port is not <span class="keyword">in</span> the valid range. The range of valid ports is 30000-32767</span><br><span class="line"></span><br><span class="line">现在使用浏览器访问，可以访问到nginx主页面</span><br><span class="line">10.0.0.200:30000</span><br><span class="line">10.0.0.201:30000</span><br><span class="line">10.0.0.202:30000</span><br><span class="line">10.0.0.203:30000</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个和k8s的组件kube-proxy有关，只要有kube-proxy的机器都会做端口映射出来，底层做一个转发，kube-proxy在启动的时候使用的是DaemonSet，每个机器都会起</span></span><br><span class="line">kube-proxy提供的30000端口</span><br><span class="line">[root@master01 kubernetes]# netstat -lntup|grep 30000</span><br><span class="line">tcp        0      0 0.0.0.0:30000           0.0.0.0:*               LISTEN      96411/kube-proxy </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：</span></span><br><span class="line">端口范围是30000~32767，不太好用，所以以后不行NodePort，写cluster ip就可以，不要NodePort，就可以不用kube-proxy，我们会用ingress取代</span><br></pre></td></tr></table></figure><h3 id="4、Ingress资源介绍"><strong>4、Ingress资源介绍</strong></h3><p>NodePort的缺点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.没有ingress之前，pod对外提供服务只能通过NodeIP:NodePort的形式，但是这种形式有缺点，一个节点上的Port不能重复利用。比如某个服务占用了80端口，那么其他服务就不能在用这个端口了。</span><br><span class="line"></span><br><span class="line">2.NodePort是4层代理，不能解析7层的http，不能通过域名区分流量</span><br><span class="line"></span><br><span class="line">3.为了解决这个问题，我们需要用到资源控制器叫Ingress，作用就是提供一个统一的访问入口。工作在7层</span><br><span class="line"></span><br><span class="line">4.虽然我们可以使用nginx/haproxy来实现类似的效果，但是传统部署不能动态的发现我们新创建的资源，必须手动修改配置文件并重启。</span><br><span class="line"></span><br><span class="line">5.适用于k8s的ingress控制器主流的有nginx-ingress、traefik、haproxy-ingress</span><br></pre></td></tr></table></figure><p>Ingress控制器<br>1）[AKS 应用网关Ingres控制器] 使用 Azure应用程序网关启用AKS集群ingress。<br>2）mbassador API网关，一个基于Envoy的Ingress控制器，有着来自社区的支持和来自Datawire的商业支持。<br>3）AppsCode Inc 为最广泛使用的基于HAproxy的Ingress控制器Voyager提供自持和维护。<br>4）AWS ALB Ingress控制器，通过AWS应用Load Balancer启用Ingress。<br>5）Contour是一个基于Envoy的Ingress控制器，它由VMware提供和支持。<br>6）Citrix为其硬件（MPX），虚拟化（VPX）和免费容器化（CPX）ADC提供了一个Ingress控制器，用于裸金属和云部署。<br>7）F5 Networks为用于Kubernetes的F5 BIG-IP控制器提供支持和维护。<br>8）Gloo是一个开源的基于Envoy的Ingress控制器，它提供了API网关功能，有着来自solo.io的企业级支持。<br>9）HAproxy Ingress是HAproxy高度可定制的、由社区驱动的Ingress控制器。<br>10）HAproxy Technologies为用于Kubernetes的HAproxy Ingress控制器提供支持和维护，具体信息请参考官方文档。<br>11）基于Istio的ingress控制器，控制Ingress流量。<br>12）Kong为用于Kubernetes的Kong Ingress控制器提供社区或商业支持和维护。<br>14）Nginx 为用于Kubernetes的Nginx Ingress控制器提供支持和维护<br>15）Traefik（小蜜蜂）是一个全功能的Ingress控制器。（Let’s Encrypt，secrets，http2，websocket）并且它也有Traefik Labs的商业支持</p><p><img src="../image/study_img/image-20240924121232376.png" alt="image-20240924121232376"></p><p>1、部署nginx-ingress</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kubeguide</span><br><span class="line">权威指南的资源清单网址：https://github.com/kubeguide/K8sDefinitiveGuide-V5-Sourcecode/blob/main/Chapter04/4.6.1%20nginx-ingress-controller.yaml</span><br><span class="line"></span><br><span class="line">1、下载权威指南的资源清单 ingress资源清单</span><br><span class="line">[root@master01 service]# vim nginx-ingress.yaml</span><br><span class="line">把复制的资源清单粘贴</span><br><span class="line">135行： kind: Deployment 改为 kind: DaemonSet</span><br><span class="line">130行：  删除 data:</span><br><span class="line">140行：  删除 replicas: 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#这2行是给node打标签的，只有打了标签才装在node上面，要么注释这两行，要么给node打标签     节点标签选择器</span></span><br><span class="line">147行：      nodeSelector:</span><br><span class="line">148行：        role: ingress-nginx-controller</span><br><span class="line"></span><br><span class="line"><span class="comment">#建议复制之后粘贴在VScode里面，格式不会出错</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240924213753073.png" alt="image-20240924213753073"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">2、给node节点打上标签</span><br><span class="line">[root@master01 kubernetes]# kubectl label node node01 role=ingress-nginx-controller</span><br><span class="line">node/node01 labeled</span><br><span class="line">[root@master01 kubernetes]# kubectl label node node02 role=ingress-nginx-controller</span><br><span class="line">node/node02 labeled</span><br><span class="line">[root@master01 kubernetes]# kubectl label node node03 role=ingress-nginx-controller</span><br><span class="line">node/node03 labeled</span><br><span class="line"></span><br><span class="line">3、运行资源清单</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-ingress.yaml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -n nginx-ingress -owide</span><br><span class="line">NAME                  READY   STATUS    RESTARTS   AGE     IP          NODE  </span><br><span class="line">nginx-ingress-hrn5v   1/1     Running   0          2m16s   10.2.3.98   node03</span><br><span class="line">nginx-ingress-hsvgc   1/1     Running   0          2m16s   10.2.1.45   node01</span><br><span class="line">nginx-ingress-tzsht   1/1     Running   0          2m16s   10.2.2.40   node02</span><br></pre></td></tr></table></figure><p>2、使用ingress启动自己的站点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">1、为避免数据库有脏数据，先删除节点上之前映射的数据库目录</span><br><span class="line">[root@node01 ~]#  <span class="built_in">rm</span> -rf /data/</span><br><span class="line">[root@node02 ~]#  <span class="built_in">rm</span> -rf /data/</span><br><span class="line">[root@node03 ~]#  <span class="built_in">rm</span> -rf /data/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、# wordpress pod    起Deployment资源</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f wp-dp-v1.yml </span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: wp-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#起2个，数据也是2个，除非把数据分开</span></span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">    <span class="comment">#这里的标签一定要和svc的标签一样，不然会连接不到</span></span><br><span class="line">      app: wp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: wp-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        app: wp</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: mysql-data</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/mysql</span><br><span class="line">      - name: wp-data</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/wp</span><br><span class="line"></span><br><span class="line">      containers:</span><br><span class="line">      - name: wp-container</span><br><span class="line">        image: wordpress</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        <span class="comment">#livenessProbe:</span></span><br><span class="line">        <span class="comment">#  tcpSocket:</span></span><br><span class="line">        <span class="comment">#    port: 80</span></span><br><span class="line">        <span class="comment">#  initialDelaySeconds: 10</span></span><br><span class="line">        <span class="comment">#  periodSeconds: 3</span></span><br><span class="line">        <span class="comment">#  timeoutSeconds: 3</span></span><br><span class="line">        <span class="comment">#  failureThreshold: 3</span></span><br><span class="line">        readinessProbe:</span><br><span class="line">          tcpSocket:</span><br><span class="line">            port: 3306</span><br><span class="line">          initialDelaySeconds: 3</span><br><span class="line">          timeoutSeconds: 1</span><br><span class="line">          periodSeconds: 2</span><br><span class="line">          successThreshold: 3</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: WORDPRESS_DB_HOST</span><br><span class="line">          value: <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_USER</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_NAME</span><br><span class="line">          value: <span class="string">&#x27;wp_db&#x27;</span></span><br><span class="line">        </span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: wp-data</span><br><span class="line">          mountPath: /var/www/html/</span><br><span class="line">    </span><br><span class="line">      - name: mysql-container</span><br><span class="line">        image: mysql:5.7</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        args:</span><br><span class="line">        - --character-set-server=utf8</span><br><span class="line">        - --collation-server=utf8_general_ci</span><br><span class="line">        livenessProbe:</span><br><span class="line">          <span class="built_in">exec</span>:</span><br><span class="line">            <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;mysqladmin -uroot -p123 ping&quot;</span>]</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 3</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        - name: MYSQL_DATABASE</span><br><span class="line">          value: <span class="string">&#x27;wp_db&#x27;</span></span><br><span class="line">        - name: MYSQL_USER</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: MYSQL_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: mysql-data</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、# wordpress service</span><br><span class="line">[root@master01 kubernetes]# vim wp-svc.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-svc</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">  <span class="comment">#这里的标签一定要和pod-dp的标签一样，不然会连接不到</span></span><br><span class="line">    app: wp</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">  </span><br><span class="line">3、# 对外提供服务的wordpress ingress</span><br><span class="line">[root@master01 kubernetes]# vim wp-ingress.yaml</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-ingress</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  <span class="comment">#站点的域名</span></span><br><span class="line">  - host: blog.wp.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        pathType: ImplementationSpecific</span><br><span class="line">        <span class="comment">#backend之前的都是网站相关配置</span></span><br><span class="line">        <span class="comment">##从backend之后的都是ingress关联ClusterIP</span></span><br><span class="line">        backend:</span><br><span class="line">          service:</span><br><span class="line">          <span class="comment">#这里必须要写svc网站的名字</span></span><br><span class="line">            name: wordpress-svc</span><br><span class="line">            port:</span><br><span class="line">              number: 80</span><br><span class="line">              </span><br><span class="line">4、运行</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f wp-ingress.yml </span><br><span class="line">ingress.networking.k8s.io/wordpress-ingress created</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f wp-dp-v1.yml  </span><br><span class="line">pod/wp-pod created</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f wp-svc.yml </span><br><span class="line">service/wordpress-svc created</span><br><span class="line"></span><br><span class="line">5、查看</span><br><span class="line">[root@master01 kubernetes]# kubectl get ingress</span><br><span class="line">Warning: extensions/v1beta1 Ingress is deprecated <span class="keyword">in</span> v1.14+, unavailable <span class="keyword">in</span> v1.22+; use networking.k8s.io/v1 Ingress</span><br><span class="line">NAME                CLASS    HOSTS         ADDRESS   PORTS   AGE</span><br><span class="line">wordpress-ingress   &lt;none&gt;   blog.wp.com             80      13s</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl get svc</span><br><span class="line">wordpress-svc   ClusterIP   10.1.42.145    &lt;none&gt;        80/TCP         25s</span><br><span class="line">[root@master01 kubernetes]# kubectl describe svc wordpress-svc </span><br><span class="line">Name:              wordpress-svc</span><br><span class="line">Namespace:         default</span><br><span class="line">Labels:            &lt;none&gt;</span><br><span class="line">Annotations:       &lt;none&gt;</span><br><span class="line">Selector:          app=wp</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.1.84.160</span><br><span class="line">Port:              http  80/TCP</span><br><span class="line">TargetPort:        80/TCP</span><br><span class="line">Endpoints:         10.2.3.118:80  <span class="comment">#显示找到了pod ip</span></span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE   IP           NODE  </span><br><span class="line">wp-dp-9d48b944b-z6snw           2/2     Running   0          22m   10.2.3.118   node03</span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、本地机器做域名解析，ingress起在node节点上的，node节点的ip做谁的域名解析都可以</span><br><span class="line">10.0.0.201  blog.wp.com</span><br><span class="line"></span><br><span class="line">2、使用域名在浏览器访问成功，这就是ingress的相关，而且还是80端口，以后不管起多少个网站，都走80端口，但是node节点上看不到80端口的，只是在底层的防火墙做的转发</span><br><span class="line">blog.wp.com</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;3、iptables -F这个命令千万不要执行，他会清空iptables所有的转发配置&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927230958071.png" alt="image-20240927230958071"></p><p><img src="../image/study_img/image-20240927231602977.png" alt="image-20240927231602977"></p><p>将域名解析改到其他node，也可以使用域名访问成功</p><p><img src="../image/study_img/image-20240927231929202.png" alt="image-20240927231929202"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">他到node节点的机器，转发到cluster ip上，cluster ip去访问pod，但我们的pod就一个pod，所以暂时没有日志显示是哪台机器转发的</span><br><span class="line"></span><br><span class="line">解析到哪，取决于哪些机器安装了ingress</span><br></pre></td></tr></table></figure><p>3、ingress资源解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">spec:                                          <span class="comment">#转发规则</span></span><br><span class="line">  rules:                                       <span class="comment">#转发规则</span></span><br><span class="line">  <span class="comment">#站点的域名</span></span><br><span class="line">  - host: blog.wp.com                          <span class="comment">#匹配的域名</span></span><br><span class="line">    http:                                      <span class="comment">#基于http协议解析</span></span><br><span class="line">      paths:                                   <span class="comment">#基于路径进行匹配</span></span><br><span class="line">      - path: /                                <span class="comment">#匹配/路径</span></span><br><span class="line">        pathType: ImplementationSpecific       <span class="comment">#路径类型</span></span><br><span class="line">        backend:                               <span class="comment">#匹配后跳转的后端服务</span></span><br><span class="line">          service:                       <span class="comment">#设置后端跳转到Service的配置</span></span><br><span class="line">            name: wordpress-svc          <span class="comment">#跳转到名为wordpress-svc的ClusterIP</span></span><br><span class="line">            port:                              <span class="comment">#跳转到的端口</span></span><br><span class="line">              number: 80                       <span class="comment">#Service端口号</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># pathType路径类型支持的类型：</span></span><br><span class="line">ImplementationSpecific 系统默认，由IngressClass控制器提供</span><br><span class="line">Exact 精确匹配URL路径，区分大小写  相当于nginx配置文件的 location = /  ~ * 这种</span><br><span class="line">Prefix 匹配URL路径的前缀，区分大小写</span><br></pre></td></tr></table></figure><h3 id="5、Service服务发现"><strong>5、Service服务发现</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在k8s中，一个service对应的“后端”由Pod的IP和容器端口号组成，即一个完整的<span class="string">&quot;IP:Port&quot;</span>访问地址，这在k8s里叫做Endpoint。通过查看Service的详细信息可以看到后端Endpoint的列表。</span><br><span class="line">[root©node1 ~]# kubectl describe svc my-nginx</span><br><span class="line">Endpoints:  10.2.1.24:80,10.2.1.26:80,10.2.1.27:89 more...</span><br><span class="line"></span><br><span class="line">把一个pod删掉后，自动起来的就会自动加到cluster ip里</span><br></pre></td></tr></table></figure><p>我们也可以使用DNS域名的形式访问Service，如果在同一个命名空间里甚至可以直接使用service名来访问服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">servicename.namespace.svc.cluster.local</span><br><span class="line">servicename.namespace</span><br><span class="line">servicename</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927183355537.png" alt="image-20240927183355537"></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉9、Kubernetes持久化储存</title>
      <link href="/posts/a288ff46.html"/>
      <url>/posts/a288ff46.html</url>
      
        <content type="html"><![CDATA[<h2 id="Kubernetes持久化储存">Kubernetes持久化储存</h2><h3 id="1、K8s持久化储存介绍"><strong>1、K8s持久化储存介绍</strong></h3><p>​      之前接触hostpath、emptyDir的是本地储存，缺陷数据不能做到和其他机器共享</p><p>​       容器内部的的存储在生命周期是短暂的，会随着容器环境的销毁而销毁，具有不稳定性，在k8s里将对容器应用所需的存储资源抽象为存储卷(Volume)概念来解决这些问题。</p><p>K8s目前支持的Volume类型包括k8s的内部资源对象类型，开源共享存储类型和公有云存储等。分类如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#K8s特定的资源对象</span></span><br><span class="line">configMap：储存配置文件  (配置中心:nacos)</span><br><span class="line">Secret：储存加密数据，证书文件</span><br><span class="line">ServiceAccountToken：储存token数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#本地储存：pod起在哪，数据就在哪个机器</span></span><br><span class="line">EmptDir：临时储存(宿主机随机生成一个储存目录)</span><br><span class="line">HostPath：宿主机目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#网络共享储存</span></span><br><span class="line">CephFS：开源共享储存系统(现在用的比较多一些)</span><br><span class="line">ClusterFS：开源共享储存系统  FastDFS</span><br><span class="line">NFS：开源共享储存  (这个是单点，写脚本会卡主)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#PV共享存储：</span></span><br><span class="line">PersishtenVolumeClain：</span><br></pre></td></tr></table></figure><h3 id="2、本地储存——EmptyDir类型的挂载方式"><strong>2、本地储存——EmptyDir类型的挂载方式</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">1、编写Deployment控制器的资源清单</span><br><span class="line">[root@master01 kubernetes]# vim nginx-emptDir.yml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec: </span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: mysql-dp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-dp-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql-dp</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: mysql-emptydir</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      containers:</span><br><span class="line">      - name: mysql-container</span><br><span class="line">        image: mysql:5.7</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: mysql-emptydir</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line"></span><br><span class="line">2、运行并查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-emptDir.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide</span><br><span class="line">NAME                        READY   STATUS    RESTARTS   AGE   IP           NODE  </span><br><span class="line">nginx-dp-67b5bd5fdc-kvjqh   1/1     Running   0          18s   10.2.3.119   node03</span><br><span class="line"></span><br><span class="line">3、node03查看挂载的数据</span><br><span class="line">[root@node03 ~]# docker inspect fb799f13d7e9</span><br><span class="line">[root@node03 ~]# ll /var/lib/kubelet/pods/9be94529-0040-4185-91c8-91b4b271d387/volumes/kubernetes.io~empty-dir/mysql-emptydir</span><br><span class="line">-rw-r----- 1 polkitd input       56 Sep 28 11:53 auto.cnf</span><br><span class="line">-rw------- 1 polkitd input     1680 Sep 28 11:53 ca-key.pem</span><br><span class="line">-rw-r--r-- 1 polkitd input     1112 Sep 28 11:53 ca.pem</span><br><span class="line">-rw-r--r-- 1 polkitd input     1112 Sep 28 11:53 client-cert.pem</span><br><span class="line">-rw------- 1 polkitd input     1680 Sep 28 11:53 client-key.pem</span><br><span class="line">-rw-r----- 1 polkitd input     1318 Sep 28 11:53 ib_buffer_pool</span><br><span class="line">-rw-r----- 1 polkitd input 79691776 Sep 28 11:53 ibdata1</span><br><span class="line">-rw-r----- 1 polkitd input 50331648 Sep 28 11:53 ib_logfile0</span><br><span class="line">-rw-r----- 1 polkitd input 50331648 Sep 28 11:53 ib_logfile1</span><br><span class="line">-rw-r----- 1 polkitd input 12582912 Sep 28 11:53 ibtmp1</span><br><span class="line">drwxr-x--- 2 polkitd input     4096 Sep 28 11:53 mysql</span><br><span class="line">lrwxrwxrwx 1 polkitd input       27 Sep 28 11:53 mysql.sock -&gt; /var/run/mysqld/mysqld.sock</span><br><span class="line">drwxr-x--- 2 polkitd input     8192 Sep 28 11:53 performance_schema</span><br><span class="line">-rw------- 1 polkitd input     1680 Sep 28 11:53 private_key.pem</span><br><span class="line">-rw-r--r-- 1 polkitd input      452 Sep 28 11:53 public_key.pem</span><br><span class="line">-rw-r--r-- 1 polkitd input     1112 Sep 28 11:53 server-cert.pem</span><br><span class="line">-rw------- 1 polkitd input     1680 Sep 28 11:53 server-key.pem</span><br><span class="line">drwxr-x--- 2 polkitd input     8192 Sep 28 11:53 sys</span><br></pre></td></tr></table></figure><h3 id="3、本地储存——hostpath类型"><strong>3、本地储存——hostpath类型</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">1、编写控制器的资源清单</span><br><span class="line">[root@master01 kubernetes]# vim nginx-hostpath.yml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec: </span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: mysql-dp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: nginx-dp-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql-dp</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: mysql-emptydir</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      - name: mysql-hostpath</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /opt/mysql</span><br><span class="line">      containers:</span><br><span class="line">      - name: mysql-container</span><br><span class="line">        image: mysql:5.7</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: mysql-hostpath</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-hostpath.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4、共享储存——NFS类型"><strong>4、共享储存——NFS类型</strong></h3><p><img src="../image/study_img/image-20240928175642454.png" alt="image-20240928175642454"></p><p>1、部署NFS</p><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>nfs</td><td>10.0.0.31  /  172.16.1.31</td><td></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#NFS服务器不能起在Pod里的，储存类的几乎不会用pod去起的</span></span><br><span class="line"></span><br><span class="line">1、NFS服务安装NFS</span><br><span class="line">[root@nfs ~]# yum -y install nfs-utils</span><br><span class="line"></span><br><span class="line">2、node节点要挂载过去，所有node节点安装nfs</span><br><span class="line">[root@node01 ~]# yum -y install nfs-utils</span><br><span class="line">[root@node02 ~]# yum -y install nfs-utils</span><br><span class="line">[root@node03 ~]# yum -y install nfs-utils</span><br><span class="line"></span><br><span class="line">3、修改nfs服务器的配置文件</span><br><span class="line">[root@nfs ~]# vim /etc/exports</span><br><span class="line">/data/wp 172.16.1.0/24(rw,<span class="built_in">sync</span>,all_squash)</span><br><span class="line"></span><br><span class="line">4、创建挂载目录，并授权，启动服务</span><br><span class="line">[root@nfs ~]# <span class="built_in">mkdir</span> -p /data/wp</span><br><span class="line">[root@nfs ~]# <span class="built_in">chown</span> -R nfsnobody.nfsnobody /data/wp</span><br><span class="line">[root@nfs ~]# systemctl start nfs &amp;&amp; systemctl <span class="built_in">enable</span> nfs </span><br><span class="line"></span><br><span class="line">5、验证生效</span><br><span class="line">[root@nfs ~]# <span class="built_in">cat</span> /var/lib/nfs/etab </span><br><span class="line">/data/wp        172.16.1.0/24(rw,<span class="built_in">sync</span>,wdelay,hide,nocrossmnt,secure,root_squash,all_squash,no_subtree_check,secure_locks,acl,no_pnfs,anonuid=65534,anongid=65534,sec=sys,rw,secure,root_squash,all_squash)</span><br></pre></td></tr></table></figure><p>2、master编写wp挂载nfs的资源清单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">1、编写wp的Deployment资源清单</span><br><span class="line">[root@master01 kubernetes]# vim wp-dp-v1.yml </span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: wp-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#起2个，数据也是2个，除非把数据分开</span></span><br><span class="line">  replicas: 2</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: wp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: wp-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        app: wp</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: wp-data</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/wp</span><br><span class="line"></span><br><span class="line">      <span class="comment">#-----------------挂载nfs的写法---------------------</span></span><br><span class="line">      <span class="comment">#最后一行挂载的名字要改一下</span></span><br><span class="line">      <span class="comment"># mount -t nfs 172.16.1.31:/data/wordpress /var/www/html</span></span><br><span class="line">      - name: wp-nfs    </span><br><span class="line">        nfs:</span><br><span class="line">      <span class="comment">#nfs服务器配置文件写的共享目录</span></span><br><span class="line">          path: /data/wp</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line">      <span class="comment">#server就是nfs服务的ip</span></span><br><span class="line">          server: 172.16.1.31</span><br><span class="line"></span><br><span class="line">      containers:</span><br><span class="line">      - name: wp-container</span><br><span class="line">        image: wordpress</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        <span class="comment">#livenessProbe:</span></span><br><span class="line">        <span class="comment">#  tcpSocket:</span></span><br><span class="line">        <span class="comment">#    port: 80</span></span><br><span class="line">        <span class="comment">#  initialDelaySeconds: 10</span></span><br><span class="line">        <span class="comment">#  periodSeconds: 3</span></span><br><span class="line">        <span class="comment">#  timeoutSeconds: 3</span></span><br><span class="line">        <span class="comment">#  failureThreshold: 3</span></span><br><span class="line">        <span class="comment">#readinessProbe:</span></span><br><span class="line">        <span class="comment">#  tcpSocket:</span></span><br><span class="line">        <span class="comment">#    host: mysql-svc</span></span><br><span class="line">        <span class="comment">#    port: 3306</span></span><br><span class="line">        <span class="comment">#  initialDelaySeconds: 3</span></span><br><span class="line">        <span class="comment">#  timeoutSeconds: 1</span></span><br><span class="line">        <span class="comment">#  periodSeconds: 2</span></span><br><span class="line">        <span class="comment">#  successThreshold: 3</span></span><br><span class="line">        <span class="comment">#  failureThreshold: 3</span></span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: WORDPRESS_DB_HOST</span><br><span class="line">          value: <span class="string">&#x27;mysql-svc&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_USER</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_NAME</span><br><span class="line">          value: <span class="string">&#x27;wp_db&#x27;</span></span><br><span class="line">        </span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: wp-nfs</span><br><span class="line">          mountPath: /var/www/html/</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f wp-dp-v1.yml </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、编写wp的Service资源</span><br><span class="line">[root@master01 kubernetes]# vim wp-svc.yml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-svc</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: wp</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    <span class="comment">#这里临时为了测试，所以临时使用NodePort</span></span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30002</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f wp-svc.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get svc</span><br><span class="line">NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)     </span><br><span class="line">wordpress-svc   NodePort    10.1.84.160    &lt;none&gt;        80:30002/TCP</span><br><span class="line"></span><br><span class="line">3、编写mysql的Deployment资源</span><br><span class="line">[root@master01 kubernetes]# vim mysql-dp.yml </span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: mysql-dp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: mysql-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql-dp</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: mysql-emptydir</span><br><span class="line">        emptyDir: &#123;&#125; </span><br><span class="line">      - name: mysql-hostpath</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /opt/mysql</span><br><span class="line"></span><br><span class="line">      containers:</span><br><span class="line">      - name: mysql-container</span><br><span class="line">        image: mysql:5.7.44</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: <span class="string">&quot;123&quot;</span></span><br><span class="line">        - name: MYSQL_DATABASE</span><br><span class="line">          value: <span class="string">&quot;wp_db&quot;</span></span><br><span class="line">        - name: MYSQL_USER</span><br><span class="line">          value: <span class="string">&quot;wp_user&quot;</span></span><br><span class="line">        - name: MYSQL_PASSWORD</span><br><span class="line">          value: <span class="string">&quot;123&quot;</span></span><br><span class="line">        </span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: mysql-hostpath</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line">          </span><br><span class="line">[root@master01 kubernetes]#  kubectl apply -f mysql-dp.yml </span><br><span class="line"></span><br><span class="line">4、编写mysql的Service资源</span><br><span class="line">[root@master01 kubernetes]# vim mysql-svc.yml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-svc</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: mysql-dp</span><br><span class="line">  ports:</span><br><span class="line">  - name: mysql</span><br><span class="line">    port: 3306</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 3306</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">  </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f mysql-svc.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get svc</span><br><span class="line">NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">mysql-svc       ClusterIP   10.1.47.161    &lt;none&gt;        3306/TCP       52s</span><br><span class="line">wordpress-svc   NodePort    10.1.84.160    &lt;none&gt;        80:30002/TCP   15h</span><br><span class="line"></span><br><span class="line">3、到nfs验证是否挂载成功</span><br><span class="line">[root@nfs ~]# ll /data/wp/</span><br><span class="line">-rw-r--r--  1 nfsnobody nfsnobody   405 Feb  6  2020 index.php</span><br><span class="line">-rw-r--r--  1 nfsnobody nfsnobody 19915 Jan  1  2024 ...</span><br><span class="line">-rw-r--r--  1 nfsnobody nfsnobody  3246 Mar  2  2024 xmlrpc.php</span><br><span class="line"></span><br><span class="line">4、浏览器访问</span><br><span class="line">k8s集群中随便一个节点都可以访问，上面说过，和kube-proxy有关</span><br><span class="line">10.0.0.200:30002</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240928141216598.png" alt="image-20240928141216598"></p><p>发布文章上传图片</p><p><img src="../image/study_img/image-20240928142403213.png" alt="image-20240928142403213"></p><p>nfs机器里面查看图片是否上传到挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]# ll /data/wp/wp-content/uploads/2024/09/</span><br><span class="line">total 512</span><br><span class="line">-rw-r--r-- 1 nfsnobody nfsnobody  74163 Sep 28 14:21 12-1024x758.jpg</span><br><span class="line">-rw-r--r-- 1 nfsnobody nfsnobody   6000 Sep 28 14:21 12-150x150.jpg</span><br><span class="line">-rw-r--r-- 1 nfsnobody nfsnobody  13125 Sep 28 14:21 12-300x222.jpg</span><br><span class="line">-rw-r--r-- 1 nfsnobody nfsnobody  50103 Sep 28 14:21 12-768x568.jpg</span><br><span class="line">-rw-r--r-- 1 nfsnobody nfsnobody 367277 Sep 28 14:21 12.jpg</span><br></pre></td></tr></table></figure><h3 id="5、PV和PVC的介绍"><strong>5、PV和PVC的介绍</strong></h3><p>PV是对底层网络共享存储的抽象，将共享存储定义为一种“资源”<br>PV由管理员创建和配置<br>PVC则是用户对存储资源的一个“申请”就像Pod消费Node的资源一样，<br>PVC能够&quot;消费&quot;PV资源PVC可以申请特定的存储空间和访问模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">就目前而言，挂载那台NFS主机磁盘有多大，就能储存多大，对占用没有做限制，</span><br><span class="line"></span><br><span class="line">PV,可以理解为nfs储存，一共20G，PV就是划分磁盘空间的东西，给储存资源划分空间，划分2G一块，3G一块...</span><br><span class="line"></span><br><span class="line">PVC,这个储存是一个大的园区，开发商把园区开发成房子，PVC就是购买别墅的人，想要多大，就申请多大(申请PV划分的资源空间)，</span><br><span class="line"></span><br><span class="line">PV划分储存，PVC绑定PV,pod使用指定的PVC</span><br></pre></td></tr></table></figure><p>pv和PVC的生命周期</p><p><img src="../image/study_img/image-20240925102733528.png" alt="image-20240925102733528"></p><p>PV和PVC需要注意的地方</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在PV的整个生命周期中，可能会处于4种不同的阶段:</span><br><span class="line"></span><br><span class="line">Avaliable(可用)：表示可用状态，还未被任何PVC绑定</span><br><span class="line">Bound(被绑定的)：表示PV已经被PVC绑定</span><br><span class="line">Released(已释放)：PVC被删除，但是资源还未被集群重新声明，被释放了，里面还有数据在，需要把数据删除或者备份，再把这个pv删除，重启起来，就会变成Avaliable状态</span><br><span class="line">Failed(失败)：表示该PV的自动回收失败</span><br></pre></td></tr></table></figure><p>PVC绑定PV的条件如下：</p><p>创建PVC之后，k8s就会去查找满足我们声明要求的PV比如storageClassName，accessModes以及容是这些是否满足要求，如果满足要求就将PV和PVC绑定在一起。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、storageClassName</span><br><span class="line">2、accessModes</span><br><span class="line">3、size</span><br></pre></td></tr></table></figure><p><font color=red>需要注意的是目前PV和PVC之间是一对一绑定的关系，也就是说一个PV只能被一个PVC绑定。</font>&gt;</p><p><img src="../image/study_img/image-20240925103145263.png" alt="image-20240925103145263"></p><h3 id="6、PV、PVC的资源清单"><strong>6、PV、PVC的资源清单</strong></h3><p>PV资源关键参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">capacity: PV存储的容量</span><br><span class="line">capacity: 5Gi <span class="comment">#划分磁盘空间5G</span></span><br><span class="line"></span><br><span class="line">accessModes: 访问模式,k8s支持的访问模式如下</span><br><span class="line">------------------------------------------------------</span><br><span class="line">ReadWriteOnce(RWO): 读写权限，并且只能被单个Node挂载</span><br><span class="line">ReadOnlyMany(ROX): 只读权限，允许被多个Node挂载</span><br><span class="line">ReadWriteMany(RWX): 读写权限，允许被多个Node挂载</span><br><span class="line">------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">persistentVolumeReclaimPolicy: 资源回收策略，pvc删之后数据是否回收的策略</span><br><span class="line">------------------------------------------------------</span><br><span class="line">Retain: 保留数据，需要手工处理      </span><br><span class="line">Recycle: 简单清除文件的操作(例如运行<span class="built_in">rm</span> -rf /dada/* 命令)，如果删除pvc,pv的资源就会被删除释放掉</span><br><span class="line">Delete: 如果把PVC删了，PV也会被一起删除，数据也会被清掉(很少用)</span><br><span class="line">目前只有NFS和HostPath两种类型的PV支持Recycle策略。</span><br><span class="line">------------------------------------------------------</span><br><span class="line"></span><br><span class="line">storageClassName: 存储类别</span><br><span class="line">具有特定类别的PV只能与请求了该类别的PVC绑定。未指定类型的PV则只能对与不请求任何类别的PVC绑定。</span><br></pre></td></tr></table></figure><p>编写PV资源清单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">1 mib =1024 kib</span><br><span class="line">1 gib = 1024 mib</span><br><span class="line"></span><br><span class="line">1、编写PV资源清单，划分5G</span><br><span class="line">[root@master01 kubernetes]# vim pv01.yml </span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;PersistentVolume&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: pv01</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    <span class="comment">#PV申请磁盘空间的大小5G</span></span><br><span class="line">    storage: 5Gi</span><br><span class="line">  <span class="comment">#访问模式：读写权限，并且只能被单个Node挂载</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  <span class="comment">#回收策略</span></span><br><span class="line">  persistentVolumeReclaimPolicy: Recycle</span><br><span class="line">  storageClassName: pv01-nfs</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/wp1</span><br><span class="line">    server: 172.16.1.31</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">2、编写PV资源清单，划分3G</span><br><span class="line">[root@master01 kubernetes]# vim pv02.yml </span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;PersistentVolume&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: pv02</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    <span class="comment">#PV申请磁盘空间的大小5G</span></span><br><span class="line">    storage: 4Gi</span><br><span class="line">  <span class="comment">#访问模式：只读权限，允许被多个Node挂载</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadOnlyMany</span><br><span class="line">  <span class="comment">#回收策略</span></span><br><span class="line">  persistentVolumeReclaimPolicy: Recycle</span><br><span class="line">  storageClassName: pv02-nfs</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/wp2</span><br><span class="line">    server: 172.16.1.31</span><br><span class="line">    </span><br><span class="line">3、编写PV资源清单，划分5G   </span><br><span class="line">[root@master01 kubernetes]# vim pv03.yml </span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;PersistentVolume&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: pv03</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    <span class="comment">#PV申请磁盘空间的大小5G</span></span><br><span class="line">    storage: 3Gi</span><br><span class="line">  <span class="comment">#访问模式：(RWX): 读写权限，允许被多个Node挂载</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  <span class="comment">#回收策略</span></span><br><span class="line">  persistentVolumeReclaimPolicy: Recycle</span><br><span class="line">  storageClassName: pv03-nfs</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/wp3</span><br><span class="line">    server: 172.16.1.31</span><br><span class="line"></span><br><span class="line">4、运行</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f pv01.yml     </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f pv02.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f pv03.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pv</span><br><span class="line">NAME   CAPACITY(#pvc绑定的条件)   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGEC</span><br><span class="line">pv01   5Gi        RWO            Recycle          Available           pv01-nfs</span><br><span class="line">pv02   4Gi        ROX            Recycle          Available           pv02-nfs</span><br><span class="line">pv03   3Gi        RWX            Recycle          Available           pv03-nfs</span><br></pre></td></tr></table></figure><p>编写PVC资源清单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1、编写PVC资源清单</span><br><span class="line">[root@master01 kubernetes]# vim pvc01.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: pvc01</span><br><span class="line"><span class="comment">#spec里面的内容就是要去匹配PV的</span></span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 4Gi</span><br><span class="line">  storageClassName: pv01-nfs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、运行</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f pvc01.yml </span><br><span class="line"></span><br><span class="line">3、查看PVC已经绑定了pv01</span><br><span class="line">[root@master01 kubernetes]# kubectl get pvc</span><br><span class="line">NAME    STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">pvc01   Bound    pv01     5Gi        RWO            pv01-nfs       4m5s</span><br><span class="line"></span><br><span class="line">4、pv已经显示被绑定</span><br><span class="line">[root@master01 kubernetes]# kubectl get pv</span><br><span class="line">NAME   CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM           STORAGECLA</span><br><span class="line">pv01   5Gi        RWO            Recycle          Bound       default/pvc01   pv01-nfs  </span><br><span class="line">pv02   4Gi        ROX            Recycle          Available                   pv02-nfs  </span><br><span class="line">pv03   3Gi        RWX            Recycle          Available                   pv03-nfs  </span><br></pre></td></tr></table></figure><h3 id="7、Pod关联PVC"><strong>7、Pod关联PVC</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">1、创建wordpress-Deployment资源</span><br><span class="line">[root@master01 kubernetes]# vim wp-dp-v2.yml</span><br><span class="line">apiVersion: <span class="string">&quot;apps/v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Deployment&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: wp-dp</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#起2个，数据也是2个，除非把数据分开</span></span><br><span class="line">  replicas: 2</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: wp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: wp-pod</span><br><span class="line">      namespace: default</span><br><span class="line">      labels:</span><br><span class="line">        app: wp</span><br><span class="line">    spec:</span><br><span class="line">    <span class="comment">#最后一行挂载点的名字鸡蛋更改 nfs被pv和pvc绑定了，所以pod自己用pvc资源</span></span><br><span class="line">      volumes:</span><br><span class="line">      - name: wp-pvc</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">        <span class="comment">#这个是pvc的名字</span></span><br><span class="line">          claimName: pvc01</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      containers:</span><br><span class="line">      - name: wp-container</span><br><span class="line">        image: wordpress</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        <span class="comment">#livenessProbe:</span></span><br><span class="line">        <span class="comment">#  tcpSocket:</span></span><br><span class="line">        <span class="comment">#    port: 80</span></span><br><span class="line">        <span class="comment">#  initialDelaySeconds: 10</span></span><br><span class="line">        <span class="comment">#  periodSeconds: 3</span></span><br><span class="line">        <span class="comment">#  timeoutSeconds: 3</span></span><br><span class="line">        <span class="comment">#  failureThreshold: 3</span></span><br><span class="line">        <span class="comment">#readinessProbe:</span></span><br><span class="line">        <span class="comment">#  tcpSocket:</span></span><br><span class="line">        <span class="comment">#    host: mysql-svc</span></span><br><span class="line">        <span class="comment">#    port: 3306</span></span><br><span class="line">        <span class="comment">#  initialDelaySeconds: 3</span></span><br><span class="line">        <span class="comment">#  timeoutSeconds: 1</span></span><br><span class="line">        <span class="comment">#  periodSeconds: 2</span></span><br><span class="line">        <span class="comment">#  successThreshold: 3</span></span><br><span class="line">        <span class="comment">#  failureThreshold: 3</span></span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: WORDPRESS_DB_HOST</span><br><span class="line">          value: <span class="string">&#x27;mysql-svc&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_USER</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_NAME</span><br><span class="line">          value: <span class="string">&#x27;wp_db&#x27;</span></span><br><span class="line">        </span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: wp-pvc</span><br><span class="line">          mountPath: /var/www/html/</span><br><span class="line"></span><br><span class="line">2、运行</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f wp-dp-v2.yml</span><br><span class="line"></span><br><span class="line">3、到nfs机器查看挂载成功</span><br><span class="line">[root@nfs ~]# ll /data/wp1/</span><br><span class="line">-rw-r--r--  1 nfsnobody nfsnobody   405 Feb  6  2020 index.php</span><br><span class="line">-rw-r--r--  1 nfsnobody nfsnobody 19915 Jan  1  2024 license.txt</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240928181611313.png" alt="image-20240928181611313"></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉10、Kubernetes配置文件管理ConfigMap</title>
      <link href="/posts/b63dfd70.html"/>
      <url>/posts/b63dfd70.html</url>
      
        <content type="html"><![CDATA[<h2 id="Kubernetes配置文件管理ConfigMap">Kubernetes配置文件管理ConfigMap</h2><h3 id="1、ConfigMap的介绍"><strong>1、ConfigMap的介绍</strong></h3><p>作用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将配置文件和Pod解偶，方便管理配置文件</span><br></pre></td></tr></table></figure><p>ConfigMap里的配置文件如何储存的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一</span></span><br><span class="line">键值对的方式： </span><br><span class="line">key:value</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：</span></span><br><span class="line">文件名:配置文件的内容</span><br></pre></td></tr></table></figure><p>ConfigMap支持的配置类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、直接定义键值对</span><br><span class="line">2、基于文件创建的键值对</span><br></pre></td></tr></table></figure><p>ConfigMap创建方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、命令行</span><br><span class="line">2、资源清单</span><br></pre></td></tr></table></figure><p>ConfigMap的配置文件如何传递到pod里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、变量传递    (只是环境变量，又不会改变配置文件，所以毫无意义)</span><br><span class="line">2、数据卷挂载</span><br></pre></td></tr></table></figure><p>使用Configmap的限制条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、ConfigMap必须在pod之前创建，pod才能引用</span><br><span class="line">2、ConfigMap受限于名称空间的限制，只有处于同一个名称空间的pod才可以被引用</span><br></pre></td></tr></table></figure><h3 id="2、命令行创建ConfigMap"><strong>2、命令行创建ConfigMap</strong></h3><p>方式一：命令行创建键值对Key：value的储存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1、查看帮助</span><br><span class="line">[root@master01 kubernetes]# kubectl create configmap --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">2、创建configmap</span><br><span class="line">[root@master01 kubernetes]# kubectl create configmap nginx-config --from-literal=nginx_port=80 --from-literal=server_name=blog.test.com</span><br><span class="line"></span><br><span class="line">--from-literal：创建键值对的key=value</span><br><span class="line"></span><br><span class="line">3、查看</span><br><span class="line">[root@master01 kubernetes]# kubectl get cm</span><br><span class="line">NAME           DATA   AGE</span><br><span class="line">nginx-config   2      67s</span><br><span class="line"></span><br><span class="line">ConfigMap的名字：nginx-config，里面有2条数据</span><br><span class="line"></span><br><span class="line">4、查看详细信息</span><br><span class="line">[root@master01 kubernetes]# kubectl describe cm nginx-config </span><br><span class="line">Name:         nginx-config</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">nginx_port:</span><br><span class="line">----</span><br><span class="line">80</span><br><span class="line">server_name:</span><br><span class="line">----</span><br><span class="line">blog.test.com</span><br><span class="line">Events:  &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建这种键值对的没有意义，因为配置文件很少是键值对的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、引用ConfigMap，如果pod想要引用上面的ConfigMap，只能通过环境变量的形式</span><br></pre></td></tr></table></figure><p>通过变量传递到pod</p><p><img src="../image/study_img/image-20240928205743737.png" alt="image-20240928205743737"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# vim nginx-cm.yml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-cm</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-pod</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: NGINX_PORT</span><br><span class="line">      valueFrom:</span><br><span class="line">        configMapKeyRef:</span><br><span class="line">          name: nginx-config</span><br><span class="line">          key: nginx_port</span><br><span class="line"></span><br><span class="line">    - name: SERVER_NAME</span><br><span class="line">      valueFrom:</span><br><span class="line">        configMapKeyRef:</span><br><span class="line">          name: nginx-config</span><br><span class="line">          key: server_name</span><br><span class="line"></span><br><span class="line">6、启动pod</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-cm.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-cm                   1/1     Running   0          9s</span><br><span class="line"></span><br><span class="line">7、进入pod，查看pod已经引入了变量</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it nginx-cm -- /bin/sh</span><br><span class="line">/ <span class="comment"># echo $NGINX_PORT</span></span><br><span class="line">80</span><br><span class="line">/ <span class="comment"># echo $SERVER_NAME</span></span><br><span class="line">blog.test.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#虽然这两个变量传进来了，但是配置文件并没有改变，因为他不知道会传到哪个配置文件，没那么智能，只是传递变量</span></span><br></pre></td></tr></table></figure><p>方式二：基于文件形式创建ConfigMap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1、创建配置文件</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> &gt; www.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">server &#123;</span></span><br><span class="line"><span class="string">    listen 80;</span></span><br><span class="line"><span class="string">    server_name blog.test.com;</span></span><br><span class="line"><span class="string">    location / &#123;</span></span><br><span class="line"><span class="string">        root /usr/share/nginx/html/www;</span></span><br><span class="line"><span class="string">        index index.html index.htm;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">2、命令行创建ConfigMap资源</span><br><span class="line">kubectl create configmap [自定义的ConfigMap名字]  --from-file=[自定义的key名字]=[配置文件路径]</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl create configmap nginx-www  --from-file=test-www=./www.conf</span><br><span class="line"></span><br><span class="line">3、查看cm资源</span><br><span class="line">[root@master01 kubernetes]# kubectl get cm</span><br><span class="line">NAME           DATA   AGE</span><br><span class="line">nginx-www      1      117s</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240928214603450.png" alt="image-20240928214603450"></p><ul><li>通过挂载卷传递到pod</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# vim nginx-cm.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-cm-v1</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data-configmap</span><br><span class="line">    configMap:</span><br><span class="line">      name: nginx-www</span><br><span class="line">      items:</span><br><span class="line">      - key: test-www</span><br><span class="line">        path: wordpress.conf</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-pod</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data-configmap</span><br><span class="line">      mountPath: /etc/nginx/conf.d/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240928221503694.png" alt="image-20240928221503694"></p><ul><li>一次性创建ConfigMap的2个key</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1、准备配置文件</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> &gt; wp.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">server &#123;</span></span><br><span class="line"><span class="string">    listen 80;</span></span><br><span class="line"><span class="string">    server_name www.wp.com;</span></span><br><span class="line"><span class="string">    location / &#123;</span></span><br><span class="line"><span class="string">        root /usr/share/nginx/html/www;</span></span><br><span class="line"><span class="string">        index index.html index.htm;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> &gt; wc.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">server &#123;</span></span><br><span class="line"><span class="string">    listen 90;</span></span><br><span class="line"><span class="string">    server_name www.wc.com;</span></span><br><span class="line"><span class="string">    location / &#123;</span></span><br><span class="line"><span class="string">        root /usr/share/nginx/html/www;</span></span><br><span class="line"><span class="string">        index index.html index.htm;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">2、命令行创建ConfigMap</span><br><span class="line">[root@master01 kubernetes]# kubectl create configmap wp-wc-conf  --from-file=wp-conf=./wp.conf --from-file=wc-conf=./wc.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、查看</span><br><span class="line">[root@master01 ~]# kubectl get cm</span><br><span class="line">NAME           DATA   AGE</span><br><span class="line">nginx-config   2      126m</span><br><span class="line">nginx-www      1      45m</span><br><span class="line">wp-wc-conf     2      112s</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240928223040756.png" alt="image-20240928223040756"></p><p>一次性挂载2个文件进去</p><p><img src="../image/study_img/image-20240928225407162.png" alt="image-20240928225407162"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]#  vim wp-wc-configmap.yml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: wp-wc-cm</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: wp-wc-configmap</span><br><span class="line">    configMap:</span><br><span class="line">      name: wp-wc-conf</span><br><span class="line">      items:</span><br><span class="line">      - key: wp-conf</span><br><span class="line">        path: wordpress.conf</span><br><span class="line">      - key: wc-conf</span><br><span class="line">        path: wecenter.conf</span><br><span class="line"></span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-pod</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: wp-wc-configmap</span><br><span class="line">      mountPath: /etc/nginx/conf.d/</span><br><span class="line"></span><br><span class="line">2、运行，并查看</span><br><span class="line">[root@master01 kubernetes]#  kubectl apply -f wp-wc-configmap.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">wp-wc-cm                   1/1     Running   0          5s</span><br><span class="line"></span><br><span class="line">3、进入pod查看挂载成功</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it wp-wc-cm -- /bin/sh</span><br><span class="line">/ <span class="comment"># ls -l /etc/nginx/conf.d/</span></span><br><span class="line">lrwxrwxrwx    1 root     root            20 Sep 28 14:41 wecenter.conf -&gt; ..data/wecenter.conf</span><br><span class="line">lrwxrwxrwx    1 root     root            21 Sep 28 14:41 wordpress.conf -&gt; ..data/wordpress.conf</span><br><span class="line">/ <span class="comment"># cat /etc/nginx/conf.d/wecenter.conf &amp;&amp; cat /etc/nginx/conf.d/wordpress.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 90;</span><br><span class="line">    server_name www.wc.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/www;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.wp.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/www;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试动态修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# kubectl get cm</span><br><span class="line">NAME           DATA   AGE</span><br><span class="line">wp-wc-conf     2      30m</span><br><span class="line"></span><br><span class="line">1、修改</span><br><span class="line">[root@master01 kubernetes]# kubectl edit cm wp-wc-conf</span><br><span class="line">        listen 91;</span><br><span class="line">......</span><br><span class="line">        listen 81;</span><br><span class="line">        </span><br><span class="line">2、再次进入容器内观察也会自动更新</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it wp-wc-cm -- /bin/sh</span><br><span class="line">/ <span class="comment"># cat /etc/nginx/conf.d/wecenter.conf &amp;&amp; cat /etc/nginx/conf.d/wordpress.conf </span></span><br><span class="line"></span><br><span class="line">3、但是端口没有变</span><br><span class="line">/ <span class="comment">#  netstat -lntup</span></span><br><span class="line">tcp        0      0 0.0.0.0:80 </span><br><span class="line">tcp        0      0 0.0.0.0:90</span><br><span class="line"></span><br><span class="line">4、需要重启服务才可以生效，需要删除资源再重启，如果是pod资源就不能删除重启，pod资源就删除，重新应用一下</span><br><span class="line">[root@master01 kubernetes]#  kubectl delete -f wp-wc-configmap.yml</span><br><span class="line">[root@master01 kubernetes]#  kubectl apply -f wp-wc-configmap.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it wp-wc-cm -- /bin/sh</span><br><span class="line">/ <span class="comment"># netstat -lntup      </span></span><br><span class="line">tcp        0      0 0.0.0.0:81              0.0.0.0:*             </span><br><span class="line">tcp        0      0 0.0.0.0:91              0.0.0.0:*            </span><br><span class="line"><span class="comment"># 动态修改配置文件，但是无法重新加载服务 （有一些企业用Nacos服务：配置管理中心，改完了就帮你重新加载服务）</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">以上操作把配置文件挂到pod里面了，需要先准备配置文件，但是还有缺陷，需要提前准备配置文件</span><br><span class="line">但有的资源清单，比如kube-flannel，没有准备配置文件，使用资源清单创建ConfigMap就不需要提前准备</span><br></pre></td></tr></table></figure><h3 id="3、使用资源清单创建configmap"><strong>3、使用资源清单创建configmap</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">为避免冲突，删除上次实验创建的cm和pod</span><br><span class="line"></span><br><span class="line">1、创建资源清单</span><br><span class="line">root@master01 kubernetes]# vim wp-wc-configmap.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: wp-wc-conf</span><br><span class="line">  namespace: default</span><br><span class="line">data:</span><br><span class="line">  wp-key: |</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 88;</span><br><span class="line">        server_name www.wwpp.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root /usr/share/nginx/html/www;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  wc-key: |</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 99;</span><br><span class="line">        server_name www.wwcc.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root /usr/share/nginx/html/www;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: wp-wc-cm2</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: wp-wc-configmap</span><br><span class="line">    configMap:</span><br><span class="line">      name: wp-wc-conf</span><br><span class="line">      items:</span><br><span class="line">      - key: wp-key</span><br><span class="line">        path: wordpress.conf</span><br><span class="line">      - key: wc-key</span><br><span class="line">        path: wecenter.conf</span><br><span class="line"></span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-pod</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: wp-wc-configmap</span><br><span class="line">      mountPath: /etc/nginx/conf.d/</span><br><span class="line"></span><br><span class="line">2、运行，并且查看详细信息</span><br><span class="line">root@master01 kubernetes]# kubectl apply -f wp-wc-configmap.yml </span><br><span class="line">configmap/wp-wc-conf created</span><br><span class="line">pod/wp-wc-cm2 created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">wp-wc-cm2                  1/1     Running   0          2m42s</span><br><span class="line">[root@master01 kubernetes]# kubectl get cm</span><br><span class="line">NAME         DATA   AGE</span><br><span class="line">wp-wc-conf   2      21s</span><br><span class="line">[root@master01 kubernetes]# kubectl describe cm wp-wc-conf</span><br><span class="line">Name:         wp-wc-conf</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">wc-key:</span><br><span class="line">----</span><br><span class="line">server &#123;</span><br><span class="line">    listen 99;</span><br><span class="line">    server_name www.wwcc.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/www;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wp-key:</span><br><span class="line">----</span><br><span class="line">server &#123;</span><br><span class="line">    listen 88;</span><br><span class="line">    server_name www.wwpp.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/www;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、进入容器并查看配置文件</span><br><span class="line">[root@master01 ~]# kubectl <span class="built_in">exec</span> -it wp-wc-cm2 -- /bin/sh</span><br><span class="line">/# <span class="built_in">cat</span> /etc/nginx/conf.d/wecenter.conf &amp;&amp; <span class="built_in">cat</span> /etc/nginx/conf.d/wordpress.conf </span><br><span class="line">/# netstat -lntup</span><br><span class="line">tcp        0      0 0.0.0.0:88</span><br><span class="line">tcp        0      0 0.0.0.0:99</span><br><span class="line"></span><br><span class="line">4、动态修改能够修改，但是不生效</span><br></pre></td></tr></table></figure><h3 id="4、wordpress综合练习"><strong>4、wordpress综合练习</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## wordpress 要运行在k8s中</span></span><br><span class="line"><span class="comment">## MySQL</span></span><br><span class="line">1.名称空间： blog</span><br><span class="line">2.镜像mysql:5.7</span><br><span class="line">3.环境变量</span><br><span class="line">        - root密码：123</span><br><span class="line">        - 数据库：wordpress</span><br><span class="line">        - 用户：wordpress</span><br><span class="line">        - 参数：字符集</span><br><span class="line">4.数据持久化：在宿主机的/data/mysql/data</span><br><span class="line"></span><br><span class="line"><span class="comment">## mysql-svc需求</span></span><br><span class="line">名称空间：blog</span><br><span class="line"></span><br><span class="line"><span class="comment">## wordpress需求</span></span><br><span class="line">副本数为:2</span><br><span class="line">镜像：wordpress:latest</span><br><span class="line">数据库地址：cluster ip</span><br><span class="line">数据库名称：wordpress</span><br><span class="line">用户：wordpress</span><br><span class="line"></span><br><span class="line">******** 使用NFS持久化数据，宿主机：/data/wordpress/data 10.0.0.31</span><br><span class="line"></span><br><span class="line">mysql deployment</span><br><span class="line">mysql clusterip</span><br><span class="line">wordpress deployment</span><br><span class="line">wordpress clusterip</span><br><span class="line">wordpress ingress</span><br><span class="line">wordpress hpa</span><br></pre></td></tr></table></figure><p>资源清单如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="comment"># 名称空间</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: blog</span><br><span class="line">---</span><br><span class="line"><span class="comment"># mysql的PV资源</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-pv</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: mysql-hostpath</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi</span><br><span class="line">  hostPath:</span><br><span class="line">    path: /data/wp-db</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># mysql的pvc资源</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-pvc</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: mysql-pvc</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 5Gi</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># mysql的deploy资源</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-deploy</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      run: mysql-deploy</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: mysql-pod</span><br><span class="line">      namespace: blog</span><br><span class="line">      labels:</span><br><span class="line">        run: mysql-deploy</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: db-pvc</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: mysql-pvc</span><br><span class="line">      containers:</span><br><span class="line">      - name: mysql-container</span><br><span class="line">        image: mysql:5.7</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        livenessProbe:</span><br><span class="line">          tcpSocket:</span><br><span class="line">            port: 3306</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 1</span><br><span class="line">          timeoutSeconds: 10</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        - name: MYSQL_DATABASE</span><br><span class="line">          value: <span class="string">&#x27;wordpress&#x27;</span></span><br><span class="line">        - name: MYSQL_USER</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: MYSQL_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: db-pvc</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># mysql的service资源</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-service</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    run: mysql-deploy</span><br><span class="line">  ports:</span><br><span class="line">  - name: mysql</span><br><span class="line">    protocol: TCP</span><br><span class="line">    port: 3306</span><br><span class="line">    targetPort: 3306</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># wordpress的PV资源</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-pv</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: wordpress-nfs</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/wp</span><br><span class="line">    server: 172.16.1.31</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment">#wordpress的PVC</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-pvc</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  storageClassName: wordpress-nfs</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 5Gi</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># wordpress的deployment的资源</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-deploy</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      run: wordpress-deploy</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        run: wordpress-deploy</span><br><span class="line">      name: wordpress-pod </span><br><span class="line">      namespace: blog</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: web-pvc</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: wordpress-pvc</span><br><span class="line">      containers:</span><br><span class="line">      - name: wordpress-container</span><br><span class="line">        image: wordpress</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        <span class="comment">#livenessProbe:</span></span><br><span class="line">        <span class="comment">#  httpGet:</span></span><br><span class="line">        <span class="comment">#    path: /</span></span><br><span class="line">        <span class="comment">#    port: 80</span></span><br><span class="line">        <span class="comment">#  failureThreshold: 3</span></span><br><span class="line">        <span class="comment">#  initialDelaySeconds: 5</span></span><br><span class="line">        <span class="comment">#  periodSeconds: 1</span></span><br><span class="line">        <span class="comment">#  timeoutSeconds: 10</span></span><br><span class="line">        readinessProbe:</span><br><span class="line">          tcpSocket:</span><br><span class="line">            port: 3306</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">          initialDelaySeconds: 3</span><br><span class="line">          periodSeconds: 1</span><br><span class="line">          successThreshold: 3</span><br><span class="line">          timeoutSeconds: 10</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: WORDPRESS_DB_HOST</span><br><span class="line">          value: <span class="string">&#x27;mysql-service&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_USR</span><br><span class="line">          value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_DATABASE</span><br><span class="line">          value: <span class="string">&#x27;wordpress&#x27;</span></span><br><span class="line">        - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">          value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: web-pvc</span><br><span class="line">          mountPath: /var/www/html</span><br><span class="line">---</span><br><span class="line"><span class="comment"># wordpress的service资源</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-service</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    run: wordpress-deploy</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># wordpress的HPA资源</span></span><br><span class="line">apiVersion: autoscaling/v1</span><br><span class="line">kind: HorizontalPodAutoscaler</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-hpa</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  maxReplicas: 10</span><br><span class="line">  minReplicas: 2</span><br><span class="line">  scaleTargetRef:</span><br><span class="line">    apiVersion: apps/v1</span><br><span class="line">    kind: Deployment</span><br><span class="line">    name: wordpress-deploy</span><br><span class="line">  targetCPUUtilizationPercentage: 50</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># wordpress的ingress资源</span></span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-ingress</span><br><span class="line">  namespace: blog</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">    - host: wp.web.com</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">        - path: /</span><br><span class="line">          pathType: Prefix</span><br><span class="line">          backend:</span><br><span class="line">            service:</span><br><span class="line">              name: wordpress-service</span><br><span class="line">              port:</span><br><span class="line">                number: 80</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉11、K8s资源限制和Prometheus监控</title>
      <link href="/posts/aef7182b.html"/>
      <url>/posts/aef7182b.html</url>
      
        <content type="html"><![CDATA[<h2 id="K8s资源限制和Prometheus监控">K8s资源限制和Prometheus监控</h2><h3 id="1、K8s里的Pod资源限制"><strong>1、K8s里的Pod资源限制</strong></h3><p>资源限制的资源清单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">1、资源清单的编写</span><br><span class="line">[root@master01 kubernetes]# vim limit.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: resource-demo</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: resource-demo</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    resources:</span><br><span class="line">    <span class="comment">#最小的需求</span></span><br><span class="line">      requests:</span><br><span class="line">      <span class="comment">#内存最小需求</span></span><br><span class="line">        memory: 50Mi</span><br><span class="line">      <span class="comment">#cpu的最小需求</span></span><br><span class="line">        cpu: 200m</span><br><span class="line">      <span class="comment">#限制占用磁盘最小需求</span></span><br><span class="line">        <span class="comment">#storage: 3Gi</span></span><br><span class="line">      <span class="comment">#最大需求</span></span><br><span class="line">      limits:</span><br><span class="line">        memory: 100Mi</span><br><span class="line">        cpu: 1500m</span><br><span class="line">        <span class="comment">#storage: 5Gi</span></span><br><span class="line">        </span><br><span class="line">2、运行</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f limit.yaml</span><br></pre></td></tr></table></figure><p>参数解释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">requests：节点所需的最小计算资源，k8s调度的时候的依据值</span><br><span class="line"></span><br><span class="line">limits：限制允许的最大计算资源，真正的资源限制参数</span><br></pre></td></tr></table></figure><p>数值转换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 CPU = 1000m     m是毫核</span><br><span class="line">0.5 CPU = 500m</span><br><span class="line">1 Mib = 1024 Kib</span><br><span class="line">1 MB = 1000 KB</span><br></pre></td></tr></table></figure><p>验证方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器ID | grep CgroupParent</span><br><span class="line"><span class="built_in">cd</span> /sys/fs/cgroup/cpu/kubepods.slice/kubepods-burstable.slice/过滤出来的结果</span><br><span class="line"><span class="built_in">cat</span> cpu.cfs_quota_us</span><br><span class="line"></span><br><span class="line">1、查看起在哪个node</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE     IP           NODE</span><br><span class="line">resource-demo                   1/1     Running   0          4m19s   10.2.3.114   node03</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、查看node03上的容器</span><br><span class="line">[root@node03 ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                                               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">2463239ecc3f        c7b4f26a7d93                                        <span class="string">&quot;/docker-entrypoint.…&quot;</span>   5 minutes ago       Up 5 minutes                            k8s_resource-demo_resource-demo_default_cb221617-6b64-41d8-83de-d1766988dddd_0</span><br><span class="line"></span><br><span class="line">[root@node03 ~]# docker inspect 2463239ecc3f | grep CgroupParent</span><br><span class="line">            <span class="string">&quot;CgroupParent&quot;</span>: <span class="string">&quot;kubepods-burstable-podcb221617_6b64_41d8_83de_d1766988dddd.slice&quot;</span>,</span><br><span class="line">            </span><br><span class="line">[root@node03 ~]# <span class="built_in">cd</span> /sys/fs/cgroup/cpu/kubepods.slice/kubepods-burstable.slice/kubepods-burstable-podcb221617_6b64_41d8_83de_d1766988dddd.slice</span><br><span class="line"></span><br><span class="line">[root@node03 kubepods-burstable-podcb221617_6b64_41d8_83de_d1766988dddd.slice]# <span class="built_in">cat</span> cpu.cfs_quota_us</span><br><span class="line">150000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果查看到的结果是-1，就是没做限制</span></span><br><span class="line">不能盲目的做资源限制，所以要做监控</span><br></pre></td></tr></table></figure><h3 id="2、Prometheus的介绍"><strong>2、Prometheus的介绍</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   Prometheus是一个开源系统监控和警报工具包，最初是在SoundCloud上构建的。自2012年成立以来，许多公司和组织都采用了Prometheus，该项目拥有非常活跃的开发者和用户社区。</span><br><span class="line">   </span><br><span class="line">Prometheus现在是一个独立的开源项目，独立于任何公司进行维护。为了强调这一点，并澄清项目的治理结构，Prometheus于2016年加入云原生计算基金会，作为继Kubernetes之后的第二个托管项目。</span><br><span class="line"></span><br><span class="line">我们可以简单的理解Prometheus是一个监控系统同时也是一个时间序列数据库。</span><br><span class="line"></span><br><span class="line">推荐阅读:</span><br><span class="line">    官网地址：https://prometheus.io</span><br><span class="line">    官方文档：https://prometheus.io/docs/introduction/overview/</span><br><span class="line">    GitHub地址：https://github.com/prometheus</span><br><span class="line">    架构图地址：https://prometheus.io/docs/introduction/overview/</span><br></pre></td></tr></table></figure><h3 id="3、Prometheus架构"><strong>3、Prometheus架构</strong></h3><p><img src="../image/study_img/image-20240926113735188.png" alt="image-20240926113735188"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">如下图所示，展示了普罗米修斯(prometheus)的建筑和它的一些生态系统组成部分。</span><br><span class="line">(1)Prometheus server:</span><br><span class="line">    prometheus的服务端，负责收集指标和存储时间序列数据，并提供查询接口。</span><br><span class="line"></span><br><span class="line">(2)exporters:</span><br><span class="line">    如果想要监控，前提是能获取被监控端数据，并且这个数据格式必须遵循Prometheus数据模型，这样才能识别和采集，一般使用exporter数据采集器(类似于zabbix_agent端)提供监控指标数据。</span><br><span class="line">    exporter数据采集器，除了官方和GitHub提供的常用组件exporter外，我们也可以为自己自研的产品定制exporters组件哟。</span><br><span class="line"></span><br><span class="line">(3)Pushgateway:</span><br><span class="line">    短期存储指标数据，主要用于临时性的任务。比如备份数据库任务监控等。</span><br><span class="line">本质上我们可以理解为Pushgateway可以帮咱们监控自定义的监控项，这需要咱们自己编写脚本来推送到Pushgateway端，而后由Prometheus server从Pushgateway去pull监控数据。</span><br><span class="line">    换句话说，请不要被官方的架构图蒙骗了，咱们完全可以基于Pushgateway来监控咱们自定义的监控项哟，这些监控项完全可以是长期运行的呢！</span><br><span class="line"></span><br><span class="line">(4)Service discovery:</span><br><span class="line">    服务发现，例如我们可以配置动态的服务监控，无需重启Prometheus server实例就能实现动态监控。</span><br><span class="line"></span><br><span class="line">(5)Alertmanager:</span><br><span class="line">    支持报警功能，比如可以支持基于邮件，微信，钉钉报警。</span><br><span class="line">    据网友反馈该组件在生产环境中存在缺陷，因此我们可以考虑使用Grafana来展示并实现报警功能。</span><br><span class="line"></span><br><span class="line">(6)Prometheus Web UI</span><br><span class="line">    Prometheus比较简单的Web控制台，通常我们可以使用grafana来集成做更漂亮的Web展示哟。</span><br><span class="line">温馨提示:</span><br><span class="line">    大多数Prometheus组件都是用Go编写的，这使得它们易于构建和部署为静态二进制文件</span><br></pre></td></tr></table></figure><h3 id="4、二进制方式部署Prometheus"><strong>4、二进制方式部署Prometheus</strong></h3><p>环境准备</p><table><thead><tr><th>hostname</th><th>ip</th><th>roles</th><th>配置(application)</th><th>配置</th></tr></thead><tbody><tr><td>master01</td><td>10.0.0.200  /  172.16.1.200</td><td>Prometheus服务端</td><td>promethues,pushgateway,alertmanager,<br/>node_exporter,cAdVidor，grafana</td><td>1h2G</td></tr><tr><td>node01</td><td>10.0.0.201  /  172.16.1.201</td><td>prometheus客户端(收集数据指标)</td><td>node_exporter,cAdVidor</td><td>1h2G</td></tr><tr><td>node02</td><td>10.0.0.202  /  172.16.1.202</td><td>prometheus客户端(收集数据指标)</td><td>node_exporter,cAdVidor</td><td>1h2G</td></tr><tr><td>node03</td><td>10.0.0.203  /  172.16.1.203</td><td>prometheus客户端(收集数据指标)</td><td>node_exporter,cAdVidor</td><td>2h4G</td></tr></tbody></table><p>1、下载包</p><p><img src="../image/study_img/image-20240926155738935.png" alt="image-20240926155738935"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">pushgateway：自定义监控</span><br><span class="line">alertmanager：告警</span><br><span class="line">node_exporter：master起容器了，apiserver，controller组件都是以容器方式起来的需要监控</span><br><span class="line">cAdVidor：监控容器</span><br><span class="line"></span><br><span class="line">https://prometheus.io/download/</span><br><span class="line"></span><br><span class="line">1、下载二进制包</span><br><span class="line">版本的选择bata是预上线版本，当前稳定版LTS   生产中最好用文档版的</span><br><span class="line"><span class="comment">#下载Prometheus</span></span><br><span class="line">wget https://github.com/prometheus/prometheus/releases/download/v2.54.1/prometheus-2.54.1.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载alertmanager（告警组件）</span></span><br><span class="line">wget https://github.com/prometheus/alertmanager/releases/download/v0.27.0/alertmanager-0.27.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载node_exporter(宿主机指标收集器)</span></span><br><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载pushgateway（自定义监控组件）</span></span><br><span class="line">cAdVidor不是自己的组件</span><br></pre></td></tr></table></figure><p>2、部署Prometheus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1、安装Prometheus</span><br><span class="line">[root@master01 ~]# tar xf prometheus-2.54.1.linux-amd64.tar.gz -C /app</span><br><span class="line">[root@master01 ~]# <span class="built_in">mv</span> /app/prometheus-2.54.1.linux-amd64 /app/prometheus-2.54.1</span><br><span class="line">[root@master01 ~]# <span class="built_in">ln</span> -s /app/prometheus-2.54.1 /app/prometheus</span><br><span class="line">制作好软连接，就安装完成</span><br><span class="line"></span><br><span class="line">[root@master01 prometheus-2.54.1]# ll /app/</span><br><span class="line">lrwxrwxrwx 1 root root    22 Sep 26 12:01 prometheus -&gt; /app/prometheus-2.54.1</span><br><span class="line">drwxr-xr-x 4 1001 docker 132 Sep 26 12:44 prometheus-2.54.1</span><br><span class="line">[root@master01 ~]# ll /app/prometheus-2.54.1/</span><br><span class="line">total 265552</span><br><span class="line">drwxr-xr-x 2 1001 docker        38 Aug 27 19:11 console_libraries#库文件</span><br><span class="line">drwxr-xr-x 2 1001 docker       173 Aug 27 19:11 consoles</span><br><span class="line">-rw-r--r-- 1 1001 docker     11357 Aug 27 19:11 LICENSE</span><br><span class="line">-rw-r--r-- 1 1001 docker      3773 Aug 27 19:11 NOTICE</span><br><span class="line">-rwxr-xr-x 1 1001 docker 140096826 Aug 27 18:58 prometheus <span class="comment">#启动程序</span></span><br><span class="line">-rw-r--r-- 1 1001 docker       934 Aug 27 19:11 prometheus.yml  <span class="comment">#配置文件</span></span><br><span class="line">-rwxr-xr-x 1 1001 docker 131802216 Aug 27 18:58 promtool</span><br></pre></td></tr></table></figure><p>​    Prometheus配置文件解读</p><p><img src="../image/study_img/image-20240926163353506.png" alt="image-20240926163353506"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">2、修改配置文件</span><br><span class="line">[root@master01 prometheus-2.54.1]# vim prometheus.yml</span><br><span class="line">......</span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.200:9090&quot;</span>]</span><br><span class="line">     <span class="comment">#这里写Prometheus的安装机器的ip:端口</span></span><br><span class="line"> </span><br><span class="line">3、查看帮助，查看启动服务都需要哪些参数 </span><br><span class="line">[root@master01 prometheus]# /app/prometheus/prometheus --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、启动Prometheus</span><br><span class="line">[root@master01 prometheus]# /app/prometheus/prometheus --config.file=/app/prometheus/prometheus.yml &amp;</span><br><span class="line">会有日志输出在终端</span><br><span class="line"><span class="comment">#启动之后，这次不需要写systemd脚本管理，这次使用另外一种管理方式supervisor</span></span><br><span class="line"></span><br><span class="line">5、浏览器访问</span><br><span class="line">10.0.0.200:9090</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926164644789.png" alt="image-20240926164644789"></p><p>3、二进制安装node_export，并加入Prometheus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1、安装</span><br><span class="line">[root@master01 ~]# tar xf node_exporter-1.8.2.linux-amd64.tar.gz -C /app</span><br><span class="line">[root@master01 app]# <span class="built_in">mv</span> /app/node_exporter-1.8.2.linux-amd64/ /app/node_exporter-1.8.2</span><br><span class="line">[root@master01 app]# <span class="built_in">ln</span> -s /app/node_exporter-1.8.2 /app/node_exporter</span><br><span class="line"><span class="comment">#这里可以先做第5步，把配置文件改了</span></span><br><span class="line"></span><br><span class="line">2、查看</span><br><span class="line">[root@master01 app]# <span class="built_in">cd</span> /app/node_exporter</span><br><span class="line">[root@master01 node_exporter]# ll</span><br><span class="line">total 20040</span><br><span class="line">-rw-r--r-- 1 1001 1002    11357 Jul 14 19:57 LICENSE</span><br><span class="line">-rwxr-xr-x 1 1001 1002 20500541 Jul 14 19:54 node_exporter <span class="comment">#启动程序文件</span></span><br><span class="line">-rw-r--r-- 1 1001 1002      463 Jul 14 19:57 NOTICE</span><br><span class="line"></span><br><span class="line">3、启动</span><br><span class="line">[root@master01 node_exporter]# /app/node_exporter/node_exporter  &amp;</span><br><span class="line">启动，之后，Prometheus挂了</span><br><span class="line"></span><br><span class="line">4、浏览器访问</span><br><span class="line">10.0.0.200:9100</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926170004149.png" alt="image-20240926170004149"></p><p><img src="../image/study_img/image-20240926170140793.png" alt="image-20240926170140793"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">5、修改配置文件，将node_exporter的信息加入Prometheus</span><br><span class="line">[root@master01 prometheus-2.54.1]# vim prometheus.yml</span><br><span class="line">......</span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.200:9090&quot;</span>]</span><br><span class="line">  - job_name: <span class="string">&quot;node_exporter&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">    <span class="comment">#写node_exporter的地址和端口</span></span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.200:9100&quot;</span>]</span><br><span class="line">      </span><br><span class="line">6、再次重新启动Prometheus</span><br><span class="line">[root@master01 prometheus]# <span class="built_in">jobs</span></span><br><span class="line">[1]-  Running                 /app/prometheus/prometheus --config.file=/app/prometheus/prometheus.yml &amp;</span><br><span class="line">[2]+  Running                 /app/node_exporter/node_exporter &amp;  (wd: /app/node_exporter)</span><br><span class="line">[root@master01 prometheus]# <span class="built_in">kill</span> %1</span><br><span class="line"></span><br><span class="line">[root@master01 prometheus]# /app/prometheus/prometheus --config.file=/app/prometheus/prometheus.yml &amp;</span><br><span class="line"></span><br><span class="line">7、刷新页面，可以看到node_exporter的节点</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926171311595.png" alt="image-20240926171311595"></p><p>4、部署supervisor</p><p>node_exporter和Prometheus服务,启停没有使用systemd管理，这次使用supervisor管理服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">1、安装supervisor   是python写的</span><br><span class="line">[root@master01 prometheus-2.54.1]# yum -y install supervisor</span><br><span class="line">[root@master01 prometheus]# systemctl start supervisord</span><br><span class="line">[root@master01 prometheus]# systemctl <span class="built_in">enable</span> supervisord</span><br><span class="line">如果公司有一些前端或者后端的页面要启动都可以放到这里管理</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、查看配置文件</span><br><span class="line">[root@master01 prometheus]# vim /etc/supervisord.conf </span><br><span class="line">[include]</span><br><span class="line">files = supervisord.d/*.ini   <span class="comment">#子配置文件的写法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、编写promethues启动脚本</span><br><span class="line">[root@master01 prometheus]# vim /etc/supervisord.d/prome.ini</span><br><span class="line">[program:prometheus]</span><br><span class="line">directory=/app/prometheus/</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/app/prometheus/prometheus --config.file=/app/prometheus/prometheus.yml&quot;</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/var/log/prome_stdout.log</span><br><span class="line">stderr_logfile=/var/log/prome_stderr.log</span><br><span class="line">user=root</span><br><span class="line">stopsignal=TERM</span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#进程/程序：程序名</span></span><br><span class="line">[program:prometheus]</span><br><span class="line"><span class="comment">#程序的工作目录</span></span><br><span class="line">directory=/app/prometheus/</span><br><span class="line"><span class="comment">#启动命令</span></span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/app/prometheus/prometheus --config.file=/app/prometheus/prometheus.yml&quot;</span></span><br><span class="line"><span class="comment">#自动启动，可以看做开机自启动，只要superviso启动，他就启动，所以要给superviso设置开机自启动</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line"><span class="comment">#自动启动</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line"><span class="comment">#标准输出的日志</span></span><br><span class="line">stdout_logfile=/var/log/prome_stdout.log</span><br><span class="line"><span class="comment">#错误输出的日志</span></span><br><span class="line">stderr_logfile=/var/log/prome_stderr.log</span><br><span class="line"><span class="comment">#程序的启动用户</span></span><br><span class="line">user=root</span><br><span class="line"><span class="comment">#stop的信号是term，kill -l可以看到所有信号，有一个15)的信号 相当于kill -15 进程名，这个是最标准最安全的杀进程</span></span><br><span class="line">stopsignal=TERM</span><br><span class="line"><span class="comment">#启动的超时时间5s，超过5s没起来就是超时</span></span><br><span class="line">startsecs=5</span><br><span class="line"><span class="comment">#重试次数</span></span><br><span class="line">startretries=3</span><br><span class="line"><span class="comment">#如果你的这个脚本停了，这个脚本里面的其他程序也停掉</span></span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line"><span class="comment">#这个脚本里面的其中一个服务杀掉，其他服务也杀掉</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、需要更新启动脚本,每次更改这个启动脚本都要更新，相当于执行systemctl daemon-reload</span><br><span class="line">[root@master01 prometheus]# supervisorctl update</span><br><span class="line">prometheus: added process group</span><br><span class="line"></span><br><span class="line">5、先把后台的2个进程停止掉，</span><br><span class="line">[root@master01 prometheus]# <span class="built_in">jobs</span></span><br><span class="line">[2]-  Running                 /app/node_exporter/node_exporter &amp;  (wd: /app/node_exporter)</span><br><span class="line">[3]+  Running                 /app/prometheus/prometheus --config.file=/app/prometheus/prometheus.yml &amp;</span><br><span class="line">[root@master01 prometheus]# <span class="built_in">kill</span> %1</span><br><span class="line">-bash: <span class="built_in">kill</span>: %1: no such job</span><br><span class="line">[root@master01 prometheus]# <span class="built_in">kill</span> %2</span><br><span class="line">[root@master01 prometheus]# <span class="built_in">kill</span> %3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、supervisor控制服务的启停</span><br><span class="line">[root@master01 prometheus]# supervisorctl start all</span><br><span class="line">prometheus: started</span><br><span class="line">[root@master01 prometheus]# supervisorctl stop all</span><br><span class="line">prometheus: stopped</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">[root@master01 prometheus]# supervisorctl stop prometheus</span><br><span class="line">prometheus: stopped</span><br><span class="line">[root@master01 prometheus]# supervisorctl start prometheus</span><br><span class="line">prometheus: started</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926181219003.png" alt="image-20240926181219003"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#supervisor的多服务管理</span></span><br><span class="line">7、编写node_exporter的启动脚本</span><br><span class="line">[root@master01 prometheus]# vim /etc/supervisord.d/prome.ini</span><br><span class="line">[program:prometheus]</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="comment">#加入node_exporter的启停止脚本</span></span><br><span class="line">[program:node_exporter]</span><br><span class="line">directory=/app/node_exporter/</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/app/node_exporter/node_exporter&quot;</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/var/log/node_exporter_stdout.log</span><br><span class="line">stderr_logfile=/var/log/node_exporter_stderr.log</span><br><span class="line">user=root</span><br><span class="line">stopsignal=TERM</span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">8、更新启动脚本</span><br><span class="line">[root@master01 prometheus]# supervisorctl update</span><br><span class="line">node_exporter: added process group</span><br><span class="line">加进去会自动启动，因为写了autostart=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9、如果使用如下目录，就会2个服务一起启动或停止</span><br><span class="line">[root@master01 prometheus]# supervisorctl stop all</span><br><span class="line">node_exporter: stopped</span><br><span class="line">prometheus: stopped</span><br><span class="line">[root@master01 prometheus]# supervisorctl start all</span><br><span class="line">node_exporter: started</span><br><span class="line">prometheus: started</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# supervisorctl status</span><br><span class="line">node_exporter                    RUNNING   pid 33788, <span class="built_in">uptime</span> 0:05:37</span><br><span class="line">prometheus                       RUNNING   pid 33789, <span class="built_in">uptime</span> 0:05:37</span><br></pre></td></tr></table></figure><p>5、安装pushgateway</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">1、安装</span><br><span class="line">[root@master01 ~]# tar xf pushgateway-1.10.0.linux-amd64.tar.gz  -C /app/</span><br><span class="line">[root@master01 ~]# <span class="built_in">mv</span> /app/pushgateway-1.10.0.linux-amd64/ /app/pushgateway-1.10.0</span><br><span class="line">[root@master01 ~]# <span class="built_in">ln</span> -s /app/pushgateway-1.10.0/ /app/pushgateway</span><br><span class="line"></span><br><span class="line">2、启动命令</span><br><span class="line">[root@master01 ~]# /app/pushgateway/pushgateway</span><br><span class="line"></span><br><span class="line">3、修改启动脚本</span><br><span class="line">[root@master01 ~]# vim /etc/supervisord.d/prome.ini</span><br><span class="line">[program:prometheus]</span><br><span class="line">[program:node_exporter]</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="comment">#加入pushgateway的启停止脚本</span></span><br><span class="line">[program:pushgateway]</span><br><span class="line">directory=/app/pushgateway/</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/app/pushgateway/pushgateway&quot;</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/var/log/pushgateway_stdout.log</span><br><span class="line">stderr_logfile=/var/log/pushgateway_stderr.log</span><br><span class="line">user=root</span><br><span class="line">stopsignal=TERM</span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">4、更新启动脚本</span><br><span class="line">[root@master01 prometheus]# supervisorctl update</span><br><span class="line">pushgateway: added process group</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# supervisorctl status</span><br><span class="line">node_exporter                    RUNNING   pid 33788, <span class="built_in">uptime</span> 1:20:01</span><br><span class="line">prometheus                       RUNNING   pid 33789, <span class="built_in">uptime</span> 1:20:01</span><br><span class="line">pushgateway                      RUNNING   pid 77783, <span class="built_in">uptime</span> 0:01:20</span><br><span class="line"></span><br><span class="line">5、浏览器访问</span><br><span class="line">10.0.0.200:9091</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926195532979.png" alt="image-20240926195532979"></p><p>6、部署alertmanager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1、安装</span><br><span class="line">[root@master01 ~]# tar xf alertmanager-0.27.0.linux-amd64.tar.gz -C /app/</span><br><span class="line">[root@master01 ~]# <span class="built_in">mv</span> /app/alertmanager-0.27.0.linux-amd64/ /app/alertmanager-0.27.0</span><br><span class="line">[root@master01 ~]# <span class="built_in">ln</span> -s /app/alertmanager-0.27.0/ /app/alertmanager</span><br><span class="line">[root@master01 ~]# ll /app/alertmanager/</span><br><span class="line">里面有配置文件，但是不需要改</span><br><span class="line"></span><br><span class="line">2、查看帮助</span><br><span class="line">[root@master01 ~]# /app/alertmanager/alertmanager  --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">3、启动</span><br><span class="line">[root@master01 ~]# /app/alertmanager/alertmanager  --config.file=/app/alertmanager/alertmanager.yml </span><br><span class="line"></span><br><span class="line">4、浏览器访问</span><br><span class="line">10.0.0.200:9093</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926194338396.png" alt="image-20240926194338396"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">5、修改启动脚本</span><br><span class="line">[root@master01 ~]# vim /etc/supervisord.d/prome.ini</span><br><span class="line">[program:prometheus]</span><br><span class="line">[program:node_exporter]</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="comment">#加入alertmanager的启停止脚本</span></span><br><span class="line">[program:alertmanager]</span><br><span class="line">directory=/app/alertmanager/</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/app/alertmanager/alertmanager  --config.file=/app/alertmanager/alertmanager.yml &quot;</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/var/log/alertmanager_stdout.log</span><br><span class="line">stderr_logfile=/var/log/alertmanager_stderr.log</span><br><span class="line">user=root</span><br><span class="line">stopsignal=TERM</span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">8、更新启动脚本</span><br><span class="line">[root@master01 ~]# supervisorctl update</span><br><span class="line">alertmanager: added process group</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# supervisorctl status</span><br><span class="line">alertmanager                     RUNNING   pid 77780, <span class="built_in">uptime</span> 0:01:20</span><br><span class="line">node_exporter                    RUNNING   pid 33788, <span class="built_in">uptime</span> 1:20:01</span><br><span class="line">prometheus                       RUNNING   pid 33789, <span class="built_in">uptime</span> 1:20:01</span><br><span class="line">pushgateway                      RUNNING   pid 77783, <span class="built_in">uptime</span> 0:01:20</span><br></pre></td></tr></table></figure><p>7、3台node节点部署node_exporter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">-----------#3台都要安装------------------------</span><br><span class="line">1、安装node_exporter   </span><br><span class="line">[root@node01 ~]# <span class="built_in">mkdir</span> /app</span><br><span class="line">[root@node01 ~]# tar xf node_exporter-1.8.2.linux-amd64.tar.gz -C /app</span><br><span class="line">[root@node01 ~]# <span class="built_in">mv</span> /app/node_exporter-1.8.2.linux-amd64/ /app/node_exporter-1.8.2</span><br><span class="line">[root@node01 ~]# <span class="built_in">ln</span> -s /app/node_exporter-1.8.2 /app/node_exporter</span><br><span class="line">[root@node01 ~]# <span class="built_in">cd</span> /app/node_exporter</span><br><span class="line">[root@node01 node_exporter]# ll</span><br><span class="line">total 20040</span><br><span class="line">-rw-r--r-- 1 1001 1002    11357 Jul 14 19:57 LICENSE</span><br><span class="line">-rwxr-xr-x 1 1001 1002 20500541 Jul 14 19:54 node_exporter</span><br><span class="line">-rw-r--r-- 1 1001 1002      463 Jul 14 19:57 NOTICE</span><br><span class="line">[root@node01 node_exporter]# yum -y install supervisor</span><br><span class="line">[root@node01 node_exporter]# systemctl start supervisord</span><br><span class="line">[root@node01 node_exporter]# systemctl <span class="built_in">enable</span> supervisord</span><br><span class="line"></span><br><span class="line">2、编写启动脚本</span><br><span class="line">[root@node01 node_exporter]# vim /etc/supervisord.d/prome.ini</span><br><span class="line">[program:node_exporter]</span><br><span class="line">directory=/app/node_exporter/</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/app/node_exporter/node_exporter&quot;</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/var/log/node_exporter_stdout.log</span><br><span class="line">stderr_logfile=/var/log/node_exporter_stderr.log</span><br><span class="line">user=root</span><br><span class="line">stopsignal=TERM</span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line">             </span><br><span class="line">[root@node01 node_exporter]# supervisorctl update</span><br><span class="line">node_exporter: added process group</span><br><span class="line">[root@node01 node_exporter]# supervisorctl start all</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">--------------#master操作---------------------</span><br><span class="line">3、#master操作</span><br><span class="line">修改prometheus配置文件，将node_exporter的信息加入Prometheus</span><br><span class="line">[root@master01 prometheus-2.54.1]# vim prometheus.yml</span><br><span class="line">......</span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.200:9090&quot;</span>]</span><br><span class="line">  - job_name: <span class="string">&quot;node_exporter&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">    <span class="comment">#写node_exporter的地址和端口,将node01  02 03的ip端口添加</span></span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.200:9100&quot;</span>, <span class="string">&quot;10.0.0.201:9100&quot;</span>, <span class="string">&quot;10.0.0.202:9100&quot;</span>, <span class="string">&quot;10.0.0.203:9100&quot;</span>]</span><br><span class="line">      </span><br><span class="line">4、重启</span><br><span class="line">[root@master01 prometheus]# supervisorctl restart all</span><br><span class="line"></span><br><span class="line">5、访问页面，可以看到node节点都起来了</span><br><span class="line">10.0.0.200:9090</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240926210750410.png" alt="image-20240926210750410"></p><p>8、3台node节点安装cAdVisor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、3台node节点拉取cadvisor镜像</span><br><span class="line">docker pull google/cadvisor:latest</span><br><span class="line"></span><br><span class="line">2、运行镜像</span><br><span class="line">[root@node01 ~]# docker run --volume=/:/rootfs:ro --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/data/cadvisor:/var/lib/docker.io --publish=8080:8080 --detach=<span class="literal">true</span> --name=cadvisor google/cadvisor:latest</span><br></pre></td></tr></table></figure><h3 id="5、Prometheus自动发现——file-sd-文件发现"><strong>5、Prometheus自动发现——file-sd(文件发现)</strong></h3><p>1、先把Prometheus收集到的node节点在Prometheus的配置文件里面删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、修改配置文件</span><br><span class="line">[root@master01 prometheus-2.54.1]# vim prometheus.yml</span><br><span class="line">......</span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.200:9090&quot;</span>]</span><br><span class="line">  - job_name: <span class="string">&quot;node_exporter&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">    <span class="comment">#改回只获取master01的</span></span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.200:9100&quot;</span>]</span><br></pre></td></tr></table></figure><p>2、修改Prometheus配置文件，添加自动发现规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1、修改配置文件</span><br><span class="line">[root@master01 prometheus]# vim prometheus.yml</span><br><span class="line">scrape_configs:</span><br><span class="line">.....</span><br><span class="line"><span class="comment">#添加自动发现规则</span></span><br><span class="line"> - job_name: <span class="string">&quot;prome_file_sd&quot;</span></span><br><span class="line">    file_sd_configs:</span><br><span class="line">    - files:</span><br><span class="line">      - /app/prometheus/file_sd/agent.yml</span><br><span class="line">      refresh_interval: 5s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、创建文件发现配置存放目录</span><br><span class="line">[root@master01 prometheus]# <span class="built_in">mkdir</span> -p /app/prometheus/file_sd</span><br><span class="line"></span><br><span class="line">3、编辑文件发现的配置文件</span><br><span class="line">以后可能像pushgateway也要加进来</span><br><span class="line">[root@master01 prometheus]# vim /app/prometheus/file_sd/agent.yml</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;targets&quot;</span>:  [<span class="string">&quot;10.0.0.201:9100&quot;</span>,<span class="string">&quot;10.0.0.202:9100&quot;</span>,<span class="string">&quot;10.0.0.203:9100&quot;</span>],</span><br><span class="line">    <span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;agent&quot;</span>: <span class="string">&quot;node_exporter&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;targets&quot;</span>:  [<span class="string">&quot;10.0.0.201:8080&quot;</span>,<span class="string">&quot;10.0.0.202:8080&quot;</span>,<span class="string">&quot;10.0.0.203:8080&quot;</span>],</span><br><span class="line">    <span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;agent&quot;</span>: <span class="string">&quot;cAdVisor&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">      </span><br><span class="line">2、重启Prometheus</span><br><span class="line">[root@master01 prometheus]# supervisorctl restart all</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927135935380.png" alt="image-20240927135935380"></p><h3 id="6、Prometheus数据格式"><strong>6、Prometheus数据格式</strong></h3><p><strong>①、Prometheus指标类型</strong></p><p><img src="../image/study_img/image-20240927100110091.png" alt="image-20240927100110091"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据描述</span></span><br><span class="line"><span class="comment"># HELP node_cpu_seconds_total Seconds the CPUs spent in each mode.</span></span><br><span class="line"><span class="comment">#数据类型 (下面收集到的数据叫指标，指标类型)</span></span><br><span class="line"><span class="comment"># TYPE node_cpu_seconds_total counter</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125; 335802.19  <span class="comment">#空闲</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;iowait&quot;</span>&#125; 115.16   <span class="comment">#等待</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;irq&quot;</span>&#125; 0    <span class="comment">#</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;nice&quot;</span>&#125; 3.2</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;softirq&quot;</span>&#125; 602.95</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;steal&quot;</span>&#125; 0</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;system&quot;</span>&#125; 11580.34 <span class="comment">#内核态</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;user&quot;</span>&#125; 8994.06   <span class="comment">#用户态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cpu2个核心的</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125; 337368.67</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;iowait&quot;</span>&#125; 10.91</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;irq&quot;</span>&#125; 0</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;nice&quot;</span>&#125; 3.41</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;softirq&quot;</span>&#125; 520.71</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;steal&quot;</span>&#125; 0</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;system&quot;</span>&#125; 11293.66</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;user&quot;</span>&#125; 9194.18</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指标类型    后面的自定义监控要定义指标类型</span></span><br><span class="line">1、gauge：瞬时值，当前最新的值   <span class="comment">#(常用的)</span></span><br><span class="line">比如收集用户最新的登录数量</span><br><span class="line">Gauges是最简单的度量指标，只有一个简单的返回值，或者叫瞬时状态。</span><br><span class="line">例如：我们想衡量一个待处理队列中任务的个数，这个个数是会变化的。</span><br><span class="line">当我们要监控硬盘容量或者内存的使用量，那么就应该使用Gauges的metrics格式来衡量，因为硬盘的容量或者内存的使用量是随时间的推移，不断瞬时且无规则变化的。</span><br><span class="line">这种变化没有规律，当前是多少，采集回来的就是多少。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、counter：计数器类型         <span class="comment">#(常用的)</span></span><br><span class="line">Counters就是计数器，从数据量0开始积累计算，在理想情况下，只能是永远的增长，不会降低(一些特殊情况另说,比如说粉丝数,未必就是只增不减.)。</span><br><span class="line">比如统计一小时，一天，一周，一个月的用户的访问量，这就是一个累加的操作。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、histograms：统计数据的发布情况。比如最小值，最大值，中间值，还有中位数 (很少用)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 举个例子:</span></span><br><span class="line">如果我们想通过监控的方式抓取当天nginx的access.log，并且想监控用户的访问服务出现的故障时间，我们应该怎么做呢?</span><br><span class="line"><span class="comment"># 错误解决方案</span></span><br><span class="line">把日志每行的<span class="string">&quot;http_response_time&quot;</span>数值统统采集下来，然后计算一下总的平均值。这是毫无意义的，因为故障发生时间可能只有一小段时间，比如网络延迟放生在12:30-12:40之间，其它时间都是正常的，如果计算总的平均值，则结果看起来会很正常，无法触发报警功能，运维人员可能也不知道这件事情发生了。</span><br><span class="line"><span class="comment"># 正确解决方案:</span></span><br><span class="line">通过Histograms函数，可以分别统计出全部用户的响应时间在0.05秒,1秒,2秒,5秒,10秒的量。这样运维人员就能根据这个值进行报警，分析这些时间的产生原因，从而避免以后类似的问题发生。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、summary：相当于升级版的histograms</span><br><span class="line">因为histogram在客户端就是简单的分桶计数，在prometheus服务端基于这么有限的数据做百分位估算，所以的确不是很准确，summary就是解决百分位准确的问题而来的。</span><br><span class="line">我们可以简单理解summary是Histogram的扩展类型，如果想要清除的了解histograms和summary的更多细节，可自行查阅相关的文档。</span><br></pre></td></tr></table></figure><p><strong>②、指标数据格式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据描述</span></span><br><span class="line"><span class="comment"># HELP node_cpu_seconds_total Seconds the CPUs spent in each mode.</span></span><br><span class="line"><span class="comment">#数据类型 (指标类型)</span></span><br><span class="line"><span class="comment"># TYPE node_cpu_seconds_total counter</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125; 335802.19</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;iowait&quot;</span>&#125; 115.16</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;irq&quot;</span>&#125; 0</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;nice&quot;</span>&#125; 3.2</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;softirq&quot;</span>&#125; 602.95</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;steal&quot;</span>&#125; 0</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;system&quot;</span>&#125; 11580.34</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;user&quot;</span>&#125; 8994.06</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125; 337368.67</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;iowait&quot;</span>&#125; 10.91</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;irq&quot;</span>&#125; 0</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;nice&quot;</span>&#125; 3.41</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;softirq&quot;</span>&#125; 520.71</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;steal&quot;</span>&#125; 0</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;system&quot;</span>&#125; 11293.66</span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;1&quot;</span>,mode=<span class="string">&quot;user&quot;</span>&#125; 9194.18</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key：node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125; </span><br><span class="line">value：335802.19</span><br><span class="line"></span><br><span class="line"><span class="comment">#指标数据格式就是如下：</span></span><br><span class="line">1、要有一行描述</span><br><span class="line">2、要有一行指标类型定义</span><br><span class="line">3、真实数据(数据格式是Key value)</span><br><span class="line"></span><br><span class="line">以后自定义监控收集到的数据要组成key value的形式</span><br></pre></td></tr></table></figure><p><strong>③、PromeQL查询结果的类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PromQL的表达式中支持一下4种数据类型</span><br><span class="line">1、即时向量(Instant Vector):</span><br><span class="line">特定或全部的时间序列集合上，具有相同时间戳的一组样本称为即时向量。</span><br><span class="line"></span><br><span class="line">2、范围向量(Range Vector):</span><br><span class="line">特定或全部的时间序列集合上，在指定的同一范围内的所有样本值</span><br><span class="line"></span><br><span class="line">3、标量(Scalar):</span><br><span class="line">一个浮点型的数据值。带小数点的</span><br><span class="line"></span><br><span class="line">4、字符串(String)：</span><br><span class="line">支持使用单引号，双引号或反引号进行引用，但反引号中不会转移字符进行转义</span><br></pre></td></tr></table></figure><p>1、即时向量</p><p><img src="../image/study_img/image-20240927151046205.png" alt="image-20240927151046205"></p><p>这些数据在同一时刻，同一秒，汇成一台线的数据值，叫即时向量，每一个指标在同一个时间点获取到的数据值</p><p>2、范围向量   比如从10点~11点查出来的结果集</p><p><strong>③、Prometheus常用的函数</strong></p><p>1、increase函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">increase函数：求指定时间内的增量</span><br><span class="line">    在prometheus中是用来针对Counter这种持续增长的数值，截取其中的一段时间的增量。</span><br><span class="line"></span><br><span class="line"><span class="comment">#举个例子:</span></span><br><span class="line">increase(node_cpu_seconds_total[1m]):</span><br><span class="line">    获取CPU总使用时间在1分钟内的增量，计算的是1分钟内增加的总量。</span><br><span class="line">    在实际工作中，我们的服务器通常是多核的，因此这个采集的是所有核心的值哟。</span><br><span class="line">increase(node_cpu_seconds_total&#123;instance=<span class="string">&quot;10.0.0.101:9100&quot;</span>&#125;[100m]):</span><br><span class="line">     我们也可以借助标签选择器过滤查看某个服务器实例的配置.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cpu 1分钟的增长量</span><br><span class="line">increase(node_cpu_seconds_total&#123;instance=<span class="string">&#x27;10.0.0.202:9100&#x27;</span>,job=<span class="string">&#x27;prome_file_sd&#x27;</span>,mode=<span class="string">&#x27;system&#x27;</span>&#125;[1m])</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927102930773.png" alt="image-20240927102930773"></p><p><img src="../image/study_img/image-20240927153951299.png" alt="image-20240927153951299"></p><p>2、sum函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>函数: 主要是起到加和的作用。</span><br><span class="line"></span><br><span class="line"><span class="comment">#举个例子:</span></span><br><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total[1m])):</span><br><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;job=<span class="string">&#x27;prome_file_sd&#x27;</span>,mode=<span class="string">&#x27;system&#x27;</span>&#125;[1m]))</span><br><span class="line">    在<span class="string">&quot;increase(node_cpu[1m])&quot;</span>外面套用一个<span class="built_in">sum</span>函数就可以把所有CPU核心数在1分钟内的增量做一个累加。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;instance=<span class="string">&#x27;10.0.0.202:9100&#x27;</span>,job=<span class="string">&#x27;prome_file_sd&#x27;</span>,mode=<span class="string">&#x27;system&#x27;</span>&#125;[1m]))</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927103557200.png" alt="image-20240927103557200"></p><p>3、by函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">by函数:</span><br><span class="line">   将数据进行分组，类似于MySQL的<span class="string">&quot;group by&quot;</span>。</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="comment">#举个例子:</span></span><br><span class="line">by (instance):</span><br><span class="line">    这里的<span class="string">&quot;instance&quot;</span>代表的是机器名称，意思是将数据按照instance标签进行强行拆分。</span><br><span class="line">    该函数通常会和<span class="built_in">sum</span>函数搭配使用，比如<span class="string">&quot;(sum(increase(node_cpu_seconds_total[1m]))by (instance))&quot;</span>,表示把<span class="built_in">sum</span>函数中累加和按照<span class="string">&quot;instance&quot;</span>(机器名称)强行拆分成多组数据。当然，如果只有一个机器名称的话，你会发现只有一组数据，因此从结果上可能看不到明显的变化哟。</span><br><span class="line"></span><br><span class="line">温馨提示:</span><br><span class="line">instance是node_exporter内置的标签，当然，我们也可以自定义标签，比如根据生产环境中不同的集群添加相应的标签。比如基于自定义的<span class="string">&quot;cluster_name&quot;</span>标签进行分组等。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;job=<span class="string">&#x27;prome_file_sd&#x27;</span>,mode=<span class="string">&#x27;system&#x27;</span>&#125;[1m]))by(instance)</span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;agent=<span class="string">&#x27;node_exporter&#x27;</span>,mode=<span class="string">&#x27;system&#x27;</span>&#125;[1m])) by(instance)</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927104801961.png" alt="image-20240927104801961"></p><p>4、rate函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">rate函数:</span><br><span class="line">    它的功能是按照设置的一个时间段，取counter在这个时间段中的平均每秒的增量。因此是专门搭配counter类型数据使用的函数。</span><br><span class="line"></span><br><span class="line"><span class="comment">#举个例子:</span></span><br><span class="line">    rate(node_cpu_seconds_total[1m]):</span><br><span class="line">获取CPU总使用时间在1分钟内的增加的总量并除以60秒，计算的是每秒的增量。</span><br><span class="line"></span><br><span class="line">    rate(node_network_receive_bytes_total[1m]):</span><br><span class="line">获取一分钟内网络接收的总量。</span><br><span class="line">查看的时间越短，某一瞬间的突起或降低在成图的时候会体现的更细致，更敏感。</span><br><span class="line"></span><br><span class="line">    rate(node_network_receive_bytes_total[20m])</span><br><span class="line">获取二十分钟内网络接收的总量。</span><br><span class="line">查看的时间越长，那么当发生瞬间的突起或降低时候，会显得平缓一些，因为取得时间段越长会把波峰波谷都给平均消下去了。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#increase函数和rate函数如此相似如何选择?</span></span><br><span class="line">(1)对于采集频率较低的数据采用建议使用increase函数，因为使用rate函数可能会出现断点(比如按照5分钟采样数据量较小的场景，以采集硬盘可用容量为例，可能会出现某次采集数据未采集到的情况，因为会按照平均每秒来计算最终的增量)的情况;</span><br><span class="line"></span><br><span class="line">(2)对于采集频率较高的数据采用建议使用rate函数，比如对CPU，内存，网络流量等都可以基于rate函数来采样，当然，硬盘也是可以用rate函数来采样的哟;</span><br><span class="line">温馨提示:</span><br><span class="line"></span><br><span class="line">在实际工作中，我们取监控频率为1分钟还是5分钟这取决与我们对于监控数据的敏感程度来挑选。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rate(node_cpu_seconds_total&#123;agent=<span class="string">&#x27;node_exporter&#x27;</span>,mode=<span class="string">&#x27;system&#x27;</span>&#125;[1m])</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927105435679.png" alt="image-20240927105435679"></p><p>5、irate函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  irate函数：主要用于计算向量（通常是Counter类型的时间序列）在每个时间范围内的每秒瞬时增长率。与rate函数不同，irate特别关注于时间范围内的最后两个数据点，通过这两个点的差值除以它们之间的时间差来得到瞬时增长率。这种方式使得irate在捕捉快速变化或波动较大的数据时更加敏感。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#举个例子:</span></span><br><span class="line">假设有一个名为http_requests_total的Counter类型时间序列，记录了HTTP请求的总数。要计算过去5分钟内每秒的HTTP请求瞬时增长率，可以使用以下PromQL表达式：</span><br><span class="line">irate(http_requests_total[5m])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">irate(node_cpu_seconds_total&#123;agent=<span class="string">&#x27;node_exporter&#x27;</span>,mode=<span class="string">&#x27;system&#x27;</span>&#125;[1m])</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927105526235.png" alt="image-20240927105526235"></p><p>6、topk函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">topk函数:</span><br><span class="line">    取top榜的前n名。实际使用的时候一般会用该函数进行瞬时报警，而不是为了观察曲线图。</span><br><span class="line"></span><br><span class="line"><span class="comment">#举个例子:</span></span><br><span class="line">     topk(3,rate(node_cpu_seconds_total[1m])):</span><br><span class="line">获取CPU总使用时间在1分钟内的增加的总量并除以60秒，计算的是每秒的数量。并只查看top3。</span><br><span class="line"></span><br><span class="line">温馨提示:</span><br><span class="line">我们通常使用topk只会关注<span class="string">&quot;Console&quot;</span>中的瞬时结果，不太会关心Graph的出图效果，因为关注他并没有太大意义，存在太多的断点啦！</span><br><span class="line">如果出图会出现中断的情况，是因为在xx分钟内这一刻的数据其并没有排进top3，自然就会出现断点的状况</span><br><span class="line"></span><br><span class="line">topk(10,rate(node_cpu_seconds_total&#123;agent=<span class="string">&#x27;node_exporter&#x27;</span>&#125;[1m]))</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927161431883.png" alt="image-20240927161431883"></p><p>7、count函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">count(container_last_seen&#123;instance=<span class="string">&#x27;10.0.0.201:8080&#x27;</span>,image!=<span class="string">&#x27;&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">count函数:</span><br><span class="line">    把数值符合条件的，输出数目进行累计加和。一般用它进行一些模糊的监控判断。</span><br><span class="line">    比如说企业中有100台服务器，那么只有10台服务器CPU使用率高于80%的时候，这个时候不需要报警，当符合80%CPU的服务器数量超过70台的时候那么就触发报警。</span><br><span class="line"></span><br><span class="line"><span class="comment">#举个例子:</span></span><br><span class="line">    count(aaa_tcp_wait_conn &gt; 500):</span><br><span class="line">我们假设aaa_tcp_wait_conn是咱们自定义的KEY，上述案例是找出当前(或者历史的)当前TCP等待数大于500的机器数量。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#统计node01上有多少台容器</span></span><br><span class="line">image!=<span class="string">&#x27;&#x27;</span>  image不等于空的就是容器</span><br><span class="line"></span><br><span class="line">count统计他有多少行</span><br><span class="line">count(container_last_seen&#123;instance=<span class="string">&#x27;10.0.0.201:8080&#x27;</span>,image!=<span class="string">&#x27;&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240927162241644.png" alt="image-20240927162241644"></p><p><strong>函数练习：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、计算各节点的CPU的总使用率，参考公式:100%-(CPU空闲时间/总时间)</span><br><span class="line">(1)我们需要先找到查看CPU的key名称</span><br><span class="line">node_cpu_seconds_total</span><br><span class="line"></span><br><span class="line">(2)按机器分组，计算出每个机器的空闲时间</span><br><span class="line"><span class="built_in">sum</span>(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;idle&#x27;</span>&#125;)by(instance)</span><br><span class="line"></span><br><span class="line">(3)按机器分组，计算出每个机器的总时间</span><br><span class="line"><span class="built_in">sum</span>(node_cpu_seconds_total) by(instance)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(4)CPU空闲时间/总时间=空闲率</span><br><span class="line"><span class="built_in">sum</span>(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;idle&#x27;</span>&#125;)by(instance)/sum(node_cpu_seconds_total) by(instance)</span><br><span class="line"></span><br><span class="line">(5)每台机器的CPU的总使用率</span><br><span class="line">1-(<span class="built_in">sum</span>(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;idle&#x27;</span>&#125;)by(instance)/sum(node_cpu_seconds_total) by(instance))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、计算用户态的CPU使用率</span><br><span class="line"><span class="built_in">sum</span>(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;user&#x27;</span>&#125;)by(instance)/sum(node_cpu_seconds_total) by(instance)</span><br><span class="line"></span><br><span class="line">3、计算内核态的CPU使用率</span><br><span class="line"><span class="built_in">sum</span>(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;system&#x27;</span>&#125;)by(instance)/sum(node_cpu_seconds_total) by(instance)</span><br><span class="line"></span><br><span class="line">4、计算IO等待的CPU使用率</span><br><span class="line"><span class="built_in">sum</span>(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;iowait&#x27;</span>&#125;)by(instance)/sum(node_cpu_seconds_total) by(instance)</span><br></pre></td></tr></table></figure><h3 id="7、使用pushgateway自定义监控"><strong>7、使用pushgateway自定义监控</strong></h3><p><strong>pushgateway介绍</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用脚本监控将数据推送到pushgateway上，Promethues从pushgateway中拉取数据 (可以把pushgateway当初Prometheus的客户端，Prometheus也是拉取数据)</span><br><span class="line"></span><br><span class="line">它是可以单独运行在任何节点(不一定是在被监控客户端)上的插件，然后通过用户自定义开发脚本把需要监控的数据发送给pushgateway，再由pushgateway暴露http接口,而后由把prometheus server去pull数据。</span><br><span class="line"></span><br><span class="line">pushgateway组件本身是没有任何抓取监控数据功能的，它只能被动的等待监控数据被推送过来。</span><br></pre></td></tr></table></figure><p><strong>Prometheus关联pushgateway</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：修改Prometheus配置文件</span></span><br><span class="line">[root@master01 prometheus]# vim prometheus.yml</span><br><span class="line">scrape_configs:</span><br><span class="line">.....</span><br><span class="line"><span class="comment">#添加自动发现规则</span></span><br><span class="line"> - job_name: <span class="string">&quot;prome_file_sd&quot;</span></span><br><span class="line">    file_sd_configs:</span><br><span class="line">    - files:</span><br><span class="line">      - /app/prometheus/file_sd/agent.yml</span><br><span class="line">      refresh_interval: 5s</span><br><span class="line"></span><br><span class="line">2、重启Prometheus</span><br><span class="line">[root@master01 prometheus]# supervisorctl restart all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：编辑文件发现的配置文件</span></span><br><span class="line">以后可能像pushgateway也要加进来</span><br><span class="line">[root@master01 prometheus]# vim /app/prometheus/file_sd/agent.yml</span><br><span class="line">[</span><br><span class="line">.....</span><br><span class="line"> &#123;</span><br><span class="line">    <span class="string">&quot;targets&quot;</span>:  [<span class="string">&quot;10.0.0.200:9091&quot;</span>],</span><br><span class="line">    <span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;agent&quot;</span>: <span class="string">&quot;pushgateway&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">      </span><br><span class="line"><span class="comment">#不需要重启</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240930182759622.png" alt="image-20240930182759622"></p><p><strong>pushgateway的优缺点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">pushgateway默认会有一些数据，并不多，主要是自定义，我们自定义数据要写脚本，只要能写脚本获取到的数据都可以监控</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#优点:</span></span><br><span class="line">灵活性更强。</span><br><span class="line"></span><br><span class="line"><span class="comment">#缺点:</span></span><br><span class="line">(1)存在单点瓶颈，假如有多个脚本同时发给一个pushgateway进程，如果该pushgateway进程挂掉了，那么监控数据也就没了。</span><br><span class="line">(2)pushgateway并不能对发送过来的脚本采集数据进行更智能的判断，假如脚本中间采集出了问题，那么有问题的数据pushgateway组件会照单全收发送给Prometheus server。(也就是说他不能做判断，收集到啥就传啥，所以写的脚本一定要精确)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">温馨提示:</span><br><span class="line">对于缺点一，建议大家在生产环境中多开启几个pushgateway进程，前面加个负载均衡，以便于备份使用。</span><br><span class="line">如果使用负载均衡，配置文件的写法是：</span><br><span class="line">[root@master01 prometheus]# vim /app/prometheus/file_sd/agent.yml</span><br><span class="line">[</span><br><span class="line">.....</span><br><span class="line"> &#123;</span><br><span class="line">    <span class="string">&quot;targets&quot;</span>:  [<span class="string">&quot;用域名或者负载均衡的ip:9091&quot;</span>],</span><br><span class="line">    <span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;agent&quot;</span>: <span class="string">&quot;pushgateway&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">对于缺点二，建议大家在编写脚本时要注意业务逻辑，尽可能避免脚本出错的情况发生。</span><br></pre></td></tr></table></figure><p><strong>单个数据自定义监控——用户登录数量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先你想监控哪台机器，就把脚本写在哪个机器上</span></span><br><span class="line"></span><br><span class="line">1、编写自定义监控——用户登录数量的脚本</span><br><span class="line">[root@node03 ~]# vim user_count.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#获取主机名hostname -s短的主机名  hostname长的主机名</span></span><br><span class="line">INSTANCE_NAME=$(hostname -s)</span><br><span class="line"><span class="comment">#判断如果是没有修改主机名就报错</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$INSTANCE_NAME</span>&quot;</span> == <span class="string">&quot;localhost&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;必须要完整的主机名&quot;</span></span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义Prometheus抓取到的监控项的key名字，</span></span><br><span class="line">METRICS_NAME=<span class="string">&quot;user_count&quot;</span></span><br><span class="line"><span class="comment">#获取用户的登录数量(监控项的值的获取)</span></span><br><span class="line">USER_COUNT_VALUE=$(<span class="built_in">uptime</span> |grep -Po <span class="string">&#x27;[0-9]+(?= user)&#x27;</span>)</span><br><span class="line"><span class="comment">#发送数据  把echo的内容交给curl --data-binary 发送二进制的数据,后面的路径可以自定义</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$METRICS_NAME</span> <span class="variable">$USER_COUNT_VALUE</span>&quot;</span> |curl --data-binary @- http://10.0.0.200:9091/metrics/job/sh_job/instance/<span class="variable">$INSTANCE_NAME</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、执行脚本</span><br><span class="line">[root@node03 ~]# sh user_count.sh</span><br><span class="line"></span><br><span class="line">3、查看页面</span><br><span class="line">10.0.0.200:9091</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240930202019536.png" alt="image-20240930202019536"></p><p>首先图中的数据类型是 UNTYPED 我并没有定义数据类型的,查看数据指标10.0.0.200:9091/metric，他自己加的untype</p><p><img src="../image/study_img/image-20240930203034740.png" alt="image-20240930203034740"></p><p>Prometheus查看数据</p><p><img src="../image/study_img/image-20240930202427231.png" alt="image-20240930202427231"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">user_count&#123;agent=<span class="string">&quot;pushgateway&quot;</span>, exported_instance=<span class="string">&quot;node03&quot;</span>, exported_job=<span class="string">&quot;sh_job&quot;</span>, instance=<span class="string">&quot;10.0.0.200:9091&quot;</span>, job=<span class="string">&quot;prome_file_sd&quot;</span>&#125;   显示的结果是自定义的</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">上面提到过</span><br><span class="line"><span class="comment">#指标数据格式就是如下：</span></span><br><span class="line">1、要有一行描述</span><br><span class="line">2、要有一行指标类型定义</span><br><span class="line">3、真实数据(数据格式是Key value)</span><br><span class="line"><span class="comment">#数据描述</span></span><br><span class="line"><span class="comment"># HELP node_cpu_seconds_total Seconds the CPUs spent in each mode.</span></span><br><span class="line"><span class="comment">#数据类型 (指标类型)</span></span><br><span class="line"><span class="comment"># TYPE key名字 counter</span></span><br><span class="line">node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125; 335802.19</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、修改脚本，定义数据类型,并加上循环</span><br><span class="line">[root@node03 ~]# vim user_count.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  <span class="comment">#获取主机名hostname -s短的主机名  hostname长的主机名</span></span><br><span class="line">  INSTANCE_NAME=$(hostname -s)</span><br><span class="line">  <span class="comment">#判断如果是没有修改主机名就报错</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$INSTANCE_NAME</span>&quot;</span> == <span class="string">&quot;localhost&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">     <span class="built_in">echo</span> <span class="string">&quot;必须要完整的主机名&quot;</span></span><br><span class="line">     <span class="built_in">exit</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">#定义Prometheus抓取到的监控项的key名字，</span></span><br><span class="line">  METRICS_NAME=<span class="string">&quot;user_count&quot;</span></span><br><span class="line">  <span class="comment">#获取用户的登录数量(监控项的值的获取)</span></span><br><span class="line">  USER_COUNT_VALUE=$(<span class="built_in">uptime</span> |grep -Po <span class="string">&#x27;[0-9]+(?= user)&#x27;</span>)</span><br><span class="line">  <span class="comment">#发送数据  把echo的内容交给curl --data-binary 发送二进制的数据,后面的路径可以自定义 \n回车  gauge：瞬时值，当前最新的值</span></span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;# TYPE <span class="variable">$&#123;METRICS_NAME&#125;</span> gauge\n<span class="variable">$METRICS_NAME</span> <span class="variable">$USER_COUNT_VALUE</span>&quot;</span> |curl --data-binary @- http://10.0.0.200:9091/metrics/job/sh_job/instance/<span class="variable">$INSTANCE_NAME</span></span><br><span class="line">  <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、由于脚本里面写了死循环，不能直接执行脚本，可以用supervisor去管理</span><br><span class="line">以后所以得监控脚本都可以放这里，所有的监控项都可以起来</span><br><span class="line">[root@node03 ~]# vim /etc/supervisord.d/push.ini </span><br><span class="line">[program:user_count]</span><br><span class="line"><span class="comment">#这里建议脚本建一个目录存放</span></span><br><span class="line">directory=/root</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/bin/sh /root/user_count.sh&quot;</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/var/log/node_exporter_stdout.log</span><br><span class="line">stderr_logfile=/var/log/node_exporter_stderr.log</span><br><span class="line">user=root</span><br><span class="line">stopsignal=TERM</span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line">[root@node03 ~]# supervisorctl update</span><br><span class="line">[root@node03 ~]# supervisorctl restart all</span><br><span class="line">[root@node03 ~]# supervisorctl status</span><br><span class="line">node_exporter                    RUNNING   pid 8440, <span class="built_in">uptime</span> 1 day, 12:35:41</span><br><span class="line">user_count                       RUNNING   pid 107360, <span class="built_in">uptime</span> 0:02:39</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、验证是否运行</span><br><span class="line">多开几个终端，去Prometheus里面查询数据</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240930212805096.png" alt="image-20240930212805096"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#命令行简历监控数据</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;# TYPE key名字 gauge\nkey名字 value&quot;</span> |curl --data-binary @- http://10.0.0.200:9091/metrics/job/项目名/instance/主机名</span><br><span class="line"></span><br><span class="line">[root@node03 ~]# <span class="built_in">echo</span> -e <span class="string">&quot;# TYPE aaa gauge\naaa 111&quot;</span> |curl --data-binary @- http://10.0.0.200:9091/metrics/job/aaa/instance/node03</span><br><span class="line"></span><br><span class="line">数据指标中就会生成aaa的key</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240930224338728.png" alt="image-20240930224338728"></p><p><img src="../image/study_img/image-20240930224429624.png" alt="image-20240930224429624"></p><p><strong>多个数据自定义监控——监控容器运行时间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">获取cadvisor的运行时间</span><br><span class="line">[root@node03 ~]# docker inspect -f <span class="string">&#x27;&#123;&#123;.State.StartedAt&#125;&#125;&#x27;</span> cadvisor</span><br><span class="line">2024-09-30T10:06:13.136629499Z</span><br><span class="line">[root@node03 ~]# docker inspect -f <span class="string">&#x27;&#123;&#123;.State.StartedAt&#125;&#125;&#x27;</span> cadvisor</span><br><span class="line">2024-09-30T10:06:13.136629499Z</span><br><span class="line">[root@node03 ~]# docker inspect -f <span class="string">&#x27;&#123;&#123;.State.StartedAt&#125;&#125;&#x27;</span> cadvisor</span><br><span class="line">2024-09-30T10:06:13.136629499Z</span><br><span class="line">[root@node03 ~]# <span class="built_in">date</span> +%s -d 2024-09-30T10:06:13.136629499Z</span><br><span class="line">1727690773</span><br><span class="line">[root@node03 ~]# <span class="built_in">date</span> +%s </span><br><span class="line">1727708230</span><br><span class="line">[root@node03 ~]# <span class="built_in">let</span> res=1727708230-1727690773</span><br><span class="line">[root@node03 ~]# <span class="built_in">echo</span> <span class="variable">$res</span></span><br><span class="line">17457</span><br><span class="line">[root@node03 ~]# python</span><br><span class="line">&gt;&gt;&gt; 17457/60/60</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span><span class="string">&quot;# TYPE <span class="variable">$&#123;metrics_name&#125;</span> gauge  </span></span><br><span class="line"><span class="string"># HELP <span class="variable">$&#123;metrics_name&#125;</span> time sec&quot;</span><span class="string">&quot;&quot;</span> &gt; docker_temp.log</span><br><span class="line"></span><br><span class="line">1、编写多个数据自定义监控——监控容器运行时间的脚本</span><br><span class="line">[root@node03 ~]# vim runtime.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#获取主机名hostname -s短的主机名  hostname长的主机名</span></span><br><span class="line">instance_name=$(hostname -s)</span><br><span class="line">metrics_name=docker_runtime</span><br><span class="line"><span class="comment">#判断如果是没有修改主机名就报错</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$instance_name</span>&quot;</span> == <span class="string">&quot;localhost&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;必须要完整的主机名&quot;</span></span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所以运行容器的名称 &#123;&#123;.Names&#125;&#125;相当于金甲模版的调用变量</span></span><br><span class="line">allname=$(docker ps --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">docker_run</span></span>()&#123;</span><br><span class="line">      <span class="comment">#获取各个容器的启动时间</span></span><br><span class="line">      start_time=$(docker inspect -f <span class="string">&#x27;&#123;&#123;.State.StartedAt&#125;&#125;&#x27;</span> <span class="variable">$1</span>)</span><br><span class="line">      <span class="comment">#将时间转换位时间戳</span></span><br><span class="line">      time1=$(<span class="built_in">date</span> +%s -d <span class="string">&quot;<span class="variable">$start_time</span>&quot;</span>)</span><br><span class="line">      <span class="comment">#获取当前的时间戳</span></span><br><span class="line">      time2=$(<span class="built_in">date</span> +%s)</span><br><span class="line">      <span class="comment">#计算运行时间</span></span><br><span class="line">      <span class="built_in">let</span> tt=<span class="variable">$time2</span>-<span class="variable">$time1</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="variable">$tt</span></span><br><span class="line">      <span class="built_in">return</span> <span class="variable">$tt</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将需要往pushgateway上传的数据写入&quot;docker_temp.log&quot;文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# TYPE <span class="variable">$&#123;metrics_name&#125;</span> gauge&quot;</span> &gt; docker_temp.log  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# HELP <span class="variable">$&#123;metrics_name&#125;</span> time sec&quot;</span> &gt;&gt; docker_temp.log</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;allname&#125;</span>;<span class="keyword">do</span></span><br><span class="line">    start_time=$(docker_run <span class="variable">$i</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$metrics_name</span>&#123;name=\&quot;<span class="variable">$i</span>\&quot;,aaa=\&quot;xxx\&quot;&#125; <span class="variable">$start_time</span>&quot;</span> &gt;&gt;  docker_temp.log <span class="comment"># 格式化写入数据</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改地址和参数名向特定的url上传数据，数据在doceker_temp.log文件中</span></span><br><span class="line"><span class="comment">#curl 二进制 @文件名 把个文件里面的内容交给后面的url</span></span><br><span class="line">curl --data-binary <span class="string">&quot;@docker_temp.log&quot;</span> http://10.0.0.200:9091/metrics/job/docker_runtime/instance/<span class="variable">$instance_name</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#情况临时文件</span></span><br><span class="line"><span class="comment">#rm -rf docker_temp.log</span></span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">2、将脚本加入supervisor</span><br><span class="line">[root@node03 ~]# vim /etc/supervisord.d/push.ini </span><br><span class="line">[program:docker_runtime]</span><br><span class="line">directory=/root</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/bin/sh /root/runtime.sh&quot;</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/var/log/node_exporter_stdout.log</span><br><span class="line">stderr_logfile=/var/log/node_exporter_stderr.log</span><br><span class="line">user=root</span><br><span class="line">stopsignal=TERM</span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br><span class="line">[root@node03 ~]# supervisorctl update</span><br><span class="line">[root@node03 ~]# supervisorctl status</span><br><span class="line">docker_runtime                   RUNNING   pid 29434, <span class="built_in">uptime</span> 0:00:07</span><br><span class="line">node_exporter                    RUNNING   pid 8372, <span class="built_in">uptime</span> 5:48:45</span><br><span class="line">user_count                       RUNNING   pid 8374, <span class="built_in">uptime</span> 5:48:45</span><br><span class="line"></span><br><span class="line">3、浏览器访问</span><br><span class="line">10.0.0.200:9091          10.0.0.200:9091/metrics</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20241001220001771.png" alt="image-20241001220001771"></p><p><img src="../image/study_img/image-20241001220252497.png" alt="image-20241001220252497"></p><p>Prometheus查看数据</p><p><img src="../image/study_img/image-20241001220418085.png" alt="image-20241001220418085"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">验证没问题之后，把脚本发送给其他node节点，并执行，就可以获取到数据了</span><br></pre></td></tr></table></figure><p><strong>监控内存使用率    (这个是自带的，不需要写脚本，直接可以查出来)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">参考案例:</span><br><span class="line">(1 - (node_memory_Buffers_bytes + node_memory_Cached_bytes + node_memory_MemFree_bytes) / node_memory_MemTotal_bytes) * 100</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20241001223311889.png" alt="image-20241001223311889"></p><p><strong>监控硬盘的使用情况    (这个是自带的，不需要写脚本，直接可以查出来)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">参考案例:</span><br><span class="line">(node_filesystem_free_bytes / node_filesystem_size_bytes) &lt; 0.95</span><br><span class="line"></span><br><span class="line">温馨提示:</span><br><span class="line">(1)生产环境中建议大家将0.95改为0.20，表示当空闲硬盘小于20%的时候就显示在图上;</span><br><span class="line">(2)我之所以写0.95是因为我的空闲硬盘挺大的，为了让大家看到出图的效果而已。</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20241001223441812.png" alt="image-20241001223441812"></p><p><strong>监控硬盘I/O使用情况  (这个是自带的，不需要写脚本，直接可以查出来)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参考案例:</span><br><span class="line">rate(node_network_transmit_bytes_total[1m]) / 1024 / 1024</span><br><span class="line"></span><br><span class="line">node_network_transmit_bytes_total:</span><br><span class="line">网络传输字节数。</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20241001223636224.png" alt="image-20241001223636224"></p><p><strong>监控文件描述符</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">参考案例:</span><br><span class="line">(node_filefd_allocated / node_filefd_maximum) * 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">node_filefd_allocated:</span><br><span class="line">已分配的文件描述符。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">node_filefd_maximum:</span><br><span class="line">一个进程运行最大打开文件描述符的总量。</span><br><span class="line"></span><br><span class="line">(1)编写脚本</span><br><span class="line">[root@docker201 ~]# vim network_delay.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#instance_name=`hostname -i` # 该指令要求hosts文件必须有解析</span></span><br><span class="line">instance_name=$(hostname -s) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 要求机器名不能是&quot;localhost&quot;不然标签就没有区分了</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$instance_name</span> == <span class="string">&quot;localhost&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Must FQDN hostname&quot;</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定需要ping的主机</span></span><br><span class="line">monitoring_site=<span class="string">&quot;www.aaa.com&quot;</span></span><br><span class="line"><span class="comment"># 获取丢包率相关字段</span></span><br><span class="line"><span class="comment"># -q:</span></span><br><span class="line"><span class="comment"># 安静模式ping，即不输出每次ping的返回的中间结果，仅返回最终的结果。</span></span><br><span class="line"><span class="comment"># -A:</span></span><br><span class="line"><span class="comment"># 启用并行的ping效果，可以加快ping的处理过程。</span></span><br><span class="line"><span class="comment"># -s:</span></span><br><span class="line"><span class="comment"># 一个ping包的大小。</span></span><br><span class="line"><span class="comment"># -W:</span></span><br><span class="line"><span class="comment"># 执行ping命令最大的延迟等待时间(timeout),以ms为单位。</span></span><br><span class="line"><span class="comment"># -c:</span></span><br><span class="line"><span class="comment"># 发送多少个数据包。</span></span><br><span class="line">package_loss_rate=`<span class="built_in">timeout</span> 5 ping -q -A -s 500 -W 1000 -c 100 <span class="variable">$monitoring_site</span> |</span><br><span class="line">grep transmitted | awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取延迟情况的相关字段(本质上是执行ping命令所耗费的时间哟~)</span></span><br><span class="line">delay_time=`<span class="built_in">timeout</span> 5 ping -q -A -s 500 -W 1000 -c 100 <span class="variable">$monitoring_site</span> | grep transmitted | awk <span class="string">&#x27;&#123;print $10&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数字类型</span></span><br><span class="line">package_loss_rate_number=`<span class="built_in">echo</span> <span class="variable">$package_loss_rate</span> | sed <span class="string">&quot;s/%//g&quot;</span>`</span><br><span class="line">delay_time_number=`<span class="built_in">echo</span> <span class="variable">$delay_time</span> | sed <span class="string">&quot;s/ms//g&quot;</span>`</span><br><span class="line"><span class="comment"># 将数据上传到pushgateway</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;sh_linux_package_loss_rate_<span class="variable">$instance_name</span> <span class="variable">$package_loss_rate_number</span>&quot;</span> | curl --data-binary @-</span><br><span class="line">http://docker201.zls.com:9091/metrics/job/zls_linux_package_loss_rate/instance/localhost:9092</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;sh_linux_delay_time_<span class="variable">$instance_name</span> <span class="variable">$delay_time_number</span>&quot;</span> | curl --data-binary @- http://docker201.zls.com:9091/metrics/job/zls_linux_package_loss_rate/instance/localhost:9092</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(2)编写周期性任务</span><br><span class="line">[root@docker201~]# crontab -l</span><br><span class="line">...</span><br><span class="line">*/10 * * * * /root/network_delay.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(3)在Prometheus server中查看KEY</span><br><span class="line">sh_linux_package_loss_rate_docker201</span><br><span class="line">sh_linux_delay_time_docker201</span><br><span class="line">温馨提示:</span><br><span class="line">(1)对于较多的网络监控我建议还是使用专业的smokeping监控系统，尤其是在IDC公司，smokeping基本上是必用软件哟。</span><br></pre></td></tr></table></figure><h3 id="8、使用alertmanager告警"><strong>8、使用alertmanager告警</strong></h3><p>1、修改配置文件(配置报警媒介类型)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">1、先停掉alertmanager</span><br><span class="line">[root@master01 kubernetes]# supervisorctl stop alertmanager</span><br><span class="line"></span><br><span class="line">2、修改配置文件，配置报警媒介类型</span><br><span class="line">[root@master01 kubernetes]# vim /app/alertmanager/alertmanager.yml </span><br><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  smtp_from: <span class="string">&#x27;xxx@qq.com&#x27;</span></span><br><span class="line">  smtp_smarthost: <span class="string">&#x27;smtp.qq.com:465&#x27;</span></span><br><span class="line">  smtp_auth_username: <span class="string">&#x27;xxxx@qq.com&#x27;</span></span><br><span class="line">  smtp_auth_password: <span class="string">&#x27;xxxgreaga&#x27;</span></span><br><span class="line">  smtp_require_tls: <span class="literal">false</span></span><br><span class="line">  smtp_hello: <span class="string">&#x27;qq.com&#x27;</span></span><br><span class="line">route:</span><br><span class="line">  group_by: [<span class="string">&#x27;alertname&#x27;</span>]</span><br><span class="line">  group_wait: 5s</span><br><span class="line">  group_interval: 5s</span><br><span class="line">  repeat_interval: 5m</span><br><span class="line">  receiver: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">  email_configs:</span><br><span class="line">  - to: <span class="string">&#x27;xxx85@qq.com&#x27;</span></span><br><span class="line">    send_resolved: <span class="literal">true</span></span><br><span class="line">inhibit_rules:</span><br><span class="line">  - source_match:</span><br><span class="line">      severity: <span class="string">&#x27;critical&#x27;</span></span><br><span class="line">    target_match:</span><br><span class="line">      severity: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    equal: [<span class="string">&#x27;alertname&#x27;</span>, <span class="string">&#x27;dev&#x27;</span>, <span class="string">&#x27;instance&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">相关参数说明    </span><br><span class="line">global:</span><br><span class="line"><span class="comment">#解析超时时间</span></span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  <span class="comment">#发件人邮箱地址</span></span><br><span class="line">  smtp_from: <span class="string">&#x27;xxxxxxxx@qq.com&#x27;</span></span><br><span class="line">  <span class="comment">#邮箱的服务器的地址及端口，例如: &#x27;smtp.qq.com:465&#x27;</span></span><br><span class="line">  smtp_smarthost: <span class="string">&#x27;smtp.qq.com:465&#x27;</span></span><br><span class="line">  <span class="comment">#发送人的邮箱用户名</span></span><br><span class="line">  smtp_auth_username: <span class="string">&#x27;xxxxxxxx@qq.com&#x27;</span></span><br><span class="line">  <span class="comment">#发送人的邮箱的授权码</span></span><br><span class="line">  smtp_auth_password: <span class="string">&#x27;xxxxxxxxxxxxxxx&#x27;</span></span><br><span class="line">  <span class="comment">#是否基于tls加密</span></span><br><span class="line">  smtp_require_tls: <span class="literal">false</span></span><br><span class="line">  <span class="comment">#邮箱服务器，例如: &#x27;qq.com&#x27;</span></span><br><span class="line">  smtp_hello: <span class="string">&#x27;qq.com&#x27;</span></span><br><span class="line">route:</span><br><span class="line"><span class="comment">#重复报警的间隔时间，如果没有解即报警问题，则会间隔指定时间一直触发报警，比如:5m</span></span><br><span class="line">  group_by: [<span class="string">&#x27;alertname&#x27;</span>]</span><br><span class="line">  group_wait: 5s</span><br><span class="line">  group_interval: 5s</span><br><span class="line">  repeat_interval: 5m</span><br><span class="line">  <span class="comment">#采用什么方式接收报警，例如&#x27;email&#x27;</span></span><br><span class="line">  receiver: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">receivers:</span><br><span class="line"><span class="comment">#定义接收者的名称，注意这里的name要和上面的route对应，例如: &#x27;email&#x27;</span></span><br><span class="line">- name: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">  email_configs:</span><br><span class="line">  <span class="comment">#邮箱发给谁</span></span><br><span class="line">  - to: <span class="string">&#x27;xxxxxxxx@qq.com&#x27;</span></span><br><span class="line">    send_resolved: <span class="literal">true</span></span><br><span class="line">inhibit_rules:</span><br><span class="line">  - source_match:</span><br><span class="line">  <span class="comment">#匹配报警级别，例如: &#x27;critical&#x27;</span></span><br><span class="line">      severity: <span class="string">&#x27;critical&#x27;</span></span><br><span class="line">    target_match:</span><br><span class="line">    <span class="comment">#只要是warning就报警</span></span><br><span class="line">      severity: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    equal: [<span class="string">&#x27;alertname&#x27;</span>, <span class="string">&#x27;dev&#x27;</span>, <span class="string">&#x27;instance&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">3、启动alertmanager</span><br><span class="line">[root@master01 kubernetes]# supervisorctl start alertmanager</span><br></pre></td></tr></table></figure><p>2、配置让Prometheus关联alertmanager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# vim /app/prometheus/prometheus.yml </span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">    - static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">        <span class="comment">#这里写alertmanager的安装地址</span></span><br><span class="line">          - 10.0.0.200:9093</span><br><span class="line">          </span><br><span class="line">[root@master01 kubernetes]# supervisorctl restart prometheus</span><br></pre></td></tr></table></figure><p>3、配置触发器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">1、配置触发器规则存放目录</span><br><span class="line"><span class="comment">#一个触发器，一个文件</span></span><br><span class="line">[root@master01 kubernetes]# vim /app/prometheus/prometheus.yml </span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span></span><br><span class="line">rule_files:</span><br><span class="line"><span class="comment">#配置触发器规则存放目录</span></span><br><span class="line">  - <span class="string">&quot;/app/prometheus/alertmanager/user_count.yml&quot;</span></span><br><span class="line">  <span class="comment">#- &quot;second_rules.yml&quot;</span></span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# supervisorctl restart prometheus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、创建存放目录</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">mkdir</span> -p /app/prometheus/alertmanager/</span><br><span class="line"></span><br><span class="line">3、编写触发器规则文件</span><br><span class="line">[root@master01 kubernetes]# vim /app/prometheus/alertmanager/user_count.yml</span><br><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">- name: user-count</span><br><span class="line">  rules:</span><br><span class="line">  - alert: user-count</span><br><span class="line">    <span class="built_in">expr</span>: user_count &gt; 3</span><br><span class="line">    <span class="keyword">for</span>: 15s</span><br><span class="line">    labels:</span><br><span class="line">      severity: 1</span><br><span class="line">      team: node</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.exported_instance &#125;&#125; 登录用户数量超过 3！&quot;</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">#参数解释    </span></span><br><span class="line"><span class="built_in">groups</span>:</span><br><span class="line"><span class="comment">#名字自定义</span></span><br><span class="line">- name: user-count</span><br><span class="line">  rules:</span><br><span class="line">  <span class="comment">#告警信息，user-count的值的key</span></span><br><span class="line">  - alert: user-count</span><br><span class="line">  <span class="comment">#expr: key名字&#123;job=&quot;xxx&quot;&#125; == 3</span></span><br><span class="line">    <span class="built_in">expr</span>: user_count == 3</span><br><span class="line">    <span class="keyword">for</span>: 15s</span><br><span class="line">    labels:</span><br><span class="line">      severity: 1</span><br><span class="line">      team: node</span><br><span class="line">    annotations:</span><br><span class="line">    <span class="comment">#exported_instance是获取机器的ip</span></span><br><span class="line">      summary: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.exported_instance &#125;&#125; 登录用户数量超过 3！&quot;</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20241002124047891.png" alt="image-20241002124047891"></p><p>4、测试，node03多开几个终端，浏览器访问10.0.0.200:9093，查看有报警信息，就可以查看邮箱，会收到报警邮件</p><p><img src="../image/study_img/image-20241002145740578.png" alt="image-20241002145740578"></p><p><img src="../image/study_img/image-20241002145916255.png" alt="image-20241002145916255"></p><p>5、当登录用户数量少于3个时间，也会发恢复的邮件</p><p><img src="../image/study_img/image-20241002150222081.png" alt="image-20241002150222081"></p><h3 id="9、K8s部署Prometheus的资源清单——这个是部署在容器里面"><strong>9、K8s部署Prometheus的资源清单——这个是部署在容器里面</strong></h3><p>1、ConfigMap 资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; prom-cm.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Namespace</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prom-config</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ConfigMap</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prom-config</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">data:</span></span><br><span class="line"><span class="string">  prometheus.yml: |</span></span><br><span class="line"><span class="string">  #全局配置</span></span><br><span class="line"><span class="string">    global:</span></span><br><span class="line"><span class="string">      scrape_interval: 15s #抓取数据间隔时间</span></span><br><span class="line"><span class="string">      scrape_timeout: 15s #抓取数据超时时间</span></span><br><span class="line"><span class="string">    scrape_configs: #抓取配置</span></span><br><span class="line"><span class="string">    #任务名称</span></span><br><span class="line"><span class="string">      - job_name: &quot;prometheus&quot;</span></span><br><span class="line"><span class="string">      #静态配置</span></span><br><span class="line"><span class="string">        static_configs:</span></span><br><span class="line"><span class="string">        #抓取数据节点的IP端口，起在容器里面，只能写localhost</span></span><br><span class="line"><span class="string">          - targets: [&quot;localhost:9090&quot;]</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果要添加客户端，就要edit这个资源清单，添加客户端</span></span><br></pre></td></tr></table></figure><p>2、PV和PVC资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">1、你要安装在哪台机器，就先创建挂载目录，因为下面使用的是<span class="built_in">local</span></span><br><span class="line"><span class="built_in">mkdir</span> /data/k8s/prometheus</span><br><span class="line"></span><br><span class="line">2、资源清单</span><br><span class="line"><span class="built_in">cat</span> &gt; prom-pv-pvc.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: PersistentVolume</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prom-localhost</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: prometheus</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  capacity:</span></span><br><span class="line"><span class="string">    storage: 10Gi</span></span><br><span class="line"><span class="string">  accessModes:</span></span><br><span class="line"><span class="string">  - ReadWriteOnce</span></span><br><span class="line"><span class="string">  storageClassName: local-storage</span></span><br><span class="line"><span class="string">  local:</span></span><br><span class="line"><span class="string">    path: /data/k8s/prometheus</span></span><br><span class="line"><span class="string">    #这里是亲和性</span></span><br><span class="line"><span class="string">  nodeAffinity:</span></span><br><span class="line"><span class="string">    required:</span></span><br><span class="line"><span class="string">      nodeSelectorTerms:</span></span><br><span class="line"><span class="string">      - matchExpressions:</span></span><br><span class="line"><span class="string">        - key: kubernetes.io/hostname</span></span><br><span class="line"><span class="string">        #In,就是主机名包含node，都起</span></span><br><span class="line"><span class="string">          operator: In</span></span><br><span class="line"><span class="string">          values:</span></span><br><span class="line"><span class="string">          #- 你想安装在哪台机器，就写他的主机名</span></span><br><span class="line"><span class="string">          - node03</span></span><br><span class="line"><span class="string">  persistentVolumeReclaimPolicy: Retain</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: PersistentVolumeClaim</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prom-data</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: prometheus</span></span><br><span class="line"><span class="string">  accessModes:</span></span><br><span class="line"><span class="string">  - ReadWriteOnce</span></span><br><span class="line"><span class="string">  resources:</span></span><br><span class="line"><span class="string">    requests:</span></span><br><span class="line"><span class="string">      storage: 10Gi</span></span><br><span class="line"><span class="string">  storageClassName: local-storage</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>3、RBAC 权限资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; prom-rbac.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ServiceAccount</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: ClusterRole</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">rules:</span></span><br><span class="line"><span class="string">- apiGroups:</span></span><br><span class="line"><span class="string">  - &quot;&quot;</span></span><br><span class="line"><span class="string">  resources:</span></span><br><span class="line"><span class="string">  - nodes</span></span><br><span class="line"><span class="string">  - services</span></span><br><span class="line"><span class="string">  - endpoints</span></span><br><span class="line"><span class="string">  - pods</span></span><br><span class="line"><span class="string">  - nodes/proxy</span></span><br><span class="line"><span class="string">  verbs:</span></span><br><span class="line"><span class="string">  - get</span></span><br><span class="line"><span class="string">  - list</span></span><br><span class="line"><span class="string">  - watch</span></span><br><span class="line"><span class="string">- apiGroups:</span></span><br><span class="line"><span class="string">  - &quot;extensions&quot;</span></span><br><span class="line"><span class="string">  resources:</span></span><br><span class="line"><span class="string">  - ingresses</span></span><br><span class="line"><span class="string">  verbs:</span></span><br><span class="line"><span class="string">  - get</span></span><br><span class="line"><span class="string">  - list</span></span><br><span class="line"><span class="string">  - watch</span></span><br><span class="line"><span class="string">- apiGroups:</span></span><br><span class="line"><span class="string">  - &quot;&quot;</span></span><br><span class="line"><span class="string">  resources:</span></span><br><span class="line"><span class="string">  - configmaps</span></span><br><span class="line"><span class="string">  - nodes/metrics</span></span><br><span class="line"><span class="string">  verbs:</span></span><br><span class="line"><span class="string">  - get</span></span><br><span class="line"><span class="string">- nonResourceURLs:</span></span><br><span class="line"><span class="string">  - /metrics</span></span><br><span class="line"><span class="string">  verbs:</span></span><br><span class="line"><span class="string">  - get</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: ClusterRoleBinding</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">roleRef:</span></span><br><span class="line"><span class="string">  apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">  kind: ClusterRole</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">subjects:</span></span><br><span class="line"><span class="string">- kind: ServiceAccount</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>4、Deployment 资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; prom-dp.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: prometheus</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: prometheus</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: prometheus</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      serviceAccountName: prometheus</span></span><br><span class="line"><span class="string">      volumes:</span></span><br><span class="line"><span class="string">      - name: data</span></span><br><span class="line"><span class="string">      persistentVolumeClaim:</span></span><br><span class="line"><span class="string">        claimName: prom-data</span></span><br><span class="line"><span class="string">      - name: config-volume</span></span><br><span class="line"><span class="string">        configMap:</span></span><br><span class="line"><span class="string">          name: prom-config</span></span><br><span class="line"><span class="string">      initContainers:</span></span><br><span class="line"><span class="string">      - name: fix-permissions</span></span><br><span class="line"><span class="string">        image: busybox</span></span><br><span class="line"><span class="string">        command: [chown, -R, &quot;nobody:nobody&quot;, /prometheus]</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: data</span></span><br><span class="line"><span class="string">          mountPath: /prometheus</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: prometheus</span></span><br><span class="line"><span class="string">        image: prom/prometheus:v2.24.1</span></span><br><span class="line"><span class="string">        args:</span></span><br><span class="line"><span class="string">        - &quot;--config.file=/etc/prometheus/prometheus.yml&quot; # 配置文件路径</span></span><br><span class="line"><span class="string">        - &quot;--storage.tsdb.path=/prometheus&quot; # 数据保存路径</span></span><br><span class="line"><span class="string">        - &quot;--storage.tsdb.retention.time=24h&quot; # 数据保留，默认15天</span></span><br><span class="line"><span class="string">        - &quot;--web.enable-admin-api&quot; # 控制对admin HTTP API访问</span></span><br><span class="line"><span class="string">        - &quot;--web.enable-lifecycle&quot; # 支持热更新</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 9090</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: config-volume</span></span><br><span class="line"><span class="string">          mountPath: /etc/prometheus</span></span><br><span class="line"><span class="string">        - name: data</span></span><br><span class="line"><span class="string">          mountPath: /prometheus</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            cpu: 100m</span></span><br><span class="line"><span class="string">            memory: 512Mi</span></span><br><span class="line"><span class="string">          limits:</span></span><br><span class="line"><span class="string">            cpu: 100m</span></span><br><span class="line"><span class="string">          memory: 512Mi</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>5、Service资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; prom-svc.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: prometheus</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    app: prometheus</span></span><br><span class="line"><span class="string">  ports:</span></span><br><span class="line"><span class="string">  - name: web</span></span><br><span class="line"><span class="string">    port: 9090</span></span><br><span class="line"><span class="string">    targetPort: 9090</span></span><br><span class="line"><span class="string">  type: ClusterIP</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>6、ingress资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; prom-ingress.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: networking.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: Ingress</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: prometheus</span></span><br><span class="line"><span class="string">  namespace: prom</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: prometheus</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  rules:</span></span><br><span class="line"><span class="string">  - host: prom.drz.com</span></span><br><span class="line"><span class="string">    http:</span></span><br><span class="line"><span class="string">      paths:</span></span><br><span class="line"><span class="string">      - path: /</span></span><br><span class="line"><span class="string">        pathType: ImplementationSpecific</span></span><br><span class="line"><span class="string">        backend:</span></span><br><span class="line"><span class="string">          service:</span></span><br><span class="line"><span class="string">            name: prometheus</span></span><br><span class="line"><span class="string">            port:</span></span><br><span class="line"><span class="string">              number: 9090</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>7、安装完成，应该是起到node03上的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、物理机做域名解析</span><br><span class="line">10.0.0.203 prom.drz.com   </span><br><span class="line"></span><br><span class="line">浏览器访问域名</span><br><span class="line">prom.drz.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉5、Pod的钩子和探针</title>
      <link href="/posts/feb758ca.html"/>
      <url>/posts/feb758ca.html</url>
      
        <content type="html"><![CDATA[<h2 id="Pod的钩子和探针">Pod的钩子和探针</h2><h3 id="1、pod的生命周期">1、<strong>pod的生命周期</strong></h3><p><img src="../image/study_img/image-20240920083828296.png" alt="image-20240920083828296"></p><p><img src="../image/study_img/image-20240920083900491.png" alt="image-20240920083900491"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">生命周期里面包含的东西</span><br><span class="line">1、初始化容器</span><br><span class="line">2、2个钩子</span><br><span class="line">   - start hook</span><br><span class="line">   - stop hook</span><br><span class="line"></span><br><span class="line"><span class="comment">#init container</span></span><br><span class="line">初始化容器的作用：主容器启动之前，可以让他做一些准备工作。</span><br><span class="line">比如：</span><br><span class="line">1、创建用户，容器的统一用户</span><br><span class="line">2、2个容器做了共享储存，那么我们可以让他先启动一个容器，来对目录进行更改和授权</span><br><span class="line">3、容器需要连接数据库，可以让初始化容器检测数据库是否可以正常连接，如果可以再启动主容器</span><br><span class="line"></span><br><span class="line"><span class="comment">#hook</span></span><br><span class="line">Poststart：在容器创建后，立即执行，但时间不能太久，否则容器不会是running状态</span><br><span class="line">Prestart：在容器停止前，执行一些命令，主要用于优雅关闭进程</span><br><span class="line"></span><br><span class="line"><span class="comment">#Liveness probe</span></span><br><span class="line">存活探针，用于定义容器内，应用是否满足探针状态</span><br><span class="line"></span><br><span class="line"><span class="comment">#rediness probe</span></span><br><span class="line">就绪探针，指定何时允许容器进入流量</span><br></pre></td></tr></table></figure><h3 id="2、初始化容器">2、<strong>初始化容器</strong></h3><ul><li>利用初始化容器更改nginx页面</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#利用初始化容器更改nginx页面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#主容器启动之前，我们可以让他做一些准备工作，初始化容器执行完成后就结束退出</span></span><br><span class="line"></span><br><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# vim init-container.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: init-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data</span><br><span class="line">    emptyDir: &#123;&#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">#指定一个初始化容器：初始化容器的写法和下面容器的写法是一样的</span></span><br><span class="line">  initContainers:</span><br><span class="line">  - name: initcontainer</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 初始化容器&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">2、运行容器，查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f init-container.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -owide</span><br><span class="line">NAME        READY   STATUS    RESTARTS   AGE    IP          NODE</span><br><span class="line">init-pod    2/2     Running   0          2m1s   10.2.2.6    node02</span><br><span class="line">[root@master01 kubernetes]# curl 10.2.2.6</span><br><span class="line"><span class="built_in">test</span> k8s 初始化容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it init-pod -c c7-container -- /bin/bash</span><br><span class="line">[root@init-pod /]# <span class="built_in">cat</span> /usr/share/nginx/html/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 初始化容器</span><br><span class="line"></span><br><span class="line">现在相当于3个容器同时挂载在同一个目录下，同时也相当于挂载到宿主机的一个临时目录，他们3的目录做了共享</span><br><span class="line"></span><br><span class="line">比如说起个nginx和php容器，容器的文件互相隔离，代码就不共享，那代码部署在哪里呢，如果部署在nginx上，php才是解析代码的，wordpress不是前后端分离的，nginx配置文件就不能用socket连接php了，要用fastcgi_pass xx.xx.xx.xx:900,代码必须2边都要存</span><br></pre></td></tr></table></figure><h3 id="3、钩子">3、<strong>钩子</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动钩子  poststart  启动之后</span></span><br><span class="line">lifecycle: </span><br><span class="line">  preStart: </span><br><span class="line">    <span class="built_in">exec</span>:</span><br><span class="line">    httpGet: </span><br><span class="line">    tcpSocket </span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span>：执行命令</span><br><span class="line">httpGet：检测HTTP，比如检测网站的80，443端口，要求web页面状态码返回是不是404，200，一般在探针里用</span><br><span class="line">tcpSocket：检测端口通不通，比如检测数据库是否正常运行，如果用httpget不行</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止钩子   preStop   停止之前</span></span><br><span class="line">lifecycle: </span><br><span class="line">  preStop: </span><br><span class="line">    <span class="built_in">exec</span>:</span><br><span class="line">    httpGet: </span><br><span class="line">    tcpSocket</span><br></pre></td></tr></table></figure><ul><li>使用启动钩子在一个pod里统一多个容器的用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cp</span> init-container.yml poststart.yml</span><br><span class="line">[root@master01 kubernetes]# vim poststart.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: poststart-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  <span class="comment">#这里挂载目录可以是临时的</span></span><br><span class="line">  - name: nginx-data</span><br><span class="line">    emptyDir: &#123;&#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  initContainers:</span><br><span class="line">  - name: initcontainer</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 使用启动钩子在一个pod里统一多个容器的用户&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="comment">#nginx启动之后的钩子写法:统一容器的用户</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">     <span class="comment">#nginx里面一开始写useradd命令创建用户，但是这个容器里面没有useradd命令，会报错。所以只能用改组、用户有关的配置文件去添加用户</span></span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;www:x:666&#x27; &gt;&gt; /etc/group &amp;&amp; echo &#x27;www:x:666:666::/home/www:/sbin/nologin&#x27; &gt;&gt; /etc/passwd&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    <span class="comment">#C7启动之后的钩子写法:统一容器的用户</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>: </span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;groupadd www -g 666 &amp;&amp; useradd www -u 666 -g 666 -s /sbin/nologin -M&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">2、运行容器，查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f  poststart.yml </span><br><span class="line">pod/poststart-pod created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod poststart-pod -owide</span><br><span class="line">NAME            READY   STATUS    RESTARTS   AGE   IP          NODE  </span><br><span class="line">poststart-pod   2/2     Running   0          33s   10.2.3.33   node03</span><br><span class="line">[root@master01 kubernetes]# curl 10.2.3.33</span><br><span class="line"><span class="built_in">test</span> k8s 使用启动钩子在一个pod里统一多个容器的用户</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it poststart-pod -c c7-container -- /bin/bash</span><br><span class="line">[root@poststart-pod /]# <span class="built_in">id</span> www</span><br><span class="line">uid=666(www) gid=666(www) <span class="built_in">groups</span>=666(www)</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it poststart-pod -c nginx-container -- /bin/sh</span><br><span class="line">/ <span class="comment"># id www</span></span><br><span class="line">uid=666(www) gid=666 <span class="built_in">groups</span>=666</span><br></pre></td></tr></table></figure><ul><li>停止钩子  容器停止之前打印指定内容到文件  (不常用，没什么应用场景)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cp</span> poststart.yml poststop.yml</span><br><span class="line">[root@master01 kubernetes]# vim prestop.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: poststop-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  <span class="comment">#为了满足停止之前echo内容到挂载目录，所以这里的挂载目录需要持久化</span></span><br><span class="line">  - name: nginx-data</span><br><span class="line">    hostPath:</span><br><span class="line">     path: /data/nginx</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  initContainers:</span><br><span class="line">  - name: initcontainer</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 使用启动钩子在一个pod里统一多个容器的用户&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;www:x:666&#x27; &gt;&gt; /etc/group &amp;&amp; echo &#x27;www:x:666:666::/home/www:/sbin/nologin&#x27; &gt;&gt; /etc/passwd&quot;</span>]</span><br><span class="line"><span class="comment">#容器停止之前做的事情</span></span><br><span class="line">      preStop:</span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 使用停止钩子使pod在停止之前打印  bye&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    <span class="comment">#C7启动之后的钩子写法:统一容器的用户</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>: </span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;groupadd www -g 666 &amp;&amp; useradd www -u 666 -g 666 -s /sbin/nologin -M&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">      </span><br><span class="line"> 2、查看  </span><br><span class="line">[root@node03 ~]# <span class="built_in">rm</span> -rf /data/nginx/index.html</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod poststop-pod -owide</span><br><span class="line">NAME           READY   STATUS    RESTARTS   AGE   IP          NODE  </span><br><span class="line">poststop-pod   2/2     Running   0          40s   10.2.3.34   node03</span><br><span class="line">[root@master01 kubernetes]# curl 10.2.3.34</span><br><span class="line"><span class="built_in">test</span> k8s 使用启动钩子在一个pod里统一多个容器的用户</span><br><span class="line"></span><br><span class="line">3、现在curl出来的结果还没有改变，需要删除这个pod，才会发生改变，删掉之后容器不在了，不能用curl,只能到挂载目录去看</span><br><span class="line">[root@master01 kubernetes]# kubectl delete pod poststop-pod</span><br><span class="line"></span><br><span class="line">[root@node03 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 使用停止钩子使pod在停止之前打印 <span class="built_in">bye</span></span><br></pre></td></tr></table></figure><h3 id="4、探针">4、<strong>探针</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#存活性探针(存活态探针) livenessprobe</span></span><br><span class="line">列如：</span><br><span class="line">当nginx容器起来后，即便页面是404，容器会正常运行，80端口也会正常存在，k8s就不会做到重新拉起这个容器，存活性探针</span><br><span class="line">数据库假死，进程存在，存活性探针就可以检测应用是否存活，不存活会出现拉起新的pod</span><br><span class="line"></span><br><span class="line">用于定义容器内，应用是否满足探针指定状态，如果不满足，则删除POD重新拉起一个新的POD</span><br><span class="line"></span><br><span class="line">存活探针简单来说就是用来检测容器的应用程序是否还正常工作，如果应用程序不正常，即使容器还活着也没有意义了，所以这时候就可以使用存活探针来探测，如果应用程序不正常，就重启POD。</span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span>：执行命令</span><br><span class="line">httpGet：检测HTTP</span><br><span class="line">tcpSocket：检测端口</span><br><span class="line"></span><br><span class="line">ivenessProbe:</span><br><span class="line">httpGet:   <span class="comment">#基于HTTP请求资源</span></span><br><span class="line">path:      <span class="comment">#请求地址，如果这个地址返回的状态码在200~400之间正常</span></span><br><span class="line">port:      <span class="comment">#请求的端口</span></span><br><span class="line">initialDelaySeconds: 3     <span class="comment">#第一次启动探测在容器启动的3s后开始</span></span><br><span class="line">periodSeconds: 3           <span class="comment">#容器启动后每隔3s检测一次</span></span><br></pre></td></tr></table></figure><ul><li>1、存活性探针  exec版   应用场景：比如说nfs,没有页面和端口，就可以用命令，df -Th|grep 挂载目录，如果nfs挂了df -Th会卡主，但是他有一个超时时间，卡住了，到时候超时了就认为挂了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span>还可以写脚本去检测某个服务</span><br><span class="line"></span><br><span class="line">1、写service资源清单</span><br><span class="line">[root@master01 kubernetes]# vim ivenssprobe-service.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: ivenssprobe-service</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">  <span class="comment">#这个标签一定要和下面的标签保持一致，不然会curl报错</span></span><br><span class="line">    app: ivenssprobe</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">    <span class="comment">#把80映射到宿主机的30000端口</span></span><br><span class="line">    nodePort: 30000</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、编写资源清单    到这里目前还没有添加存活探针的功能，在后面添加</span><br><span class="line">[root@master01 kubernetes]# vim ivenssprobe.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: ivenssprobe-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: ivenssprobe</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data</span><br><span class="line">    hostPath:</span><br><span class="line">     path: /data/nginx</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"><span class="comment">#使用启动钩子给nginx一个初始页面，初始化容器或者启动钩子都行，不然挂载出来没页面</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 存活性探针&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">          </span><br><span class="line">2、运行</span><br><span class="line">[root@master01 kubernetes]# kubectl get service</span><br><span class="line">NAME                  TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">ivenssprobe-service   NodePort    10.1.87.209   &lt;none&gt;        80:30000/TCP   25s</span><br><span class="line">kubernetes            ClusterIP   10.1.0.1      &lt;none&gt;        443/TCP        7d5h</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod ivenssprobe-pod -owide</span><br><span class="line">NAME              READY   STATUS    RESTARTS   AGE     IP          NODE  </span><br><span class="line">ivenssprobe-pod   1/1     Running   0          3m53s   10.2.1.11   node01</span><br><span class="line"></span><br><span class="line">3、检查</span><br><span class="line">ivenssprobe-service这个资源相当于给他们做了负载均衡</span><br><span class="line">[root@master01 kubernetes]# curl 10.1.151.36</span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line">[root@master01 kubernetes]# curl 10.2.1.7 </span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line"></span><br><span class="line">由于做了宿主机上的映射，可以浏览器访问   10.0.0.201:30000</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240920165623622.png" alt="image-20240920165623622"></p><p>测试探针</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line"></span><br><span class="line">1、删除主页面，再次浏览器访问，变成403</span><br><span class="line">[root@node01 ~]# <span class="built_in">rm</span> -rf /data</span><br><span class="line"></span><br><span class="line">2、再次查看主页面，还是空的，查看pod，还是running状态，没有任何问题，但网站确实挂了，pod虽然在运行，但是没啥用了，还占用资源</span><br></pre></td></tr></table></figure><p>在资源清单编写存活性探针的检验功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">1、删除旧的pod</span><br><span class="line">[root@master01 kubernetes]# kubectl delete pod ivenssprobe-pod </span><br><span class="line"></span><br><span class="line">2、在资源清单添加存活性探针的检验功能</span><br><span class="line">[root@master01 kubernetes]# vim ivenssprobe.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: ivenssprobe-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: ivenssprobe</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data</span><br><span class="line">    hostPath:</span><br><span class="line">     path: /data/nginx</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"><span class="comment">#使用启动钩子给nginx一个初始页面，初始化容器或者启动钩子都行，不然挂载出来没页面</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 存活性探针&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    livenessProbe:</span><br><span class="line">      <span class="built_in">exec</span>:</span><br><span class="line"><span class="comment">#检测主页面，拿命令检测，当返回值不为0就是失败</span></span><br><span class="line">        <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;cat /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line"><span class="comment">#一定要写优化参数</span></span><br><span class="line">      <span class="comment">#延迟时间3s</span></span><br><span class="line">      initialDelaySeconds: 3 </span><br><span class="line">      <span class="comment">#容器每隔2s检测一次</span></span><br><span class="line">      periodSeconds: 2</span><br><span class="line">      <span class="comment">#超时时间 1s</span></span><br><span class="line">      timeoutSeconds: 1</span><br><span class="line">      <span class="comment">#成功之后3次连续失败，才是真失败，然后重新去拉起，避免网络波动的情况</span></span><br><span class="line">      failureThreshold: 3</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">      </span><br><span class="line">3、查看</span><br><span class="line">[root@master01 kubernetes]#  kubectl apply -f ivenssprobe.yml </span><br><span class="line">pod/ivenssprobe-pod created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod ivenssprobe-pod -owide</span><br><span class="line">NAME              READY   STATUS    RESTARTS   AGE   IP          NODE  </span><br><span class="line">ivenssprobe-pod   1/1     Running   0          64s   10.2.1.12   node01</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参数解释：</span><br><span class="line"></span><br><span class="line">initialDelaySeconds: <span class="comment">#第一次执行探针需要在容器启动后等待的时候时间</span></span><br><span class="line">periodSeconds: <span class="comment">#容器启动后每隔多少秒执行一次存活探针(心跳检测的间隔时间)</span></span><br><span class="line">timeoutSeconds: <span class="comment">#探针超时时间，默认1秒，最小1秒</span></span><br><span class="line">successThreshold: <span class="comment">#探针失败后最少连续探测成功多少次才被认定成功，默认1次，如果是liveness必须为1(一开始检测一个网站是403，代表网站失败，不可能一失败就立马去重新拉起pod,需要检查到几次成功才认为是成功的)</span></span><br><span class="line">failureThreshold: <span class="comment">#探针成功后被视为失败的探测的最小连续失败次数。默认3次。最小值为1(探针检测成功容器正常运行，那么还要检测几次失败才会重新拉起这个pod)</span></span><br></pre></td></tr></table></figure><p>再次测试  访问网页  10.0.0.201:30000  恢复正常</p><p><img src="../image/study_img/image-20240920173329296.png" alt="image-20240920173329296"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line">[root@node01 ~]# <span class="built_in">rm</span> -rf /data</span><br><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line">[root@node01 ~]# <span class="built_in">rm</span> -rf /data</span><br><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">cat</span>: /data/nginx/index.html: No such file or directory</span><br><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">cat</span>: /data/nginx/index.html: No such file or directory</span><br><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line"></span><br><span class="line">删掉主页面，查看主页面内容，会重新拉起，所以会看到内容</span><br><span class="line"></span><br><span class="line">但是<span class="built_in">exec</span>有缺陷，以后代码页面多，不能<span class="built_in">cat</span>，所以Httpget比较好用</span><br></pre></td></tr></table></figure><ul><li>2、存活性探针  httpget版</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">1、删除旧的pod</span><br><span class="line">[root@master01 kubernetes]# kubectl delete pod ivenssprobe-pod </span><br><span class="line"></span><br><span class="line">2、在资源清单添加存活性探针的检验功能</span><br><span class="line">[root@master01 kubernetes]# vim ivenssprobe.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: ivenssprobe-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: ivenssprobe</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data</span><br><span class="line">    hostPath:</span><br><span class="line">     path: /data/nginx</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"><span class="comment">#使用启动钩子给nginx一个初始页面，初始化容器或者启动钩子都行，不然挂载出来没页面</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 存活性探针&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    livenessProbe:</span><br><span class="line">    <span class="comment">#http版本</span></span><br><span class="line">      httpGet:</span><br><span class="line">      <span class="comment">#host就是本机，但是可以默认就是本机，不需要写</span></span><br><span class="line">        <span class="comment">#host: 127.0.0.1</span></span><br><span class="line"><span class="comment">#path就是uri   http://k8s.driverzeng.com/v1.19/,比如说这个网站的uri就是/v1.19/     http://10.0.0.201:30000/，uri就是/</span></span><br><span class="line">        path: /</span><br><span class="line">      <span class="comment">#还可以加上端口</span></span><br><span class="line">        port: 80</span><br><span class="line">      </span><br><span class="line"><span class="comment">#一定要写优化参数</span></span><br><span class="line">      <span class="comment">#延迟时间3s</span></span><br><span class="line">      initialDelaySeconds: 3 </span><br><span class="line">      <span class="comment">#容器每隔2s检测一次</span></span><br><span class="line">      periodSeconds: 2</span><br><span class="line">      <span class="comment">#超时时间 1s</span></span><br><span class="line">      timeoutSeconds: 1</span><br><span class="line">      <span class="comment">#成功之后3次连续失败，才是真失败，然后重新去拉起，避免网络波动的情况</span></span><br><span class="line">      failureThreshold: 3</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------</span><br><span class="line">不写host是因为不知道pod起来是什么ip,但以后得写，以后不可能吧nginx和mysql起在一个pod,数据库肯定要单独起一个pod</span><br><span class="line"></span><br><span class="line">3、查询</span><br><span class="line">[root@master01 kubernetes]#  kubectl delete pod ivenssprobe-pod </span><br><span class="line">pod <span class="string">&quot;ivenssprobe-pod&quot;</span> deleted</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f ivenssprobe.yml </span><br><span class="line">pod/ivenssprobe-pod created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod ivenssprobe-pod -owide</span><br><span class="line">NAME              READY   STATUS    RESTARTS   AGE   IP          NODE  </span><br><span class="line">ivenssprobe-pod   1/1     Running   0          26s   10.2.1.13   node01</span><br><span class="line"></span><br><span class="line">4、#测试</span><br><span class="line">到node01删除主页文件</span><br><span class="line">[root@node01 ~]# <span class="built_in">rm</span> -rf /data</span><br><span class="line">速度快点，切换到浏览器网站，会看到403，一直刷新，网站就会恢复原样，不需要去<span class="built_in">cat</span>主页文件了</span><br><span class="line"></span><br><span class="line">查看主页文件，恢复原样</span><br><span class="line">[root@node01 ~]# <span class="built_in">cat</span> /data/nginx/index.html </span><br><span class="line"><span class="built_in">test</span> k8s 存活性探针</span><br><span class="line"></span><br><span class="line"><span class="comment">#好处是监测它的80端口，访问这个uri，只要出现状态码40几，50几就会重新拉起，想wordpress这种代码多的情况下，不能用cat命令不可能每个文件都cat,所以httpget是检测nginx最后的方法</span></span><br></pre></td></tr></table></figure><ul><li>3、存活性探针  tcpSocket版   应用场景：比如说数据库，只有端口，没有网站</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">只能检测端口，不会检测页面，删掉页面，没有用，不会重新拉起，httpGet就相当于底层使用curl命令去检测</span><br><span class="line"></span><br><span class="line">tcpSocket: </span><br><span class="line">  host:     <span class="comment">#默认可以不写，他自己知道pod的ip,所以可以不写</span></span><br><span class="line">  port:     <span class="comment">#端口。如果只检测端口，页面删除没有意义，不会拉起</span></span><br><span class="line"></span><br><span class="line">1、在资源清单添加存活性探针的检验功能</span><br><span class="line">[root@master01 kubernetes]# vim ivenssprobe.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: ivenssprobe-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: ivenssprobe</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data</span><br><span class="line">    hostPath:</span><br><span class="line">     path: /data/nginx</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"><span class="comment">#使用启动钩子给nginx一个初始页面，初始化容器或者启动钩子都行，不然挂载出来没页面</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 存活性探针&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    livenessProbe:</span><br><span class="line">      <span class="comment">#tcpSocket版</span></span><br><span class="line">      tcpSocket:</span><br><span class="line">        port: 80</span><br><span class="line">      </span><br><span class="line"><span class="comment">#一定要写优化参数</span></span><br><span class="line">      <span class="comment">#延迟时间3s</span></span><br><span class="line">      initialDelaySeconds: 3 </span><br><span class="line">      <span class="comment">#容器每隔2s检测一次</span></span><br><span class="line">      periodSeconds: 2</span><br><span class="line">      <span class="comment">#超时时间 1s</span></span><br><span class="line">      timeoutSeconds: 1</span><br><span class="line">      <span class="comment">#成功之后3次连续失败，才是真失败，然后重新去拉起，避免网络波动的情况</span></span><br><span class="line">      failureThreshold: 3</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">2、删除旧pod，运行新pod</span><br><span class="line">[root@master01 kubernetes]# kubectl delete pod ivenssprobe-pod &amp;&amp; kubectl apply -f ivenssprobe.yml </span><br><span class="line">pod <span class="string">&quot;ivenssprobe-pod&quot;</span> deleted</span><br><span class="line">pod/ivenssprobe-pod created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod ivenssprobe-pod  -owide</span><br><span class="line">NAME              READY   STATUS    RESTARTS   AGE     IP          NODE  </span><br><span class="line">ivenssprobe-pod   1/1     Running   0          8m58s   10.2.1.14   node01</span><br><span class="line"></span><br><span class="line">3、连接进入容器，断开端口</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it ivenssprobe-pod -c nginx-container -- /bin/sh</span><br><span class="line">/ <span class="comment">#  nginx -s stop</span></span><br><span class="line">执行之后容器会自动退出，因为存活性探针检测到端口不见了，把就容器删除，就会被强制踢出来</span><br></pre></td></tr></table></figure><p>2、就绪性探针</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#就绪性探针(就绪态探针) readnissprobe  </span></span><br><span class="line">就绪性探针配置语法和存活探针基本一样</span><br><span class="line"></span><br><span class="line">有时候我们Pod本身已经起来了，但是pod的容器还没有完全准备好对外提供服务，那么这时候流量进来就会造成请求失败的情况出现，针对这种情况k8s有一种探针叫就绪探针，他的作用就是让k8s知道你的Pod内应用是否准备好为请求提供服务。只有就绪探针ok了才会把流量转发到pod上。</span><br><span class="line"></span><br><span class="line">应用场景：比如说数据库需要初始化，初始化的时候速度比较慢，nginx容器起来的速度快，但是数据库没起来，访问肯定是502，就好比gitlab,nginx起来了，组件没起来，访问显示502，就绪探针就是等数据起来，才对外提供服务(就是浏览器正常访问)</span><br><span class="line">但是想要检测，就要用到service资源</span><br></pre></td></tr></table></figure><p>编写资源清单：需求</p><p>nginx的pod启动，前提条件是数据库pod也启动起来，并且数据库已初始化完了，然后再对外提供服务</p><ul><li>就绪探针  exec命令版</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# vim readnessprobe.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: readnessprobe-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: readnessprobe</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data</span><br><span class="line">    hostPath:</span><br><span class="line">     path: /data/nginx</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"><span class="comment">#使用启动钩子给nginx一个初始页面，初始化容器或者启动钩子都行，不然挂载出来没页面</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 就绪性探针readnessprobe&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    livenessProbe:</span><br><span class="line">      httpGet:</span><br><span class="line">        path: /</span><br><span class="line">        port: 80</span><br><span class="line"><span class="comment">#就绪性探针写法</span></span><br><span class="line">    readinessProbe:</span><br><span class="line">      <span class="built_in">exec</span>:</span><br><span class="line"><span class="comment">#检测文件是否有内容，如果没有文件就没有就绪</span></span><br><span class="line">        <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;cat /usr/share/nginx/html/healthy.html&quot;</span>]</span><br><span class="line">      </span><br><span class="line"><span class="comment">#一定要写优化参数</span></span><br><span class="line">      <span class="comment">#延迟时间3s</span></span><br><span class="line">      initialDelaySeconds: 3 </span><br><span class="line">      <span class="comment">#容器每隔2s检测一次</span></span><br><span class="line">      periodSeconds: 2</span><br><span class="line">      <span class="comment">#超时时间 1s</span></span><br><span class="line">      timeoutSeconds: 1</span><br><span class="line">      <span class="comment">#成功之后3次连续失败，才是真失败，然后重新去拉起，避免网络波动的情况</span></span><br><span class="line">      failureThreshold: 3</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">但是现在没有/usr/share/nginx/html/healthy.html这个文件，那容器肯定是一直不就绪的</span><br><span class="line"></span><br><span class="line">2、删除旧pod,创建新pod</span><br><span class="line">[root@master01 kubernetes]# kubectl delete pod ivenssprobe-pod</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f readnessprobe.yml </span><br><span class="line">pod/readnessprobe-pod created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod readnessprobe-pod -owide</span><br><span class="line">NAME                READY   STATUS    RESTARTS   AGE   IP          NODE </span><br><span class="line">readnessprobe-pod   0/1     Running   0          69s   10.2.1.15   node01</span><br><span class="line"></span><br><span class="line">READY一直显示0/1,一直不就绪，就不对外提供流量，不对外提供流量，但是页面可以访问</span><br><span class="line">[root@master01 kubernetes]# curl 10.2.1.15</span><br><span class="line"><span class="built_in">test</span> k8s 就绪性探针readnessprobe</span><br><span class="line"></span><br><span class="line"><span class="comment">#对外提供流量前面要加负载均衡和端口映射，得用service负载出来</span></span><br><span class="line">3、编写service资源清单</span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cp</span> ivenssprobe-service.yml readnessprobe-service.yml</span><br><span class="line">[root@master01 kubernetes]# vim readnessprobe-service.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: readnessprobe-service</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: readnessprobe</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">    <span class="comment">#不能端口冲突，所以端口需要改一下</span></span><br><span class="line">    nodePort: 30001</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line"></span><br><span class="line">4、启动并查看</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f readnessprobe-service.yml</span><br><span class="line">service/readnessprobe-service created</span><br><span class="line">[root@master01 kubernetes]# kubectl get svc</span><br><span class="line">NAME                    TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes              ClusterIP   10.1.0.1      &lt;none&gt;        443/TCP        7d9h</span><br><span class="line">readnessprobe-service   NodePort    10.1.234.20   &lt;none&gt;        80:30001/TCP   17s</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1、测试curl</span><br><span class="line">[root@master01 kubernetes]# curl 10.1.234.20</span><br><span class="line">curl: (7) Failed connect to 10.1.234.20:80; Connection refused</span><br><span class="line">没有结果，因为就绪探针没有就绪</span><br><span class="line"></span><br><span class="line">2、在node节点映射的宿主机目录创建就绪文件</span><br><span class="line">[root@node01 ~]# <span class="built_in">touch</span> /data/nginx/healthy.html</span><br><span class="line"></span><br><span class="line">3、到master查看就绪状态，已经变成就绪完成</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod readnessprobe-pod -owide</span><br><span class="line">NAME                READY   STATUS    RESTARTS   AGE   IP          NODE  </span><br><span class="line">readnessprobe-pod   1/1     Running   0          16m   10.2.1.15   node01</span><br><span class="line">[root@master01 kubernetes]#  curl 10.1.234.20</span><br><span class="line"><span class="built_in">test</span> k8s 就绪性探针readnessprobe</span><br><span class="line"></span><br><span class="line">4、检查已经对外提供服务了</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240920201911358.png" alt="image-20240920201911358"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">5、删除就绪文件，curl失败，未就绪，网站无法访问</span><br><span class="line">[root@node01 ~]# <span class="built_in">rm</span> -rf /data/nginx/healthy.html</span><br><span class="line">[root@master01 kubernetes]#  curl 10.1.234.20</span><br><span class="line">curl: (7) Failed connect to 10.1.234.20:80; Connection refused</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod readnessprobe-pod -owide</span><br><span class="line"></span><br><span class="line">pod的ip可以通，代表对内提供服务</span><br><span class="line">[root@master01 kubernetes]# curl 10.2.1.15</span><br><span class="line"><span class="built_in">test</span> k8s 就绪性探针readnessprobe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如上是就绪探针的使用方法，但是正常不会这样子做，就像起wp,就要检测数据库有没有准备好</span><br></pre></td></tr></table></figure><p>nginx和mysql，检测mysql是否就绪，就像就对外提供服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# vim readness-mysql.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: readnessprobe-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: readnessprobe</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginx-data</span><br><span class="line">    hostPath:</span><br><span class="line">     path: /data/nginx</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"><span class="comment">#使用启动钩子给nginx一个初始页面，初始化容器或者启动钩子都行，不然挂载出来没页面</span></span><br><span class="line">    lifecycle: </span><br><span class="line">      postStart: </span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;echo &#x27;test k8s 就绪性探针readnessprobe&#x27; &gt; /usr/share/nginx/html/index.html&quot;</span>]</span><br><span class="line">    livenessProbe:</span><br><span class="line">      httpGet:</span><br><span class="line">        path: /</span><br><span class="line">        port: 80</span><br><span class="line"><span class="comment">#就绪性探针写法  #要检测数据只能用tcpsocket,除非是这个网站启动要依赖其他网站就用httpGet:</span></span><br><span class="line">    readinessProbe:</span><br><span class="line">      tcpSocket:</span><br><span class="line">        port: 3306</span><br><span class="line">      </span><br><span class="line"><span class="comment">#一定要写优化参数，存活性探针设置的频率要比就绪探针慢一些</span></span><br><span class="line">      <span class="comment">#延迟时间3s</span></span><br><span class="line">      initialDelaySeconds: 3 </span><br><span class="line">      <span class="comment">#容器每隔2s检测一次</span></span><br><span class="line">      periodSeconds: 2</span><br><span class="line">      <span class="comment">#超时时间 1s</span></span><br><span class="line">      timeoutSeconds: 1</span><br><span class="line">      successThreshold: 3</span><br><span class="line">      <span class="comment">#成功之后3次连续失败，才是真失败，然后重新去拉起，避免网络波动的情况</span></span><br><span class="line">      failureThreshold: 3</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginx-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">  - name: mysql-container</span><br><span class="line">    image: mysql:5.7.44</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">    <span class="comment">#后面的优化，探针可以继续写</span></span><br><span class="line"></span><br><span class="line">2、启动检查</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f readness-mysql.yml</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod readnessprobe-pod</span><br><span class="line">NAME                READY   STATUS    RESTARTS   AGE</span><br><span class="line">readnessprobe-pod   1/2     Running   0          62s</span><br><span class="line"></span><br><span class="line">1/2是因为数据库没有写就绪探针，如果写了，就是0/2,数据库的就绪探针就写检测自己的3306端口</span><br><span class="line">等待一会，mysql初始化完成就绪完成</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod readnessprobe-pod</span><br><span class="line">NAME                READY   STATUS    RESTARTS   AGE</span><br><span class="line">readnessprobe-pod   2/2     Running   0          18s</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl get svc </span><br><span class="line">NAME                    TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes              ClusterIP   10.1.0.1      &lt;none&gt;        443/TCP        7d10h</span><br><span class="line">readnessprobe-service   NodePort    10.1.234.20   &lt;none&gt;        80:30001/TCP   52m</span><br><span class="line">[root@master01 kubernetes]# curl 10.1.234.20</span><br><span class="line"><span class="built_in">test</span> k8s 就绪性探针readnessprobe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#存活探针和就绪探针同时存在的情况下，数据库没有准备好就不就绪，页面就一直是502，出现502，存活探针频率配高了，检测到有问题就会重新拉起，这样就进入死循环，如果2个容器在一个pod里，数据永远起不来，因为把pod删了，会重新创建，进入死循环，所以存活探针要比就绪探针设置的频率慢</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">一：wordpress镜像</span><br><span class="line">在一个POD里启动两个容器</span><br><span class="line">- wordpress</span><br><span class="line">- mysql5.7</span><br><span class="line">1.就绪性探针</span><br><span class="line">2.存活性探针</span><br><span class="line">3.启动钩子</span><br><span class="line">4.停止钩子</span><br><span class="line">5.初始化容器</span><br><span class="line"></span><br><span class="line">二：尝试 wordpress 启动一个POD</span><br><span class="line">MySQL单独启动在一个POD里,如何连接，才能让网站能够正常访问</span><br><span class="line"></span><br><span class="line">三：尝试 nginx 和 php环境分开装，部署代码</span><br><span class="line">fastcgi_pass unix://dev/shm/php.sock</span><br><span class="line"></span><br><span class="line">一开始是这样子写的fastcgi_pass 127.0.0.1:9000，但是现在要分开安装，就要写内外ip  fastcgi_pass 172.16.1.8:9000</span><br><span class="line">测试，上传图片</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉4、标签的设置及使用</title>
      <link href="/posts/4666867d.html"/>
      <url>/posts/4666867d.html</url>
      
        <content type="html"><![CDATA[<h2 id="标签的设置及使用">标签的设置及使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">kubectl get  [资源] -n [名称空间] --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看node标签</span></span><br><span class="line">[root@master01 ~]# kubectl get nodes --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看pod的标签</span></span><br><span class="line">[root@master01 ~]# kubectl get  pod -n kube-flannel --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment">#给node打标签</span></span><br><span class="line">[root@master01 ~]# kubectl label node node01 MEM=16G</span><br><span class="line">node/node01 labeled</span><br><span class="line">[root@master01 ~]# kubectl get nodes --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment">#给node打角色标签：为了区分项目名，或者配置</span></span><br><span class="line">node-role  角色标签的接口</span><br><span class="line">node-role.kubernetes.io  标识调角色标签的接口</span><br><span class="line">=变成-号，就是删除角色标签  node-</span><br><span class="line">node=  ：表示给角色打的标签名叫node</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# kubectl label node node01 node-role.kubernetes.io/node=</span><br><span class="line">[root@master01 ~]# kubectl get nodes</span><br><span class="line">NAME       STATUS   ROLES    AGE     VERSION</span><br><span class="line">master01   Ready    master   5d23h   v1.19.3</span><br><span class="line">node01     Ready    node     5d23h   v1.19.3</span><br><span class="line">node02     Ready    node     5d23h   v1.19.3</span><br><span class="line">node03     Ready    node     5d23h   v1.19.3</span><br></pre></td></tr></table></figure><p><font color=red><strong>给pod打标签的方法：    如果不资源清单里面不写标签，起来的pod就没有标签，不会存在默认标签的说法，所以资源清单里面一定要写标签</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#给pod打标签为了以后通信用</span></span><br><span class="line">方法一：</span><br><span class="line">使用命令打标签：(一般很少用命令打标签，以后起pod是用资源清单的，所以在资源清单里面打标签比较常用)</span><br><span class="line">[root@master01 ~]# kubectl label pod kube-flannel-ds-4ncf5 run=flannel -n kube-flannel </span><br><span class="line">kube-flannel-ds-4ncf5：Pod名</span><br><span class="line">run=flannel：标签名</span><br><span class="line">kube-flannel：名称空间</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法二：</span><br><span class="line"><span class="comment">#给Pod打标签(用资源清单打，比较常用)</span></span><br><span class="line">[root@master01 kubernetes]# vim nginx-label.yml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata: </span><br><span class="line">  name: nginx-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    run: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx:alpine</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">运行资源清单 </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-label.yml </span><br><span class="line">查看</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod --show-labels</span><br><span class="line">NAME           READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-pod      1/1     Running   0          23s   run=nginx</span><br></pre></td></tr></table></figure><p>将pod起到指定的node上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">上面执行了命令给node01打MEM=16G的标签</span><br><span class="line">[root@master01 ~]# kubectl label node node01 MEM=16G</span><br><span class="line"></span><br><span class="line">将pod起在MEM=16的节点上</span><br><span class="line"><span class="comment">#启动pod在指定标签的node上</span></span><br><span class="line">[root@master01 kubernetes]# vim nginx2-label.yml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata: </span><br><span class="line">  name: nginx-pod-v2</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    run: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container-v2</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="comment">#将pod起在MEM=16的节点上</span></span><br><span class="line">  nodeSelector:</span><br><span class="line">    MEM: 16G</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">#(一般来说不写如下内容，因为k8s会做资源计算和调度，但是在起redis或者数据库这种pod的时候，他两对内存的使用比较大，建议不要起在同一个机器上，这个情况就要使用如下命令了，避免k8s自己资源计算，将redis、mysql起在同一个机器) </span></span><br><span class="line">  nodeSelector:</span><br><span class="line">    MEM: 16G</span><br><span class="line"> </span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx2-label.yml </span><br><span class="line">pod/nginx-pod-v2 created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-pod                1/1     Running   0          17m</span><br><span class="line">nginx-pod-v2             1/1     Running   0          32s</span><br><span class="line">查看起在node01上的</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod nginx-pod-v2  -o wide</span><br><span class="line">NAME           READY   STATUS    RESTARTS   AGE     IP         NODE  </span><br><span class="line">nginx-pod-v2   1/1     Running   0          6m26s   10.2.1.4   node01</span><br></pre></td></tr></table></figure><p>删除标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1、先查看</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod --show-labels</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-pod                1/1     Running   0          31m   run=nginx</span><br><span class="line">nginx-pod-v2             1/1     Running   0          14m   run=nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#删除标签</span><br><span class="line">kubectl label [资源] [资源名] [标签名/标签key]-</span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# kubectl label pod nginx-pod-v2 run-</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod --show-labels</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-pod                1/1     Running   0          32m   run=nginx</span><br><span class="line">nginx-pod-v2             1/1     Running   0          15m   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#根据标签查找pod</span></span><br><span class="line">3、查看哪些pod打了run=nginx的标签，打了这个标签的都会被列出来</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -l run=nginx</span><br><span class="line">NAME        READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-pod   1/1     Running   0          35m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#根据标签删除pod</span></span><br><span class="line">4、打了标签比较方便，可以根据标签去筛选，还可以根据标签去删除pod</span><br><span class="line">[root@master01 kubernetes]# kubectl delete pod -l run=nginx</span><br><span class="line">pod <span class="string">&quot;nginx-pod&quot;</span> deleted</span><br><span class="line"></span><br><span class="line">  但是一个pod里面起2个容器怎么连</span><br><span class="line">  -c 永远只有3个引号</span><br><span class="line">  默认连第一个容器</span><br><span class="line">  -c指定容器名</span><br><span class="line">  <span class="comment">#当一个pod中有多个容器时</span></span><br></pre></td></tr></table></figure><p>连接到pod     容器可以使用命令连接进去，pod也可以使用命令连接进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#连接到一个pod</span></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it  nginx-pod-v2 -- /bin/sh</span><br><span class="line">/ <span class="comment"># ls</span></span><br><span class="line">bin           etc  </span><br><span class="line"></span><br><span class="line">--：相当于分隔符,--后面的所有都是命令</span><br><span class="line"></span><br><span class="line"><span class="comment">#问题：一个pod里面起2个容器怎么连？</span></span><br><span class="line">1、编写一个pod起2个容器的资源清单</span><br><span class="line">[root@master01 kubernetes]# vim nginx-busybox.yml</span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-busybox</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: busybox-container</span><br><span class="line">    image: busybox</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line"> <span class="comment">#-c：表示永远只有3个引号，第3个引号可以写长的命令</span></span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">2、运行pod,并查看pod是否起来，查看pod起在哪个机器</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f nginx-busybox.yml </span><br><span class="line">pod/nginx-busybox created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-5f5d9d69c4-d8hvx   1/1     Running   0          19h</span><br><span class="line">nginx-busybox            2/2     Running   0          8s</span><br><span class="line">nginx-pod-v2             1/1     Running   0          43m</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod nginx-busybox -o wide</span><br><span class="line">NAME            READY   STATUS    RESTARTS   AGE     IP         NODE  </span><br><span class="line">nginx-busybox   2/2     Running   0          3m34s   10.2.2.5   node02</span><br><span class="line"></span><br><span class="line">3、连接进入容器</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it nginx-busybox -- /bin/sh</span><br><span class="line">/ <span class="comment"># ls -l /usr</span></span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x    2 root     root            17 May 18  2023 bin</span><br><span class="line">drwxr-xr-x    2 daemon   daemon           6 May 18  2023 sbin</span><br><span class="line"></span><br><span class="line">该目录没有站点目录，所以进去的busybox容器，所以默认连第一个容器</span><br><span class="line"></span><br><span class="line">4、如果需要连接指定的容器，需要使用选项-c指定</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it nginx-busybox -c nginx-container -- /bin/sh</span><br><span class="line">/ <span class="comment"># ls -l /usr/share/nginx/html/</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--    1 root     root           497 Aug 14 06:12 50x.html</span><br><span class="line">-rw-r--r--    1 root     root           615 Aug 14 06:12 index.html</span><br><span class="line"></span><br><span class="line">-c：连接到指定的容器名</span><br><span class="line"></span><br><span class="line">作用：k8s只需要在master上操作，就可以连到需要连的容器</span><br></pre></td></tr></table></figure><h2 id="2、重新认识Pod">2、<strong>重新认识Pod</strong></h2><p>共享网络</p><p><img src="../image/study_img/image-20240919110354547.png" alt="image-20240919110354547"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、Pod内的容器使用Container模式共享根容器的网络</span><br><span class="line">2、容器看到的网络设备信息和根容器完全相同</span><br><span class="line">3、Pod内的多个容器可以使用localhost进行网络通讯</span><br><span class="line">4、Pod内的多个容器不能绑定相同的端口</span><br><span class="line">5、Pod的生命周期和根容器一样，如果根容器退出，Pod就退出</span><br></pre></td></tr></table></figure><h2 id="3、共享文件系统">3、<strong>共享文件系统</strong></h2><h3 id="1、本地共享储存">1、<strong>本地共享储存</strong></h3><p><img src="../image/study_img/image-20240919165826698.png" alt="image-20240919165826698"></p><p>第一种：hostPath  本地的映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行数据库</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wp_db \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# vim wp.yml</span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: mysql57-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql57</span><br><span class="line">    run: mysql57</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment">#设置挂载映射的写法   指定宿主机的挂载目录</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data       <span class="comment">#名字一定要写，设置挂载的变量，相当于变量名</span></span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql    <span class="comment">#宿主机的目录，相当于变量值</span></span><br><span class="line">  - name: test-data</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /opt/test</span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: mysql57-container</span><br><span class="line">    image: mysql:5.7.44</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;123&quot;</span></span><br><span class="line">    - name: MYSQL_DATABASE</span><br><span class="line">      value: <span class="string">&quot;wp_db&quot;</span></span><br><span class="line">    - name: MYSQL_USER</span><br><span class="line">      value: <span class="string">&quot;wp_user&quot;</span></span><br><span class="line">    - name: MYSQL_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="comment">#指定字符集的写法</span></span><br><span class="line">    args:</span><br><span class="line">    - --character-set-server=utf8mb4</span><br><span class="line">    - --collation-server=utf8mb4_unicode_ci</span><br><span class="line"><span class="comment">#容器里面的目录挂载出来的写法</span></span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: mysql-data             <span class="comment">#现在容器的目录要挂到宿主机的哪个目录，就写宿主机目录的变量名</span></span><br><span class="line">      mountPath: /var/lib/mysql    <span class="comment">#这里写容器里需要挂出来的目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###</span></span><br><span class="line">--xxx一般用args</span><br><span class="line">如果是一条完整的命令就用<span class="built_in">command</span></span><br><span class="line"></span><br><span class="line">2、运行资源清单，并查看pod运行的node</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f mysql.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE     IP          NODE  </span><br><span class="line">mysql57-pod              1/1     Running   0          3m42s   10.2.3.14   node03</span><br><span class="line"></span><br><span class="line">3、到node03节点查看目录是否映射</span><br><span class="line">[root@node03 ~]# ll /data/mysql/</span><br><span class="line">-rw-r----- 1 polkitd input       56 Sep 19 18:29 auto.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment">#目录映射出来了，如果mysql挂了，再拉起，数据是存在的，如果不做映射，k8s自动拉起，数据就会全部没有</span></span><br><span class="line"></span><br><span class="line">容器里面mysql用户的uid gid都是999，宿主机上uid为999的是polkitd,gid为999的是input，系统只认ID，不认字符串，字符串是给人看的，知道名字就更好区分</span><br><span class="line"></span><br><span class="line">4、连接到容器里面检查</span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it pod/mysql57-pod -- /bin/sh</span><br><span class="line">sh-4.2# mysql -uroot -p123</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">mysql&gt; <span class="keyword">select</span> host,user from mysql.user;</span><br><span class="line">mysql&gt; show create database wp_db;</span><br><span class="line">sh-4.2# mysql -uwp_user -p123</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">Value</th><th style="text-align:left">Behavior</th></tr></thead><tbody><tr><td style="text-align:left"><code>‌&quot;&quot;</code></td><td style="text-align:left">默认不需要创建，会自动创建</td></tr><tr><td style="text-align:left"><code>DirectoryOrCreate</code></td><td style="text-align:left">目录必须存在，权限必须是755</td></tr><tr><td style="text-align:left"><code>Directory</code></td><td style="text-align:left">目录必须存在</td></tr><tr><td style="text-align:left"><code>FileOrCreate</code></td><td style="text-align:left">文件必须存在，权限必须是644</td></tr><tr><td style="text-align:left"><code>File</code></td><td style="text-align:left">文件必须存在</td></tr><tr><td style="text-align:left"><code>Socket</code></td><td style="text-align:left">挂载socket文件</td></tr><tr><td style="text-align:left"><code>CharDevice</code></td><td style="text-align:left">挂载字符设备文件（键盘，鼠标，终端…）</td></tr><tr><td style="text-align:left"><code>BlockDevice</code></td><td style="text-align:left">挂载快设备文件（磁盘，U盘，移动硬盘…）</td></tr></tbody></table><p>第二种：emptyDir</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">[root@master01 kubernetes]# vim wp.yml</span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: mysql57-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql57</span><br><span class="line">    run: mysql57</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment">#设置挂载映射的写法   指定宿主机的挂载目录</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data       <span class="comment">#名字一定要写，设置挂载的变量，相当于变量名</span></span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql    <span class="comment">#宿主机的目录，相当于变量值</span></span><br><span class="line">  - name: empty-data</span><br><span class="line">    emptyDir: &#123;&#125;           <span class="comment">#默认是空的话就写&#123;&#125;</span></span><br><span class="line">      </span><br><span class="line">  containers:</span><br><span class="line">  - name: mysql57-container</span><br><span class="line">    image: mysql:5.7.44</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;123&quot;</span></span><br><span class="line">    - name: MYSQL_DATABASE</span><br><span class="line">      value: <span class="string">&quot;wp_db&quot;</span></span><br><span class="line">    - name: MYSQL_USER</span><br><span class="line">      value: <span class="string">&quot;wp_user&quot;</span></span><br><span class="line">    - name: MYSQL_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="comment">#指定字符集的写法</span></span><br><span class="line">    args:</span><br><span class="line">    - --character-set-server=utf8mb4</span><br><span class="line">    - --collation-server=utf8mb4_unicode_ci</span><br><span class="line"><span class="comment">#容器里面的目录挂载出来的写法</span></span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: empty-data             <span class="comment">#现在容器的目录要挂到宿主机的哪个目录，就写宿主机目录的变量名</span></span><br><span class="line">      mountPath: /var/lib/mysql    <span class="comment">#这里写容器里需要挂出来的目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、删除node03的data目录</span><br><span class="line">[root@node03 ~]# <span class="built_in">rm</span> -rf /data/mysql/</span><br><span class="line"></span><br><span class="line">3、删除上一次实验起的pod,重新运行资源清单</span><br><span class="line">[root@master01 kubernetes]# kubectl delete pod  mysql57-pod</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f mysql.yml </span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE     IP          NODE  </span><br><span class="line">mysql57-pod              1/1     Running   0          59s     10.2.3.24   node03</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、查询映射的datam目录</span><br><span class="line">[root@node03 ~]# docker inspect 1dd8436185b0</span><br><span class="line"><span class="comment">#查找Mounts</span></span><br><span class="line"><span class="string">&quot;Mounts&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Source&quot;</span>: <span class="string">&quot;/var/lib/kubelet/pods/b3994de1-53ba-4ccf-b3b1-a7bdc8f1b08d/volumes/kubernetes.io~empty-dir/empty-data&quot;</span>,</span><br><span class="line"></span><br><span class="line">[root@node03 ~]# ll /var/lib/kubelet/pods/b3994de1-53ba-4ccf-b3b1-a7bdc8f1b08d/volumes/kubernetes.io~empty-dir/empty-data</span><br><span class="line">total 188484</span><br><span class="line">-rw-r----- 1 polkitd input       56 Sep 19 20:05 auto.cnf</span><br><span class="line"></span><br><span class="line">emptyDir: &#123;&#125;</span><br><span class="line">只是临时使用：随机的临时目录  容器删除，这个目录就会被删除，做不到持久化</span><br><span class="line"></span><br><span class="line">作用：在同一个Pod里,2个容器之间的文件是互相隔离的，想让他们互通某个目录就可以使用到，让2个容器同时都挂载到这个目录，这样子这两个容器就找到共享这个目录</span><br></pre></td></tr></table></figure><p>将一个POD内的两个容器共享目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单</span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: c7-nginx</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: empty-data</span><br><span class="line">    emptyDir: &#123;&#125; </span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: empty-data</span><br><span class="line">      mountPath: /usr/share/nginx/html     </span><br><span class="line">      <span class="comment">#让busybox挂到宿主机的随机目录</span></span><br><span class="line"> </span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: empty-data</span><br><span class="line">      mountPath: /opt/html    </span><br><span class="line">      <span class="comment">#让c7挂到宿主机的随机目录</span></span><br><span class="line">      <span class="comment">#都是挂到宿主机的临时目录，这两个目录里面的文件肯定是互通的</span></span><br><span class="line">      </span><br><span class="line">2、运行资源清单，并查看pod运行的node</span><br><span class="line">[root@master01 kubernetes]# kubectl apply -f c7-busybox-emptyDir.yml </span><br><span class="line">pod/c7-nginx created</span><br><span class="line">[root@master01 kubernetes]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE     IP          NODE  </span><br><span class="line">c7-nginx                 2/2     Running   0          5s      10.2.3.30   node03</span><br><span class="line"></span><br><span class="line">3、测试2个容器是否共享了目录</span><br><span class="line">[root@node03 ~]# docker inspect dbb9f576eacd</span><br><span class="line">        <span class="string">&quot;Mounts&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Source&quot;</span>: <span class="string">&quot;/var/lib/kubelet/pods/bed3c777-7aff-4593-a7bc-f2bc3ed47827/volumes/kubernetes.io~empty-dir/empty-data&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Destination&quot;</span>: <span class="string">&quot;/opt/html&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Mode&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;Propagation&quot;</span>: <span class="string">&quot;rprivate&quot;</span></span><br><span class="line">                </span><br><span class="line">4、查看挂载的随机目录，是空的               </span><br><span class="line">[root@node03 ~]# ll /var/lib/kubelet/pods/bed3c777-7aff-4593-a7bc-f2bc3ed47827/volumes/kubernetes.io~empty-dir/empty-data</span><br><span class="line">total 0     </span><br><span class="line"></span><br><span class="line">5、连进容器里面查看挂载目录，是空的  </span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it c7-nginx -c nginx-container -- /bin/sh</span><br><span class="line">/ <span class="comment"># ls -l /usr/share/nginx/html/</span></span><br><span class="line"></span><br><span class="line">[root@master01 ~]# kubectl <span class="built_in">exec</span> -it c7-nginx -c c7-container -- /bin/bash</span><br><span class="line">[root@c7-nginx /]# <span class="built_in">ls</span> -l /opt/html/</span><br><span class="line">total 0</span><br><span class="line"></span><br><span class="line">6、进入随机目录，并且创建一个文件</span><br><span class="line">[root@node03 ~]# <span class="built_in">cd</span> /var/lib/kubelet/pods/bed3c777-7aff-4593-a7bc-f2bc3ed47827/volumes/kubernetes.io~empty-dir/empty-data</span><br><span class="line">[root@node03 empty-data]# <span class="built_in">echo</span> <span class="string">&quot;test 将一个POD内的两个容器共享目录&quot;</span> &gt; index.html</span><br><span class="line"></span><br><span class="line">7、进入容器，查看文件可以看到2个容器都可以看到创建的文件内容</span><br><span class="line">/ <span class="comment"># cat /usr/share/nginx/html/index.html </span></span><br><span class="line"><span class="built_in">test</span> 将一个POD内的两个容器共享目录</span><br><span class="line">/ <span class="comment"># curl 127.0.0.1</span></span><br><span class="line"><span class="built_in">test</span> 将一个POD内的两个容器共享目录</span><br><span class="line"></span><br><span class="line">[root@c7-nginx /]# <span class="built_in">cat</span> /opt/html/index.html </span><br><span class="line"><span class="built_in">test</span> 将一个POD内的两个容器共享目录</span><br><span class="line">[root@c7-nginx /]# curl 127.0.0.1</span><br><span class="line"><span class="built_in">test</span> 将一个POD内的两个容器共享目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#当Pod结束了，共享就结束了，如果数据很重要，需要持久化，emptyDir就不建议使用，就使用Hostoath</span></span><br><span class="line"></span><br><span class="line">一个pod起在node02,一个起在node03,只能用nfs共享</span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span>后面的命令会让容器把后面的命令当初PID为1的进程，那条命令结束，进程就结束了</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">比如说想改nginx端口，想用8080，用资源清单怎么改配置文件</span><br><span class="line">pod不能自动拉取</span><br><span class="line">pod初始化容器，想临时改里面某些东西，比如说添加www用户，统一用户</span><br><span class="line"></span><br><span class="line">钩子 启动钩子：启动之前让他做一些事情</span><br><span class="line">停止钩子：pod结束了就停止钩子，结束之前想让他发邮件告警</span><br><span class="line">探针：k8s挂了可以重新拉起，那么pod没挂，但是网站是404或者50几，网站不能正常访问，但是k8s只检测pod有没有挂或者被删除，但是10个pod都是404，pod在，不会重新拉起，就要用探针</span><br><span class="line">存活探针 救续探针  自动扩缩容</span><br></pre></td></tr></table></figure><p><strong>wordpress镜像</strong></p><p>在一个POD里启动两个容器 wordpress和mysql5.7，用户上传数据的目录做持久化，该打标签的打标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行数据库</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wp_db \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行wordpress容器</span></span><br><span class="line">docker run \</span><br><span class="line">--name wp \</span><br><span class="line">--<span class="built_in">link</span> mysql57 \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-e WORDPRESS_DB_HOST=mysql57 \</span><br><span class="line">-e WORDPRESS_DB_USER=wp_user \</span><br><span class="line">-e WORDPRESS_DB_PASSWORD=123 \</span><br><span class="line">-e WORDPRESS_DB_NAME=wp_db \</span><br><span class="line">-d wordpress-df:v2 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 kubernetes]# vim wp.yml</span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Namespace&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: wp</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: wp-pod</span><br><span class="line">  namespace: wp</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: wp-containers</span><br><span class="line">    image: wordpress-df:v2</span><br><span class="line">    imagePullPolicy: Never</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: WORDPRESS_DB_HOST</span><br><span class="line">      value: <span class="string">&quot;localhost&quot;</span></span><br><span class="line">    - name: WORDPRESS_DB_USER</span><br><span class="line">      value: <span class="string">&quot;wp_user&quot;</span></span><br><span class="line">    - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;123&quot;</span></span><br><span class="line">    - name: WORDPRESS_DB_NAME</span><br><span class="line">      value: <span class="string">&quot;wp_db&quot;</span></span><br><span class="line"></span><br><span class="line">  - name: mysql-containers</span><br><span class="line">    image: mysql:5.7.44</span><br><span class="line">    imagePullPolicy: Never</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 3306</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;123&quot;</span></span><br><span class="line">    - name: MYSQL_DATABASE</span><br><span class="line">      value: <span class="string">&quot;wp_db&quot;</span></span><br><span class="line">    - name: MYSQL_USER</span><br><span class="line">      value: <span class="string">&quot;wp_user&quot;</span></span><br><span class="line">    - name: MYSQL_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;123&quot;</span></span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: db</span><br><span class="line">      mountPath: /var/lib/mysql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉3、POD资源</title>
      <link href="/posts/763f53e4.html"/>
      <url>/posts/763f53e4.html</url>
      
        <content type="html"><![CDATA[<h2 id="POD资源的介绍">POD资源的介绍</h2><h3 id="1、kubernetes资源对象操作">1、<strong>kubernetes资源对象操作</strong></h3><table><thead><tr><th>资源对象</th><th>增</th><th>删</th><th>改</th><th>查</th></tr></thead><tbody><tr><td>nodes</td><td></td><td>kubectl delete node</td><td></td><td>kubectl get nodes</td></tr><tr><td>namespace</td><td>kubectl create ns  [资源名]</td><td>kubectl delete ns  [资源名]</td><td>kubectl edit ns  [资源名]</td><td>kubectl get ns</td></tr><tr><td>pod</td><td>kubectl create deployment [资源名]</td><td>kubectl delete pod  [pod名]</td><td></td><td>kubectl get pod</td></tr></tbody></table><p>1、nodes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">增</span><br><span class="line"><span class="comment">#忘记node加入master集群命令,那么需要重新执行如下命令</span></span><br><span class="line">[root@master01 ~]# kubeadm token create --print-join-command</span><br><span class="line"></span><br><span class="line">删</span><br><span class="line">kubectl delete node</span><br><span class="line"></span><br><span class="line">查</span><br><span class="line"><span class="comment">#查看集群节点状态</span></span><br><span class="line">[root@master01 ~]# kubectl get nodes</span><br><span class="line">NAME       STATUS   ROLES    AGE    VERSION</span><br><span class="line">master01   Ready    master   5d2h   v1.19.3</span><br><span class="line">node01     Ready    &lt;none&gt;   5d2h   v1.19.3</span><br><span class="line">node02     Ready    &lt;none&gt;   5d2h   v1.19.3</span><br><span class="line">node03     Ready    &lt;none&gt;   5d2h   v1.19.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看名称空间</span></span><br><span class="line">[root@master01 ~]# kubectl get ns</span><br><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   5d2h</span><br><span class="line">kube-flannel      Active   5d1h</span><br><span class="line">kube-node-lease   Active   5d2h</span><br><span class="line">kube-public       Active   5d2h</span><br><span class="line">kube-system       Active   5d2h</span><br></pre></td></tr></table></figure><p>2、namespace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">增</span><br><span class="line">kubectl create ns  [资源名]</span><br><span class="line"></span><br><span class="line">删</span><br><span class="line">kubectl delete ns  [资源名]</span><br><span class="line"></span><br><span class="line">改</span><br><span class="line">kubectl edit ns  [资源名]</span><br><span class="line"></span><br><span class="line">查</span><br><span class="line">kubectl get ns </span><br></pre></td></tr></table></figure><p>3、pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">查</span><br><span class="line"><span class="comment">#查看pod(默认查看default名称空间)</span></span><br><span class="line">[root@master01 ~]# kubectl get pod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看pod(查看指定的名称空间)</span></span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-flannel</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看帮助</span></span><br><span class="line">[root@master01 ~]# kubectl get pod --<span class="built_in">help</span></span><br><span class="line">-o或者--output：指定输出格式</span><br><span class="line">json：输出json格式</span><br><span class="line">yaml：输出yaml格式</span><br><span class="line">wide：输出详细信息</span><br><span class="line"></span><br><span class="line">-n：指定名称空间</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定输出格式</span></span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-flannel -o json</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-flannel </span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-4ncf5   1/1     Running   0          5d2h</span><br><span class="line">kube-flannel-ds-7dnxx   1/1     Running   1          5d2h</span><br><span class="line">kube-flannel-ds-dpzqp   1/1     Running   0          5d2h</span><br><span class="line">kube-flannel-ds-knmch   1/1     Running   0          5d2h</span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-flannel kube-flannel-ds-4ncf5 -o json</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看指定的pod</span></span><br><span class="line">[root@master01 ~]# kubectl get pod nginx-5f5d9d69c4-pk4c4 -o yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出pod详细信息</span></span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-flannel -o wide</span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE    IP           NODE       NOMINATED NODE   READINESS GATES</span><br><span class="line">kube-flannel-ds-4ncf5   1/1     Running   0          5d2h   10.0.0.203   node03     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel-ds-7dnxx   1/1     Running   1          5d2h   10.0.0.200   master01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel-ds-dpzqp   1/1     Running   0          5d2h   10.0.0.201   node01     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel-ds-knmch   1/1     Running   0          5d2h   10.0.0.202   node02     &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">增</span><br><span class="line"><span class="comment">#创建pod(默认创建在default名称空间)</span></span><br><span class="line">kubectl create deployment pod名 --image=镜像:版本</span><br><span class="line">[root@master01 ~]# kubectl create deployment nginx --image=nginx:alpine</span><br><span class="line"></span><br><span class="line">删</span><br><span class="line"><span class="comment">#删除pod</span></span><br><span class="line">[root@master01 ~]# kubectl delete pod nginx-65cc99f84f-8k9rj</span><br><span class="line"></span><br><span class="line">改</span><br><span class="line"><span class="comment">#当创建pod，镜像名写错了，需要修改时</span></span><br><span class="line">[root@master01 ~]# kubectl edit deployment nginx </span><br><span class="line">就会进入像vi编辑器一样的东西，找到image，改后面的镜像名</span><br><span class="line"></span><br><span class="line">等待一会，这次查看pod,就会正常运行</span><br><span class="line">[root@master01 ~]#  kubectl get pod</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-5f5d9d69c4-pk4c4   1/1     Running   0          8m14s</span><br></pre></td></tr></table></figure><h3 id="2、POD的资源清单">2、<strong>POD的资源清单</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# vim nginx.yaml </span><br><span class="line">apiVersion: v1                        <span class="comment">## K8S资源接口</span></span><br><span class="line">kind: Pod                             <span class="comment">## 资源类型</span></span><br><span class="line">metadata:                             <span class="comment">## 资源的元数据</span></span><br><span class="line">  name: nginx-pod                     <span class="comment">## POD名字</span></span><br><span class="line">  namespace: default                  <span class="comment">## 资源启动在哪个名称空间</span></span><br><span class="line">spec:                                 <span class="comment">## 容器相关信息</span></span><br><span class="line">  containers:                         <span class="comment">## 容器信息</span></span><br><span class="line">  - image: nginx:alpine               <span class="comment">## 指定容器的镜像</span></span><br><span class="line">    imagePullPolicy: IfNotPresent     <span class="comment">## 镜像拉取规则  IfNotPresent：不存在则拉取</span></span><br><span class="line">    name: nginx-containers            <span class="comment">## 容器名字</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">Always：总是拉取，不管当前机器上是否有改镜像都拉取</span><br><span class="line">Never：从不拉取镜像，需要提前docker pull</span><br><span class="line">IfNotPresent：不存在则拉取</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#K8S资源接口：</span></span><br><span class="line">apiVersion: v1  </span><br><span class="line">可以理解为https://master的ip:6443/pod/v1一开始init初始化的时候就写了master的ip为10.0.0.200，会自动补全，可以理解为前面可以不写，会自动补全,这些接口全都注册在etcd里面</span><br><span class="line">https://10.0.0.200:6443/pod/v1</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240918150439792.png" alt="image-20240918150439792"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动pod</span></span><br><span class="line">[root@master01 ~]# kubectl create -f nginx.yml </span><br><span class="line">pod/nginx-pod created</span><br><span class="line">[root@master01 ~]# kubectl get pod</span><br><span class="line">nginx-pod                0/1     ContainerCreating   0          13s</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看这个pod起在哪个node</span></span><br><span class="line">[root@master01 ~]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS             RESTARTS   AGE     IP         NODE     NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-pod                0/1     ImagePullBackOff   0          4m49s   10.2.3.6   node03   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h3 id="3、手写资源清单">3、<strong>手写资源清单</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参考网址：http://k8s.driverzeng.com/v1.19/</span><br><span class="line">这4个必写的</span><br><span class="line"></span><br><span class="line">object数据类型写法：直接回车，和上一个缩进写key: value的形式</span><br><span class="line">[]列表数据类型写法：回车之后写一个减号-，再空格</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240918153235543.png" alt="image-20240918153235543"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">1、编写资源清单  <span class="comment"># 这里有坑，需要继续往下查看更新后的资源清单</span></span><br><span class="line">[root@master01 ~]# vim busybox.yml</span><br><span class="line"><span class="comment">#如果后面要指定名称空间，就要先创建名称空间</span></span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Namespace&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: aaa</span><br><span class="line"><span class="comment">#分隔符，分隔上面和下面的资源</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">#这个是1个pod里面起2个容器</span></span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: busybox-pod</span><br><span class="line">  namespace: aaa</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: busybox-containers</span><br><span class="line">    image: busybox</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line"> </span><br><span class="line">  - name: nginx-containers</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    </span><br><span class="line">2、启动资源</span><br><span class="line">[root@master01 ~]# kubectl apply -f busybox.yml </span><br><span class="line">namespace/aaa created</span><br><span class="line">pod/busybox-pod created</span><br><span class="line"></span><br><span class="line">3、查看名称空间里面起的资源，只看到一个</span><br><span class="line">[root@master01 ~]# kubectl get pod -n aaa</span><br><span class="line">NAME          READY   STATUS             RESTARTS   AGE</span><br><span class="line">busybox-pod   1/2     CrashLoopBackOff   3          94s</span><br><span class="line"></span><br><span class="line">4、由于名称空间里面起的资源，只看到一个，所以有问题，要检查原因排错</span><br><span class="line"><span class="comment">#排查命令</span></span><br><span class="line"><span class="comment">#kubectl describe [资源] [资源名] [-n 名称空间]</span></span><br><span class="line"></span><br><span class="line">[root@master01 ~]# kubectl describe pod busybox-pod -n aaa</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# kubectl describe namespace  aaa</span><br><span class="line"></span><br><span class="line">其实原因就是busybox没卡住，这个是网络相关的镜像，需要加命令卡住</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">5、更新资源清单</span><br><span class="line">[root@master01 ~]# vim busybox.yml</span><br><span class="line"><span class="comment">#如果后面要指定名称空间，就要先创建名称空间</span></span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Namespace&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: aaa</span><br><span class="line"><span class="comment">#分隔符，分隔上面和下面的资源</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">#这个是1个pod里面起2个容器</span></span><br><span class="line">apiVersion: <span class="string">&quot;v1&quot;</span></span><br><span class="line">kind: <span class="string">&quot;Pod&quot;</span></span><br><span class="line">metadata:</span><br><span class="line">  name: busybox-pod</span><br><span class="line">  namespace: aaa</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: busybox-containers</span><br><span class="line">    image: busybox</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="comment">#加入卡住的命令</span></span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/tail&quot;</span>,<span class="string">&quot;-f&quot;</span>,<span class="string">&quot;/etc/hosts&quot;</span>]</span><br><span class="line"> </span><br><span class="line">  - name: nginx-containers</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    </span><br><span class="line">6、删除就得pod</span><br><span class="line">[root@master01 ~]# kubectl delete -f busybox.yml</span><br><span class="line"></span><br><span class="line">7、再次创建pod,并查看</span><br><span class="line">[root@master01 ~]# kubectl apply -f busybox.yml </span><br><span class="line">[root@master01 ~]# kubectl get pod -n aaa</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE</span><br><span class="line">busybox-pod   2/2     Running   0          13s</span><br><span class="line"><span class="comment">#查看详细信息</span></span><br><span class="line">[root@master01 ~]# kubectl get pod -n aaa -o wide</span><br></pre></td></tr></table></figure><h3 id="4、使用VScode编写资源清单">4、<strong>使用VScode编写资源清单</strong></h3><p>1、配置VScode</p><p>先远程连接主节点</p><p><img src="../image/study_img/image-20240918170551193.png" alt="image-20240918170551193"></p><p>统一资源清单的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# <span class="built_in">mkdir</span> /opt/kubernetes</span><br><span class="line">[root@master01 ~]# <span class="built_in">mv</span> *.yml /opt/kubernetes</span><br></pre></td></tr></table></figure><p>连接成功，打开创建的/opt/kubernetes目录</p><p><img src="../image/study_img/image-20240918171056628.png" alt="image-20240918171056628"></p><p><img src="../image/study_img/image-20240918171219206.png" alt="image-20240918171219206"></p><p>配置梯子加速下载，安装kubernetes插件，安装插件可能需要7分钟左右</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# vim ~/.bashrc </span><br><span class="line"><span class="built_in">export</span> https_proxy=https://192.168.10.200:7890</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# <span class="built_in">source</span> .bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用完成后，执行如下：</span></span><br><span class="line">[root@master01 ~]# vim ~/.bashrc </span><br><span class="line"><span class="comment">#export https_proxy=https://192.168.10.200:7890</span></span><br><span class="line"></span><br><span class="line">[root@master01 ~]# <span class="built_in">unset</span> https_proxy</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240918172406539.png" alt="image-20240918172406539"></p><p><img src="../image/study_img/image-20240918173241749.png" alt="image-20240918173241749"></p><p>安装插件可能需要7分钟左右，安装完成</p><p><img src="../image/study_img/image-20240918174036219.png" alt="image-20240918174036219"></p><p>2、使用插件</p><p>查看镜像的状态和ip</p><p><img src="../image/study_img/image-20240918174854465.png" alt="image-20240918174854465"></p><p>编写资源清单</p><p><img src="../image/study_img/image-20240918175229795.png" alt="image-20240918175229795"></p><p><img src="../image/study_img/image-20240918175420732.png" alt="image-20240918175420732"></p><p><img src="../image/study_img/image-20240918175433243.png" alt="image-20240918175433243"></p><p>根据模版修改内容    资源限制不需要，所以删除，删除之后有黄线，不用管</p><p><img src="../image/study_img/image-20240918175813043.png" alt="image-20240918175813043"></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉2、kubernets安装部署v1.19-源码安装</title>
      <link href="/posts/8b2778bc.html"/>
      <url>/posts/8b2778bc.html</url>
      
        <content type="html"><![CDATA[<h2 id="kubernets安装部署v1-19-源码安装">kubernets安装部署v1.19  (源码安装)</h2><h3 id="1、k8s的安装方式">1、<strong>k8s的安装方式</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## K8S的方式有一堆</span></span><br><span class="line">二进制安装  生产推荐</span><br><span class="line">kubeadm    生产推荐</span><br><span class="line">Ansible    二进制安装</span><br><span class="line">Rancher    虽然k8s是有自带的图形化界面，但在企业里面用Rancher的还是比较多</span><br><span class="line">阿里云ACK</span><br><span class="line">亚马逊云EKS</span><br><span class="line"></span><br><span class="line">安装k8s1.19版，k8s中小版本变了影响很大，接口是不一样的</span><br></pre></td></tr></table></figure><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th><th>配置</th><th>配置</th></tr></thead><tbody><tr><td>master01</td><td>10.0.0.200  /  172.16.1.200</td><td>master</td><td>kubectl,apiserver,scheduler,controller,<br>etcd,kubelet,kube-proxy</td><td>1h2G</td></tr><tr><td>node01</td><td>10.0.0.201  /  172.16.1.201</td><td>node</td><td>kubectl，apiserver,<br>kube-proxy</td><td>1h2G</td></tr><tr><td>node02</td><td>10.0.0.202  /  172.16.1.202</td><td>node</td><td>kubectl，apiserver,<br>kube-proxy</td><td>1h2G</td></tr><tr><td>node03</td><td>10.0.0.203  /  172.16.1.203</td><td>node</td><td>kubectl，apiserver,<br>kube-proxy</td><td>2h4G</td></tr></tbody></table><p>IP规划</p><p>为什么规划IP?  因为所有的POD起来应该在同一个网段，Cluster IP也在同一个网段</p><table><thead><tr><th>三种service</th><th>IP</th></tr></thead><tbody><tr><td>POD IP</td><td>10.2.0.0</td></tr><tr><td>Cluster IP</td><td>10.1.0.0</td></tr><tr><td>Node IP</td><td>10.0.0.0</td></tr></tbody></table><p>注意：如果是二进制安装，默认的pod IP是10.0.0.0网段，宿主机的网段和pod ip·不能一样</p><p><strong>①、部署前的环境优化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">######4台机器都执行   </span></span><br><span class="line"><span class="comment">#(kubelet:控制容器运行时启动容器的东西,要把master当作node节点，所以master也要安装)</span></span><br><span class="line">1、配置kublet配置文件，使用系统自带的Cgroup驱动和禁用swap     </span><br><span class="line"><span class="built_in">cat</span> &gt;/etc/sysconfig/kubelet &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">KUBELET_CGROUP_ARGS=&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line"><span class="string">KUBELET_EXTRA_ARGS=&quot;--fail-swap-on=false&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#让kubelet使用系统自带的Cgroup驱动 </span></span><br><span class="line">KUBELET_CGROUP_ARGS=<span class="string">&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line"><span class="comment">#让kubelet禁止使用swap(虚拟内存) </span></span><br><span class="line">KUBELET_EXTRA_ARGS=<span class="string">&quot;--fail-swap-on=false&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、内参数调优，要把iptable功能开启(因为底层端口的转发端口映射都是防火墙做的)</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables=1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward=1</span></span><br><span class="line"><span class="string">vm.swappiness=0</span></span><br><span class="line"><span class="string">fs.file-max=52706963</span></span><br><span class="line"><span class="string">fs.nr_open=52706963</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开启iptables功能   ipv4</span></span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line"><span class="comment">#开启iptables功能   ipv6</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line"><span class="comment">#开启内核转发</span></span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"><span class="comment">#内核参数禁用swap</span></span><br><span class="line">vm.swappiness=0</span><br><span class="line"><span class="comment">#文件描述符文件最大值</span></span><br><span class="line">fs.file-max=52706963</span><br><span class="line"><span class="comment">#文件描述符开启数量</span></span><br><span class="line">fs.nr_open=52706963</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、检查是否配置成功</span><br><span class="line">sysctl --system</span><br><span class="line">执行之后输出结果倒数的行会显示第2步配置的内容</span><br><span class="line">* Applying /etc/sysctl.d/k8s.conf ...</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">fs.file-max = 52706963</span><br><span class="line">fs.nr_open = 52706963</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、更改docker源</span><br><span class="line">[root@master01 ~]# <span class="built_in">cat</span> &gt; /etc/yum.repos.d/docker-ce.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[docker-ce-stable]</span></span><br><span class="line"><span class="string">name=Docker CE Stable - $basearch</span></span><br><span class="line"><span class="string">baseurl=https://download.docker.com/linux/centos/7/x86_64/stable</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://download.docker.com/linux/centos/gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">[root@master01 ~]# sed -i <span class="string">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line">5、安装时间同步服务 (这个不需要写在定时任务里面)</span><br><span class="line">yum install -y chrony</span><br><span class="line">systemctl start chronyd</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、关闭swap</span><br><span class="line">swapoff -a</span><br><span class="line">sed -i <span class="string">&#x27;/swap/d&#x27;</span> /etc/fstab</span><br><span class="line">free -m</span><br><span class="line">[root@master01 ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1846         100        1271           9         474        1564</span><br><span class="line">Swap:             0           0           0#变成0就是关闭了</span><br><span class="line"></span><br><span class="line"><span class="comment">#临时关闭swap</span></span><br><span class="line">swapoff -a</span><br><span class="line"><span class="comment">#永久关闭swap</span></span><br><span class="line">sed -i <span class="string">&#x27;/swap/d&#x27;</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7、加载ipvs模块   做k8s，底层有转发，需要配合ipvs模块才可以</span><br><span class="line"><span class="built_in">cat</span>  &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack_ipv4</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/sysconfig/modules/ipvs.modules</span><br><span class="line"><span class="built_in">source</span> /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">lsmod|grep -e <span class="string">&#x27;ip_vs&#x27;</span> -e <span class="string">&#x27;nf_conntrack_ipv&#x27;</span>  </span><br><span class="line"><span class="comment">#过滤出ip_vs模块就加载出来了</span></span><br><span class="line"></span><br><span class="line">ipvs:LVS做四层负载,不需要装任何软件,需要下载ipvsadm命令,用ipvsadm这个命令去改主机的路由、路由表、网络相关的东西改掉,把这个主机当成四层负载的机器,底层要做转发的，LVS这个服务比较独特的，没有专门的应用，不像nginx、HAproxy做负载均衡需要安装nginx、HAproxy,LVS没有服务安装，需要安装ipvsadm,用这个命令去修改路由修改转发这些东西，让整个物理机变成转发的机器</span><br></pre></td></tr></table></figure><p><strong>②、安装docker指定版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">######4台机器都执行 ####</span></span><br><span class="line">1、查询docker版本  </span><br><span class="line"><span class="comment">#(只显示yum仓库里的最新版)</span></span><br><span class="line">yum list docker-ce </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有的版本</span></span><br><span class="line">yum list docker-ce --showduplicates</span><br><span class="line"></span><br><span class="line">2、安装docke 19.03.15版本，因为这个版本比较稳定</span><br><span class="line">yum install -y docker-ce-19.03.15 docker-ce-cli-19.03.15 containerd.io</span><br><span class="line">systemctl start docker &amp;&amp; systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">containerd.io：容器运行时，用k8s新版本，可以直接无痕从docke对接到containerd，默认安装最新版</span><br><span class="line"></span><br><span class="line">3、查看是否出现警告，再看一下显示的版本是否对的上</span><br><span class="line">[root@node01 ~]# docker info</span><br><span class="line">Client:</span><br><span class="line">...</span><br><span class="line"> Server Version: 19.03.15</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#生产中再加2个步骤：</span></span><br><span class="line"><span class="comment">#4、修改数据目录</span></span><br><span class="line"><span class="comment">#5、docker图形化界面</span></span><br><span class="line"> </span><br><span class="line">4、配置镜像加速和Cgroup驱动</span><br><span class="line"> <span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">  &quot;https://docker.1panel.live&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://dockercf.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker-cf.registry.cyou&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.chenby.cn&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.m.daocloud.io&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.m.daocloud.io&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.nju.edu.cn&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://dockerproxy.com&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.rainbond.cc&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://docker.registry.cyou&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://dockertest.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://hub-mirror.c.163.com&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://hub.rat.dev/&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://mirror.aliyuncs.com&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://mirror.baidubce.com&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://mirror.iscas.ac.cn&quot;,</span></span><br><span class="line"><span class="string">  &quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、测试拉取</span><br><span class="line">[root@node01 ~]# docker pull busybox</span><br><span class="line">[root@node01 ~]# docker images</span><br></pre></td></tr></table></figure><p><strong>③、安装kubeadm</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">######4台机器都执行 ####</span></span><br><span class="line">1、更换华为源</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.huaweicloud.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.huaweicloud.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.huaweicloud.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">2、安装kubelet node节点容器运行时的控制器 kubeadm做k8s集群 kubectl是k8s的客户端命令 ipvsadm加载jpvs模块</span><br><span class="line">yum install kubelet-1.19.3 kubeadm-1.19.3  kubectl-1.19.3  ipvsadm -y</span><br><span class="line"></span><br><span class="line">systemctl start kubelet.service &amp;&amp; systemctl <span class="built_in">enable</span> kubelet.service </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubelet-1.19.3 ：控制容器运行时</span><br><span class="line">kubeadm-1.19.3  ：类似于stream</span><br><span class="line">kubectl-1.19.3  ：执行k8s命令需要的客户端</span><br><span class="line">ipvsadm：上面配置IPVS模块，需要使用这个命令</span><br></pre></td></tr></table></figure><p><strong>④、master01初始化集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#####如下操作只能master01执行(master节点执行)，其他机器不要执行</span></span><br><span class="line">1、初始化集群   大概要等待几分钟</span><br><span class="line">[root@master01 ~]# kubeadm init \</span><br><span class="line">--apiserver-advertise-address=10.0.0.200 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers  \</span><br><span class="line">--kubernetes-version=v1.19.3 \</span><br><span class="line">--service-cidr=10.1.0.0/16 \</span><br><span class="line">--pod-network-cidr=10.2.0.0/16 \</span><br><span class="line">--service-dns-domain=cluster.local \</span><br><span class="line">--ignore-preflight-errors=Swap \</span><br><span class="line">--ignore-preflight-errors=NumCPU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#只有一个master的写法</span></span><br><span class="line">--apiserver-advertise-address=master的ip \</span><br><span class="line"><span class="comment">#镜像仓库的地址 阿里云的谷歌容器的</span></span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers  \</span><br><span class="line">--kubernetes-version=v1.19.3 \</span><br><span class="line"><span class="comment">#service资源，设置cluster ip网段</span></span><br><span class="line">--service-cidr=10.1.0.0/16 \</span><br><span class="line"><span class="comment">#设置pod ip的网段</span></span><br><span class="line">--pod-network-cidr=10.2.0.0/16 \</span><br><span class="line"><span class="comment">#使用本地的dns</span></span><br><span class="line">--service-dns-domain=cluster.local \</span><br><span class="line"><span class="comment">#忽略swap的报错</span></span><br><span class="line">--ignore-preflight-errors=Swap \</span><br><span class="line"><span class="comment">#忽略cpu的报错</span></span><br><span class="line">--ignore-preflight-errors=NumCPU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、保存最后几行内容</span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line">  <span class="comment">#其他node节点加入集群</span></span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line">kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token cgex1m.9ck6cjchon5xn4j5 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:273cdce81c642065666a2d0eb4fd0c3097df69e984fa50836b8daf2ed10de18a </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#翻译</span></span><br><span class="line">您的Kubernetes控制平面已成功初始化！</span><br><span class="line">要开始使用集群，您需要以普通用户身份运行以下命令：</span><br><span class="line">mkdir-p<span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">sudo</span> cp-i/etc/kubernetes/admin.conf<span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span>$（id-u）：$（id-g）<span class="variable">$HOME</span>/.kube/config</span><br><span class="line">现在，您应该将pod网络部署到集群。</span><br><span class="line">使用以下列出的选项之一运行“kubectl apply-f[podnetwork].yaml”：</span><br><span class="line">https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line">然后，您可以通过以root身份在每个工作节点上运行以下命令来加入任意数量的工作节点：</span><br><span class="line">kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token cgex1m.9ck6cjchon5xn4j5 \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:273cdce81c642065666a2d0eb4fd0c3097df69e984fa50836b8daf2ed10de18a</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">3、可以看到多了好几个镜像，说明刚才的命令执行成功，拉取了需要的镜像</span><br><span class="line">[root@master01 ~]# docker images</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">4、执行这几个命令   创建隐藏目录，拷贝配置文件，授权</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、查看k8s集群节点， 会看到master主节点</span><br><span class="line">[root@master01 ~]# kubectl get nodes</span><br><span class="line">NAME       STATUS     ROLES    AGE     VERSION</span><br><span class="line">master01   NotReady   master   4m32s   v1.19.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###############node节点操作第6步  node01 node02 node03</span></span><br><span class="line">6、目前只有一个节点，所以要将其他节点加入集群</span><br><span class="line"><span class="comment">##注意：这个命令要保存好，因为横向扩展，将节点加入集群需要使用</span></span><br><span class="line">[root@master01 ~]# kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token cgex1m.9ck6cjchon5xn4j5 \</span><br><span class="line">--discovery-token-ca-cert-hash</span><br><span class="line">sha256:273cdce81c642065666a2d0eb4fd0c3097df69e984fa50836b8daf2ed10de18a </span><br><span class="line"><span class="comment">##########################################  </span></span><br><span class="line">  </span><br><span class="line">7、加入集群命令执行之后，最后一行信息显示如下</span><br><span class="line">Run <span class="string">&#x27;kubectl get nodes&#x27;</span> on the control-plane to see this node <span class="built_in">join</span> the cluster.</span><br><span class="line">在控制平面上(master)运行“kubectl get nodes”以查看此节点加入集群。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">8、#到master01执行kubectl get nodes</span><br><span class="line">[root@master01 ~]# kubectl get nodes</span><br><span class="line">NAME       STATUS     ROLES    AGE     VERSION</span><br><span class="line">master01   NotReady   master   9m33s   v1.19.3</span><br><span class="line">node01     NotReady   &lt;none&gt;   3m48s   v1.19.3</span><br><span class="line">node02     NotReady   &lt;none&gt;   118s    v1.19.3</span><br><span class="line">node03     NotReady   &lt;none&gt;   106s    v1.19.3</span><br><span class="line"></span><br><span class="line">现在的状态是NotReady没有准备好的，因为网络还没配</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9、设置kube-proxy使用ipvs模式</span><br><span class="line">k8s默认使用的是iptables防火墙，可以修改成性能更高的ipvs模式，该模式LVS也在使用</span><br><span class="line">[root@master01 ~]# kubectl edit cm kube-proxy -n kube-system</span><br><span class="line"> 44行     </span><br><span class="line"> mode: <span class="string">&quot; &quot;</span> 改为 mode: <span class="string">&quot;ipvs&quot;</span></span><br><span class="line"> </span><br><span class="line">10、查看名称空间</span><br><span class="line">[root@master01 ~]# kubectl get ns</span><br><span class="line">或者</span><br><span class="line">[root@master01 ~]# kubectl get namespace</span><br><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   45m</span><br><span class="line">kube-node-lease   Active   45m</span><br><span class="line">kube-public       Active   45m</span><br><span class="line">kube-system       Active   45m</span><br><span class="line"></span><br><span class="line">11、查看指定名称空间中的pod信息</span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-system</span><br><span class="line">NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-85k2r           0/1     Pending   0          46m <span class="comment">#DNS服务器</span></span><br><span class="line">coredns-6d56c8448f-cn2t9           0/1     Pending   0          46m <span class="comment">#DNS服务器</span></span><br><span class="line">etcd-master01                      1/1     Running   0          46m <span class="comment">#数据库etcd</span></span><br><span class="line">kube-apiserver-master01            1/1     Running   0          46m <span class="comment">#司令部ipserver</span></span><br><span class="line">kube-controller-manager-master01   1/1     Running   0          46m <span class="comment">#控制器controller</span></span><br><span class="line">kube-proxy-2wfhq                   1/1     Running   0          38m <span class="comment">#网络、端口映射射kube-proxy  有4个是因为这个集群里面有4台机器</span></span><br><span class="line">kube-proxy-8tmqx                   1/1     Running   0          40m <span class="comment">#网络、端口映射射kube-proxy</span></span><br><span class="line">kube-proxy-fr9dl                   1/1     Running   0          39m <span class="comment">#网络、端口映射射kube-proxy</span></span><br><span class="line">kube-proxy-pz4ms                   1/1     Running   0          46m <span class="comment">#网络、端口映射射kube-proxy</span></span><br><span class="line">kube-scheduler-master01            1/1     Running   0          46m <span class="comment">#资源调度scheduler</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">12、查看指定名称空间中pod的详细信息  可以看到起在哪台机器上</span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-system -o wide</span><br><span class="line"></span><br><span class="line">用的DaemonSet控制器，每台有且只能起一个</span><br><span class="line"></span><br><span class="line">13、重启pod</span><br><span class="line">把他删掉，就会自动拉起，以后有哪个组件坏了，就删掉重新拉起</span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-system|grep <span class="string">&#x27;kube-proxy&#x27;</span>|awk <span class="string">&#x27;&#123;print &quot;kubectl delete pod -n kube-system &quot;$1&#125;&#x27;</span>|bash</span><br></pre></td></tr></table></figure><p>**⑤、master 配置flanale **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#部署网络插件flanale，让所有节点网络打通</span></span><br><span class="line"><span class="comment">##############master01执行#####</span></span><br><span class="line">链接地址：</span><br><span class="line">https://github.com/flannel-io/flannel/blob/master/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">1、下载资源清单</span><br><span class="line">[root@master01 ~]# wget https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、修改flannel资源清单</span><br><span class="line">[root@master01 ~]# vim  kube-flannel.yml </span><br><span class="line">       <span class="comment">#搜索net-conf.json，修改网段为规划的pod ip  </span></span><br><span class="line">      <span class="string">&quot;Network&quot;</span>: <span class="string">&quot;10.2.0.0/16&quot;</span>,</span><br><span class="line">      ......</span><br><span class="line">      .....</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - --ip-masq</span><br><span class="line">        - --kube-subnet-mgr</span><br><span class="line">        <span class="comment">#搜索 containers，新增使用的网卡</span></span><br><span class="line">        - --iface=eth0</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">#搜索containers，如果出现这个标签，就把这个标签里面的3行内容删掉</span></span><br><span class="line">        spec:</span><br><span class="line">          selector:  <span class="comment">#删掉</span></span><br><span class="line">            matchLabels:  <span class="comment">#删掉</span></span><br><span class="line">            app: flannel  <span class="comment">#删掉</span></span><br><span class="line"></span><br><span class="line">app: flannel是一个标签选择器，只有打了app标签的node，才会安装flannel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、只要修改了flannel资源清单，就要执行应用flannel资源清单</span><br><span class="line">[root@master01 ~]# kubectl apply -f kube-flannel.yml</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">4、#检查这几个状态</span><br><span class="line">①、检查flannel的pod是否启动成功   4个STATUS显示Running就是成功</span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-flannel</span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-4ncf5   1/1     Running   0          4m20s</span><br><span class="line">kube-flannel-ds-7dnxx   1/1     Running   0          4m20s</span><br><span class="line">kube-flannel-ds-dpzqp   1/1     Running   0          4m20s</span><br><span class="line">kube-flannel-ds-knmch   1/1     Running   0          4m20s</span><br><span class="line"></span><br><span class="line">②、检查k8s集群节点状态    STATUS显示Ready就是准备好的，集群之间起的pod就可以互相通信了</span><br><span class="line">[root@master01 ~]# kubectl get nodes</span><br><span class="line">NAME       STATUS   ROLES    AGE   VERSION</span><br><span class="line">master01   Ready    master   81m   v1.19.3</span><br><span class="line">node01     Ready    &lt;none&gt;   75m   v1.19.3</span><br><span class="line">node02     Ready    &lt;none&gt;   73m   v1.19.3</span><br><span class="line">node03     Ready    &lt;none&gt;   73m   v1.19.3</span><br><span class="line"></span><br><span class="line">③、检查coredns是否正常运行   只要网络配好，dns就ok了，STATUS显示Running状态</span><br><span class="line">[root@master01 ~]# kubectl get pod -n kube-system</span><br><span class="line">NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-85k2r           1/1     Running   0          81m</span><br><span class="line">coredns-6d56c8448f-cn2t9           1/1     Running   0          81m</span><br><span class="line">etcd-master01                      1/1     Running   0          81m</span><br><span class="line">kube-apiserver-master01            1/1     Running   0          81m</span><br><span class="line">kube-controller-manager-master01   1/1     Running   0          81m</span><br><span class="line">kube-proxy-2skng                   1/1     Running   0          30m</span><br><span class="line">kube-proxy-fxwbg                   1/1     Running   0          30m</span><br><span class="line">kube-proxy-w6v6r                   1/1     Running   0          30m</span><br><span class="line">kube-proxy-zng7l                   1/1     Running   0          30m</span><br><span class="line">kube-scheduler-master01            1/1     Running   0          81m</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#node设置角色信息   </span></span><br><span class="line"> kubectl label node node01 node-role.kubernetes.io/node=</span><br><span class="line"> kubectl label node node02 node-role.kubernetes.io/node=</span><br><span class="line"> kubectl label node node03 node-role.kubernetes.io/node=</span><br></pre></td></tr></table></figure><h3 id="2、安装kubectl命令补全黑科技">2、<strong>安装kubectl命令补全黑科技</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以tab补全的工具</span></span><br><span class="line"></span><br><span class="line">yum install -y bash-completion</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion </span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash) </span><br><span class="line">kubectl completion bash &gt; /etc/bash_completion.d/kubectl</span><br><span class="line"></span><br><span class="line">安装完成需要退出在重新连接</span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master01 ~]# kubectl ap 按tab可以补全了</span><br><span class="line">api-resources  api-versions   apply          </span><br><span class="line">[root@master01 ~]# kubectl get namespaces 按tab可以补全了</span><br><span class="line">default          kube-flannel     kube-node-lease  kube-public      kube-system  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> K8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍉1、K8s基础和资源介绍</title>
      <link href="/posts/4b5e2999.html"/>
      <url>/posts/4b5e2999.html</url>
      
        <content type="html"><![CDATA[<h2 id="K8s基础和资源介绍">K8s基础和资源介绍</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">k8是对容器的编排工具，之前使用的docker-compose是单机编排</span><br><span class="line"></span><br><span class="line">k8s原生的语言：go语言</span><br><span class="line"></span><br><span class="line">管理k8s集群工具：</span><br><span class="line">1、vsocde</span><br><span class="line">2、rancher（web图形化界面）</span><br><span class="line">3、k9s</span><br><span class="line"></span><br><span class="line"><span class="comment">#和k8s类似的编排工具</span></span><br><span class="line">borg   </span><br><span class="line">swarm(docker写的)</span><br><span class="line">mesos </span><br><span class="line">这些都在之前使用的编排工具，但现在k8s火起来了，他们就不怎么用了</span><br></pre></td></tr></table></figure><h3 id="1、K8s参考网站">1、<strong>K8s参考网站</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">官网：https://kubernetes.io</span><br><span class="line">官方文档：https://kubernetes.io/zh-cn/docs/home/</span><br><span class="line">kubeadm官方文档：https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/</span><br><span class="line">docker官方文档：https://docs.docker.com/</span><br><span class="line">prometheus官方文档：https://prometheus.io/docs/introduction/overview/</span><br><span class="line">ansible安装k8s项目：https://github.com/easzlab/kubeasz?tab=readme-ov-file</span><br><span class="line">阿里云ACK：https://www.aliyun.com/product/kubernetes</span><br><span class="line">亚马逊云EKS：https://aws.amazon.com/cn/eks/?nc2=h_ql_prod_ct_eks</span><br></pre></td></tr></table></figure><h3 id="2、K8s的2大组件">2、<strong>K8s的2大组件</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c/s结构的</span><br><span class="line"></span><br><span class="line">1、master组件(控制平面组件（Control Plane Components）)</span><br><span class="line"></span><br><span class="line">2、node组件</span><br></pre></td></tr></table></figure><ul><li><strong>1、master组件    (控制平面组件（Control Plane Components）)</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、kube-apiserver(apiserver)：类似于司令部，所有master上的组件工作都要经过apiserver</span><br><span class="line">(当在客户端执行命令或者在UI界面操作起一个容器都需要经过api,他会通知其他组件，所有组件调用什么东西或者计算什么东西都要经过他)</span><br><span class="line"></span><br><span class="line">2、etcd：所有组价产生的数据存放位置，储存所有命令、资源清单、证书信任、web操作及其他组件数据</span><br><span class="line">(如果这个宕了，这一套集群就废了，也就是说这套集群需要重新搭建，而不是修复一台etcd)</span><br><span class="line"></span><br><span class="line">3、kube-scheduler(scheduler  时该丢了儿)：资源计算、资源调度</span><br><span class="line">(比如说在命令行执行创建10台容器，先经过他apiserver，会把期望值存档etcd,然后通知scheduler去etcd把数据取出来)</span><br><span class="line"></span><br><span class="line">4、kube-controller-manager(controller  抗抽了儿)：控制器，控制node组件启动容器</span><br><span class="line">(schedule做完资源的计算调度,数据存档etcd了,controller通过apiserver拿到数据，会控制node组件启动)</span><br></pre></td></tr></table></figure><ul><li><strong>2、node组件</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1、kubelet：控制docker启动容器(控制容器运时，启动指定容器)</span><br><span class="line">(每一个node都要装)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、容器运行时（Container runtime）</span><br><span class="line"> (每一个node节点上得装一个容器运行时)</span><br><span class="line">    - containerd</span><br><span class="line">    - CRI-O</span><br><span class="line">    - Docker Engine</span><br><span class="line">    - Mirantis Container Runtime</span><br><span class="line"></span><br><span class="line">3、kube-proxy（可选）：POD端口映射，网络相关</span><br><span class="line">可以理解为pod就是容器</span><br><span class="line">起pod需要做端口映射，他就是做端口映射的工具</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#k8s三大接口API二次开发，调用接口</span></span><br><span class="line">CRI：runtime，容器操作接口</span><br><span class="line">CNI：network，网络操作接口</span><br><span class="line">CSI：storage，储存操作接口</span><br></pre></td></tr></table></figure><h3 id="3、K8s架构">3、<strong>K8s架构</strong></h3><p>单机节点架构</p><p><img src="../image/study_img/image-20240912101412211.png" alt="image-20240912101412211"></p><p>高可用架构</p><p><img src="../image/study_img/image-20240912163330677.png" alt="image-20240912163330677"></p><p><img src="../image/study_img/image-20240912102531543.png" alt="image-20240912102531543"></p><p>pod创建流程</p><p><img src="../image/study_img/image-20240912103904760.png" alt="image-20240912103904760"></p><p><img src="../image/study_img/image-20240912173745374.png" alt="image-20240912173745374"></p><h3 id="4、k8s核心资源-操作对象">4、<strong>k8s核心资源(操作对象)</strong></h3><p><strong>①、pod资源</strong></p><p>①什么是pod<br>1、Pod是K8s的最小单位<br>2、Pod的IP地址是随机的，删除Pod会改变IP<br>3、Pod都有一个根容器<br>4、一个Pod内可以由一个容器或多个容器组成<br>5、一个Pod内的容器共享根容器的网络、名称空间、和文件系统卷    (比如说起一个nginx的pod,他会和根容器共享网络、名称空间、和文件系统。原理是：根容器里面的网络模式用的是docker网络模式中的Container模式)<br>6、一个Pod内的网络地址由根容器提供</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请问贵公司k8s架构一个pod里面起几个容器</span><br><span class="line"></span><br><span class="line"> 答精确的数字就是错误的，首先应该pod里面起几个容器取决于项目</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240912104532405.png" alt="image-20240912104532405"></p><p>②pod运行状态，只要记住不是runing状态就是有问题的</p><table><thead><tr><th>状态</th><th>描述</th></tr></thead><tbody><tr><td>Pending（等待）</td><td>Pod已经被K8S系统接受，但是有一个或多个容器，尚未创建，亦未运行。此阶段包括等待Pod被调度的时间和通过网络下载镜像的时间</td></tr><tr><td>Running（运行）</td><td>Pod已经绑定到某个节点(node)，Pod中所有容器都已被创建，至少有一个容器仍在运行，或者处于启动或重启状态</td></tr><tr><td>Succeeded（成功）</td><td>Pod中所有容器都已成功终止，并且不会再重启</td></tr><tr><td>Failed（失败）</td><td>Pod中所有容器都已成功终止，并且有一个容器是因为失败而终止</td></tr><tr><td>Unknown（未知）</td><td>因为某些原因无法获取Pod状态，这种情况，通常是因为与Pod所在主机通信失败</td></tr></tbody></table><p><strong>②、service资源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service也是k8s核心资源之一，service定义了服务的入口地址，用来将后端的pod服务暴露给外部的用户访问</span><br></pre></td></tr></table></figure><p>service提供了2种网络资源</p><p><img src="../image/study_img/image-20240912180101026.png" alt="image-20240912180101026"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">第一种：NodePort  宿主机端口映射clusterip端口，对外提供服务</span><br><span class="line"></span><br><span class="line">第二种：ClusterIP  pod的负载均衡(起10个pod,clusterip可以给这些pod负载，但是clusterip是内网ip，宿主机还是不能访问，所以service又提供了nodeport)</span><br><span class="line"></span><br><span class="line"><span class="comment">#问题：POD的IP是随机的，如果一个POD宕机了，k8s会自动拉起一个新的pod,ip变了如何加入到ClusterIP这个负载均衡集群中？</span></span><br><span class="line">解决方案：使用DNS解析POD的IP到一个<span class="string">&#x27;字符串上&#x27;</span>(每个pod启动都要到标签app:nginx)</span><br><span class="line">DNS的服务：</span><br><span class="line">    - coreDNS(k8s用这个)</span><br><span class="line">    - bind9(比较麻烦)</span><br><span class="line">    - dnsmsq(内外的dns用)</span><br></pre></td></tr></table></figure><p><strong>③、label标签资源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Label标签是K8S中非常重要的一个属性，Label标签就像身份证一样，可以用来识别K8S的对象。</span><br><span class="line">传统架构中，不同的服务应用之间通讯，都是通过IP和端口，但是在K8S中很多匹配关系都是通过标签来找。</span><br></pre></td></tr></table></figure><p><strong>④、Namespace资源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Namespace（名称空间）是K8S中非常重要的一个概念，Namespace将集群内部的资源进行隔离划分。</span><br><span class="line">在Namespace中，形成逻辑上的不同项目组或用户组。</span><br></pre></td></tr></table></figure><p><strong>⑤、Controller控制器资源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Controller用来管理Pod。</span></span><br><span class="line"><span class="comment">## Pod控制器的种类有很多：</span></span><br><span class="line">  - RC资源：可以做的自动拉起，控制多个副本，但现在不用了</span><br><span class="line">  - RS   RC控制器的升级版，可以自动拉起宕机的POD</span><br><span class="line">  - Deployment  生产中常用的控制器，功能强大，包含了RS控制器，对镜像做版本管理(比较常用)</span><br><span class="line">  - DaemonSet   保证所有node节点上，有且只有一个pod运行</span><br><span class="line">  - Staefulset  有状态的应用(如mysql的主从复制)，为pod提供唯一标识</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  后面起pod会写资源清单起10个nginx，挂了一台就直接挂了，pod不会再起一台，而能够拉起的是controller资源，他会检测资源清单是不是10个pod都在，如果少一个，控制器会重新拉起一个再加入集群</span><br></pre></td></tr></table></figure><p><strong>pod RC Service 的关系</strong></p><p><img src="../image/study_img/image-20240912120405666.png" alt="image-20240912120405666"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自动扩缩容：</span><br><span class="line">比如说现在有10台nginx,双十一流量上来了，10台不够用，怎么办？</span><br><span class="line">k8s有一个资源，一开始10个nginx就够了，流量上来了会自动扩容，流量下去了会自动缩容，而且扩出来的pod和之前的pod一模一样</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡十一、group资源控制/添加磁盘</title>
      <link href="/posts/cb5f694f.html"/>
      <url>/posts/cb5f694f.html</url>
      
        <content type="html"><![CDATA[<h3 id="Cgroup-资源控制-添加磁盘">Cgroup(资源控制)/添加磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1、#docker如何做资源限制的(比如说内存的限制)</span><br><span class="line">docker run -m 去限制内存</span><br><span class="line"></span><br><span class="line">2、#原理是什么</span><br><span class="line">-m指定限制内存的数量，docker通过内核参数，也就是Cgroup对资源进行限制</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#Cgroup的作用</span><br><span class="line">在操作系统解决了资源相与隔离的问题以后，还需要解决资源限制的问题，也就是避免在同一个操作系统中，防止有些资源消耗较大的容器，将整个物理机器(宿主机)的硬件资源(CPU,Memory)占满。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在Linux 系统中能够控制的资源列表如下</span><br><span class="line">memory      <span class="comment">#内存限制</span></span><br><span class="line">hugetlb     <span class="comment">#huge pages 使用量</span></span><br><span class="line">cpu         <span class="comment">#限制CPU使用率</span></span><br><span class="line">cpuacct     <span class="comment">#统计cgroups中的进程的CPU使用报告</span></span><br><span class="line">cpuset      <span class="comment">#绑定cgroups到指定 CPUs和 NUMA节点</span></span><br><span class="line">innodb_lock_wait_timeout  <span class="comment">#block设备的I0速度</span></span><br><span class="line">not_cls     <span class="comment">#网络接口设置优先级</span></span><br><span class="line">devices     <span class="comment">#mknode访问设备权限</span></span><br><span class="line">freezer     <span class="comment">#suspend和restore cgroups 进程</span></span><br><span class="line">perf_event  <span class="comment">#性能监控</span></span><br><span class="line">pids        <span class="comment">#限制子树 cgroups 总进程数</span></span><br><span class="line"></span><br><span class="line">4、#容器与容器之间的资源如何隔离？</span><br><span class="line">Namespace  名称空间隔离</span><br><span class="line"></span><br><span class="line">5、#为什么容器之间的资源可以通过ns进行隔离？</span><br><span class="line">因为docker容器运行起来是一个进程，每一个容器都是一个进程，进程之间用来资源隔离的就是Namespace</span><br></pre></td></tr></table></figure><p>查看系统实现的限制资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 node]# <span class="built_in">cat</span> /proc/cgroups </span><br><span class="line"><span class="comment">#subsys_name    hierarchy       num_cgroups     enabled</span></span><br><span class="line">cpuset  11      7       1</span><br><span class="line">cpu     3       77      1</span><br><span class="line">cpuacct 3       77      1</span><br><span class="line">memory  7       77      1</span><br><span class="line">devices 5       77      1</span><br><span class="line">freezer 10      7       1</span><br><span class="line">net_cls 2       7       1</span><br><span class="line">blkio   9       77      1</span><br><span class="line">perf_event      4       7       1</span><br><span class="line">hugetlb 6       7       1</span><br><span class="line">pids    8       77      1</span><br><span class="line">net_prio        2       7       1</span><br></pre></td></tr></table></figure><h3 id="1、案例：限制SSH内存使用">1、<strong>案例：限制SSH内存使用</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1、限制系统服务内存</span><br><span class="line">[root@docker01 node]# <span class="built_in">cd</span> /sys/fs/cgroup/memory/system.slice/sshd.service/</span><br><span class="line"></span><br><span class="line">2、查看内存服务限制(byte)</span><br><span class="line">[root@docker01 sshd.service]# <span class="built_in">cat</span> memory.limit_in_bytes </span><br><span class="line">9223372036854771712</span><br><span class="line"></span><br><span class="line">3、计算一下，大概是7G,这个是默认值，不管系统内存多大，每个进程默认最大使用7G,这样就相当于没有做任何限制·</span><br><span class="line">[root@docker01 sshd.service]# python</span><br><span class="line">&gt;&gt;&gt; 9223372036854771712/1024/1024/1024/1024/1024/1024</span><br><span class="line">7</span><br><span class="line"></span><br><span class="line">4、ssh服务不是拿容器起起来的，如果想给他限制，就需要改文件里面的数字大小</span><br><span class="line">设置限制内存</span><br><span class="line">[root@docker01 sshd.service]# <span class="built_in">echo</span> 64K &gt; memory.limit_in_bytes </span><br><span class="line">执行之后，ssh就立马端口连接了，只写1个字节，根本就连不上ssh</span><br><span class="line"></span><br><span class="line">5、到虚拟机里面查看日志</span><br><span class="line">tailf /var/log/messages</span><br><span class="line"></span><br><span class="line">6、可以发现，远程连接时，会杀进程，因为远程连接会产生一个进程，但是ssh被做了限制</span><br><span class="line">，会杀掉连接的进程</span><br><span class="line"></span><br><span class="line">Cgroup调用内核参数，如果做限制，就改memory.limit_in_bytes文件，内核来读取这个文件来进行限制</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240912151039561.png" alt="image-20240912151039561"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 sshd.service]# <span class="built_in">echo</span> 9223372036854771712 &gt; memory.limit_in_bytes</span><br><span class="line"></span><br><span class="line">[root@docker01 sshd.service]# <span class="built_in">cat</span> memory.limit_in_bytes</span><br><span class="line">9223372036854771712</span><br></pre></td></tr></table></figure><h3 id="2、OverlayFS">2、<strong>OverlayFS</strong></h3><p><strong>OverlayFS</strong> <strong>实现方式</strong></p><p>OverlayFS通过三个目录：lower目录、upper目录、以及work目录实现,其中lower目录可以是多个,upper目录为可以进行读写操作的目录, work目录为工作基础目录,挂载后内容会被清空,且在使用过程中其内容用户不可见,最后联合挂载完成给用户呈现的统一视图称为merged目录。</p><p><img src="../image/study_img/image-20240913170119816.png" alt="image-20240913170119816"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模拟overlayfs存储方式</span></span><br><span class="line">1.创建文件</span><br><span class="line">[root@k8s01 ~]# <span class="built_in">mkdir</span> /lower&#123;1..3&#125;</span><br><span class="line">[root@k8s01 ~]# <span class="built_in">mkdir</span> /upper /work /merged</span><br><span class="line"></span><br><span class="line">2.挂载文件系统</span><br><span class="line">[root@k8s01 ~]# mount -t overlay overlay -o</span><br><span class="line">lowerdir=/lower1:/lower2:/lower3,upperdir=/upper,workdir=/work /merged</span><br><span class="line"></span><br><span class="line">3.查看挂载</span><br><span class="line">[root@k8s01 ~]# mount | grep merged</span><br><span class="line"></span><br><span class="line">4.在/upper 目录中写入文件,在merged中可以显示</span><br><span class="line">[root@k8s01 /]# <span class="built_in">touch</span> /upper/upper.txt</span><br><span class="line">[root@k8s01 /]# ll /merged/</span><br><span class="line">-rw-r--r-- 1 root root 0 Mar 14 02:17 upper.txt</span><br><span class="line"></span><br><span class="line">5. 在merged中写入文件, 实际存储到了/uppper</span><br><span class="line">[root@k8s01 /]# <span class="built_in">touch</span> /merged/d.txt</span><br><span class="line">[root@k8s01 /]# ll /upper/</span><br><span class="line">-rw-r--r-- 1 root root 0 Mar 14 02:19 d.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注:如果没有upperdir， merged是只读的</span><br><span class="line">[root@node-2 overlay2]# umount /merged</span><br><span class="line">[root@node-2 overlay2]# mount -t overlay overlay -o lowerdir=/lower1:/lower2 /merged</span><br><span class="line">[root@k8s01 /]# <span class="built_in">touch</span> /merged/c.txt</span><br><span class="line"><span class="built_in">touch</span>: cannot <span class="built_in">touch</span> ‘/merged/c.txt’: Read-only file system</span><br></pre></td></tr></table></figure><h3 id="3、扩展添加磁盘和更改docker默认数据目录">3、<strong>扩展添加磁盘和更改docker默认数据目录</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、先关机</span><br><span class="line"></span><br><span class="line">2、添加磁盘</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240913172422996.png" alt="image-20240913172422996"></p><p><img src="../image/study_img/image-20240913172442557.png" alt="image-20240913172442557"></p><p><img src="../image/study_img/image-20240913172500576.png" alt="image-20240913172500576"></p><p><img src="../image/study_img/image-20240913172538917.png" alt="image-20240913172538917"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">3、查看添加的磁盘</span><br><span class="line">[root@docker01 ~]# fdisk -l</span><br><span class="line">Disk /dev/sda: 21.5 GB, 21474836480 bytes, 41943040 sectors</span><br><span class="line">......</span><br><span class="line">.....</span><br><span class="line"><span class="comment">#/dev/sdb是新添加的磁盘</span></span><br><span class="line">Disk /dev/sdb: 10.7 GB, 10737418240 bytes, 20971520 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">4、创建分区</span><br><span class="line">[root@docker01 ~]# fdisk /dev/sdb</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>: <span class="comment">## 选择主分区还是扩展分区</span></span><br><span class="line">    p primary (0 primary, 0 extended, 4 free)</span><br><span class="line">    e extended</span><br><span class="line">Select (default p): p <span class="comment"># 主分区</span></span><br><span class="line">Partition number (1-4, default 1): 1 <span class="comment"># 一个分区</span></span><br><span class="line">First sector (2048-104857599, default 2048): <span class="comment">## 设置开头扇区大小，我选择默认</span></span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-104857599, default 104857599): <span class="comment">## 设置最后扇区大小，我选择默认</span></span><br><span class="line">Partition 1 of <span class="built_in">type</span> Linux and of size 50 GiB is <span class="built_in">set</span>  <span class="comment">## 分区成功</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w <span class="comment">## 退出</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、再次查看磁盘</span><br><span class="line">[root@docker01 ~]# fdisk -l</span><br><span class="line">.....</span><br><span class="line">Disk /dev/sdb: 10.7 GB, 10737418240 bytes, 20971520 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x481c9cdc</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    20971519    10484736   83  Linux</span><br><span class="line"><span class="comment">#新分区 /dev/sdb1 </span></span><br><span class="line"></span><br><span class="line">5、格式化分区</span><br><span class="line">[root@docker01 ~]# mkfs.xfs /dev/sdb1</span><br><span class="line"></span><br><span class="line">6、查看分区的UUID</span><br><span class="line">[root@docker01 ~]# blkid /dev/sdb1</span><br><span class="line">/dev/sdb1: UUID=<span class="string">&quot;65cdcede-223b-40ad-aa68-6165b7606b71&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line"></span><br><span class="line">7、#设置永久挂载</span><br><span class="line">方法一：这个方法如果写错一个字母，很可能造成系统起不来，所以写完了要仔细检查</span><br><span class="line">[root@docker01 ~]# vim /etc/fstab </span><br><span class="line"><span class="comment">#把内容加入最后一行</span></span><br><span class="line">UUID=65cdcede-223b-40ad-aa68-6165b7606b71   /docker_data  xfs     defaults        0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法二：写入自启动文件   这个写错了不会造成系统起不来的情况</span><br><span class="line">vim /root/.bashrc </span><br><span class="line">mount -t xfs /dev/sdb1 /docker_data </span><br><span class="line">不要影响文件原先的内容</span><br><span class="line"></span><br><span class="line">8、临时挂载</span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> /docker_data</span><br><span class="line">[root@docker01 ~]# mount -a</span><br><span class="line"></span><br><span class="line">9、查看磁盘分区</span><br><span class="line">[root@docker01 ~]# <span class="built_in">df</span> -Th</span><br><span class="line">Filesystem              Type      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root xfs        19G   14G  5.1G  73% /</span><br><span class="line">devtmpfs                devtmpfs  1.6G     0  1.6G   0% /dev</span><br><span class="line">tmpfs                   tmpfs     1.6G     0  1.6G   0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     1.6G   12M  1.6G   1% /run</span><br><span class="line">tmpfs                   tmpfs     1.6G     0  1.6G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs       497M  126M  372M  26% /boot</span><br><span class="line">tmpfs                   tmpfs     318M     0  318M   0% /run/user/0</span><br><span class="line">/dev/sdb1               xfs        10G   33M   10G   1% /docker_data</span><br></pre></td></tr></table></figure><p>如下步骤可以不需要操作，如果不更改docker默认数据目录的话，不需要操作，如果更改了数据目录，之前拉的镜像就需要重新拉取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改docker默认数据目录的操作</span></span><br><span class="line"></span><br><span class="line">1、在配置文件里面添加目录信息</span><br><span class="line">[root@docker01 docker_data]# vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;http://10.0.0.105&quot;</span>,<span class="string">&quot;http://172.16.1.101:5000&quot;</span>],</span><br><span class="line"><span class="string">&quot;data-root&quot;</span>: <span class="string">&quot;/docker_data&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">[root@docker01 docker_data]# systemctl daemon-reload</span><br><span class="line">[root@docker01 docker_data]# systemctl restart docker</span><br><span class="line"></span><br><span class="line">2、查看docker信息</span><br><span class="line">[root@docker01 docker_data]# docker info</span><br><span class="line">Docker Root Dir: /docker_data</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡十、容器化监控Prometheus</title>
      <link href="/posts/f75a8470.html"/>
      <url>/posts/f75a8470.html</url>
      
        <content type="html"><![CDATA[<h2 id="容器化监控Promethues">容器化监控Promethues</h2><h3 id="1、Docker自带的监控命令">1、<strong>Docker自带的监控命令</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@docker02 ~]# docker ps</span><br><span class="line">[root@docker02 ~]# docker top mysql80</span><br><span class="line">[root@docker02 ~]# docker top jenkins</span><br><span class="line">[root@docker02 ~]# docker stats</span><br></pre></td></tr></table></figure><p>有了上面的命令，我们就可以使用zabbix来监控docker容器了，但是问题就是， zabbix-agent 的端口，我们在宿主机上只能映射出来一个。<br><strong>解决方案：</strong><br>1.起多块网卡<br>2.每个容器装一个zabbix-server<br>3.修改不同容器的agent端口<br>4.映射容器的相关文件，然后监控宿主机上的对应文件<br>5.不用zabbix</p><h3 id="2、监控软件的介绍">2、<strong>监控软件的介绍</strong></h3><p><em>服务端</em></p><p>prometheus：类似于zabbix-server服务端，负责收集客户端监控指标(Metrics)</p><p><em>客户端</em></p><p>cAdvisor：类似 zabbix-agent 客户端，用来收集容器里面的监控指标<br>node_exporter：类似 zabbix-agent 客户端，用来收集宿主机的监控指标</p><p><em>组件</em></p><p>Grafana：出图工具</p><p>1、cAdvisor介绍     凯得歪热儿</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cAdvisor介绍</span><br><span class="line">cAdvisor是谷歌开发的容器监控工具，cAdvisor会显示当前host资源使用情况，包括CPU、内存、网络、文件系统等。</span><br><span class="line"></span><br><span class="line">不过cAdvisor提供的操作界面略显简陋，而且要在不同的页面之间跳转，并且只能监控一个host，不免让人质疑它的实用性，但是cAdvisor有一个亮点，就是将监控数据导出给其他第三方工具，而且它兼容很多第三方工具，所以我们把它定位成是一个 监控数据收集器 ，收集和导出是它的强项，而非展示</span><br><span class="line"></span><br><span class="line">dokcer stats 可以查看运行的 Docker 镜像的运行状态，例如：这种方式比较原始，因为你无法通过http 的方式来获取数据，而且没有界面，数据可视化还需要做大量的工作。</span><br><span class="line"></span><br><span class="line">由于 dokcer stats 有这些问题，所以 cadvisor 诞生了。 cadvisor 不仅可以搜集一台机器上所有运行的容器信息还提供基础查询界面和 http 接口，方便 Prometheus 进行数据抓取。</span><br></pre></td></tr></table></figure><p>2、grafana介绍<br>grafana是一个支持多种数据源的图形展示工具</p><p>3、prometheus介绍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">promethues官网：https://prometheus.io</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">prometheus是一个非常优秀的监控工具，提供了监控数据的收集、存储、处理、可视化、和告警等一系列完整的监控体系。</span><br><span class="line"></span><br><span class="line">组件包含：</span><br><span class="line">Node Exporter：负责收集host硬件和操作系统数据，以容器的形式运行在所有的host上。</span><br><span class="line">cAdvisor：负责收集容器数据，以容器的形式运行在所有的host上。</span><br><span class="line"></span><br><span class="line">zabbix是在客户端配服务端的地址，所以数据能从客户端推送给服务端</span><br><span class="line"></span><br><span class="line">prometheus数据获取的来源：</span><br><span class="line">服务端配客户端的地址，prometheus-server去其他客户端拉过来的数据，只有告警是推的</span><br><span class="line">设置触发器出现告警了，出发告警方式，才会推送数据</span><br></pre></td></tr></table></figure><p>支持：<br>1、MySQL、Oracle、Postgre、es等数据库<br>2、zabbix、prometheus等监控系统</p><h3 id="3、Prometheus架构">3、<strong>Prometheus架构</strong></h3><p><img src="../image/study_img/image-20240911085025512.png" alt="image-20240911085025512"></p><p>TSDB：时序数据库，和时间轴有关的</p><p>influxDB：时序数据库</p><h3 id="4、部署Prometheus">4、<strong>部署Prometheus</strong></h3><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>docker01</td><td>10.0.0.101  /  172.16.1.101</td><td>被监控端</td><td>cadvisor、node_exporter</td></tr><tr><td>docker02</td><td>10.0.0.102  /  172.16.1.102</td><td>被监控端</td><td>cadvisor、node_exporter</td></tr><tr><td>docker03</td><td>10.0.0.103  /  172.16.1.103</td><td>被监控端</td><td>cadvisor、node_exporter</td></tr><tr><td>elk01</td><td>10.0.0.76  /  172.16.1.76</td><td>监控端、服务端</td><td>prometheus、grafana、cadvisor</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## docker run命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动node-exporter</span></span><br><span class="line">docker run -d -p 9100:9100 -v <span class="string">&quot;/:/host:ro,rslave&quot;</span> --name=node_exporter</span><br><span class="line">quay.io/prometheus/node-exporter --path.rootfs /host</span><br><span class="line"></span><br><span class="line">-v <span class="string">&quot;/:/host：相当于监控宿主机</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 启动cadvisor</span></span><br><span class="line"><span class="string">docker run --volume=/:/rootfs:ro --volume=/var/run:/var/run:rw --</span></span><br><span class="line"><span class="string">volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro -p 8080:8080 -d --name=cadvisor google/cadvisor:latest</span></span><br></pre></td></tr></table></figure><p>1、elk机器 部署docker compose</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">1、准备工作目录</span><br><span class="line">[root@elk1 ~]# <span class="built_in">mkdir</span> prometheus &amp;&amp; <span class="built_in">cd</span> prometheus/</span><br><span class="line"></span><br><span class="line">2、准备promethues配置文件</span><br><span class="line">[root@elk1 prometheus]# vim prometheus.yml</span><br><span class="line">scrape_configs:</span><br><span class="line">- job_name: cadvisor</span><br><span class="line">  scrape_interval: 5s</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - 10.0.0.101:8080</span><br><span class="line">    - 10.0.0.102:8080</span><br><span class="line">    - 10.0.0.103:8080</span><br><span class="line"></span><br><span class="line">- job_name: prometheus</span><br><span class="line">  scrape_interval: 5s</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - 10.0.0.76:9090</span><br><span class="line"></span><br><span class="line">- job_name: node_exporter</span><br><span class="line">  scrape_interval: 5s</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - 10.0.0.101:9100</span><br><span class="line">    - 10.0.0.102:9100</span><br><span class="line">    - 10.0.0.103:9100</span><br><span class="line"></span><br><span class="line">3、编写docker-compose</span><br><span class="line">[root@elk1 prometheus]# vim pro-docker-compose.yml </span><br><span class="line">version: <span class="string">&#x27;3.2&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  prometheus:</span><br><span class="line">    image: prom/prometheus:latest</span><br><span class="line">    container_name: prometheus</span><br><span class="line">    ports:</span><br><span class="line">      - 9090:9090</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - --config.file=/etc/prometheus/prometheus.yml</span><br><span class="line">    volumes:</span><br><span class="line">      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro</span><br><span class="line">    restart: always</span><br><span class="line">    </span><br><span class="line">  grafana:</span><br><span class="line">    image: grafana/grafana:latest</span><br><span class="line">    container_name: grafana</span><br><span class="line">    ports:</span><br><span class="line">      - 3000:3000</span><br><span class="line">    restart: always</span><br><span class="line">    </span><br><span class="line">  cadvisor:</span><br><span class="line">    image: google/cadvisor:latest</span><br><span class="line">    container_name: cadvisor</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    volumes:</span><br><span class="line">      - /:/rootfs:ro</span><br><span class="line">      - /var/run:/var/run:rw</span><br><span class="line">      - /sys:/sys:ro</span><br><span class="line">      - /var/lib/docker:/var/lib/docker:ro</span><br><span class="line">    restart: always</span><br><span class="line">      </span><br><span class="line">  node-exporter:</span><br><span class="line">    image: prom/node-exporter:latest</span><br><span class="line">    container_name: node_exporter</span><br><span class="line">    ports:</span><br><span class="line">      - 9100:9100</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">[root@elk1 promethenus]# docker-compose -f pro-docker-compose.yml up -d</span><br></pre></td></tr></table></figure><p>2、docker01 02 03</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 node]# <span class="built_in">mkdir</span> node &amp;&amp; <span class="built_in">cd</span> node</span><br><span class="line">[root@docker01 node]# vim node-docker-compose.yml </span><br><span class="line">version: <span class="string">&#x27;3.2&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  node-exporter:</span><br><span class="line">    image: prom/node-exporter:latest</span><br><span class="line">    container_name: node_exporter</span><br><span class="line">    ports:</span><br><span class="line">      - 9100:9100</span><br><span class="line">    restart: always</span><br><span class="line">    </span><br><span class="line">  cadvisor:</span><br><span class="line">    image: google/cadvisor:latest</span><br><span class="line">    container_name: cadvisor</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    volumes:</span><br><span class="line">      - /:/rootfs:ro</span><br><span class="line">      - /var/run:/var/run:rw</span><br><span class="line">      - /sys:/sys:ro</span><br><span class="line">      - /var/lib/docker:/var/lib/docker:ro</span><br><span class="line">    restart: always</span><br><span class="line">    </span><br><span class="line">[root@docker02 node]# docker-compose -f node-docker-compose.yml up</span><br></pre></td></tr></table></figure><p>3、访问网页 10.0.0.76:9090，可以看到监控的其他客户端</p><p><img src="../image/study_img/image-20240911093304356.png" alt="image-20240911093304356"></p><p><img src="../image/study_img/image-20240911163131170.png" alt="image-20240911163131170"></p><p>收集到的数据指标是Key:value的格式</p><p>数据查询操作</p><p><img src="../image/study_img/image-20240911163606439.png" alt="image-20240911163606439"></p><p><img src="../image/study_img/image-20240911163702757.png" alt="image-20240911163702757"></p><p>如果只想看101的数据  ：  就用{ }花括号里面写想要查看的字段  花括号里面的字段相当于过滤</p><p><img src="../image/study_img/image-20240911170150515.png" alt="image-20240911170150515"></p><p>4、访问cadvisor页面 10.0.0.101:8080</p><p><img src="../image/study_img/image-20240911165134739.png" alt="image-20240911165134739"></p><p><img src="../image/study_img/image-20240911165240850.png" alt="image-20240911165240850"></p><p><img src="../image/study_img/image-20240911165311636.png" alt="image-20240911165311636"></p><p>5、grafana模版出图</p><p>登录自己搭建的grafana ：10.0.0.76:3000/</p><p><img src="../image/study_img/image-20240911160356809.png" alt="image-20240911160356809"></p><p>进入grafana官网：<a href="https://grafana.com/">https://grafana.com/</a>     进入官网首页，来到首页的页面最底下</p><p><img src="../image/study_img/image-20240911170835247.png" alt="image-20240911170835247"></p><p><img src="../image/study_img/image-20240911171206521.png" alt="image-20240911171206521"></p><p>选择一个自己想要的模版点击进去，自动他的ID，之后添加</p><p><img src="../image/study_img/image-20240911171354848.png" alt="image-20240911171354848"></p><p>①、回到自己搭建的grafana</p><p><img src="../image/study_img/image-20240911171850344.png" alt="image-20240911171850344"></p><p>②、找到prometheus的图标，双击进去，添加prometheus的URL,然后点击最下面的save &amp; test  可看到Successfully添加成功的信息</p><p><img src="../image/study_img/image-20240911172651580.png" alt="image-20240911172651580"></p><p>③测试：  再点击左边的数据源栏 可看到添加成功，之后添加模版</p><p><img src="../image/study_img/image-20240911173117487.png" alt="image-20240911173117487"></p><p><img src="../image/study_img/image-20240911173228995.png" alt="image-20240911173228995"></p><p><img src="../image/study_img/image-20240911173445043.png" alt="image-20240911173445043"></p><p>模版里面可以点击进去看看，有的有数据，有的没有数据</p><p><img src="../image/study_img/image-20240911173624110.png" alt="image-20240911173624110"></p><p>其实可以把刚刚添加的3个模版删除，因为不是我需要的，接下来会添加需要的模版</p><p>④、添加cAdcisor的模版</p><p><img src="../image/study_img/image-20240911174519155.png" alt="image-20240911174519155"></p><p>8919    11277  这两个ID比较常用</p><p><img src="../image/study_img/image-20240911174945815.png" alt="image-20240911174945815"></p><p><img src="../image/study_img/image-20240911175011030.png" alt="image-20240911175011030"></p><p><img src="../image/study_img/image-20240911175141393.png" alt="image-20240911175141393"></p><p>可以看到数据，但是目前默认是看101的数据，项目和主机都是空的，想看指定主机的数据没有，所以需要改模版</p><p><img src="../image/study_img/image-20240911175238626.png" alt="image-20240911175238626"></p><p><em>6、修改模版</em></p><p>需要使用prometheus查询数据的语句 ：promeQL</p><p><img src="../image/study_img/image-20240911181443564.png" alt="image-20240911181443564"></p><p><img src="../image/study_img/image-20240911181734944.png" alt="image-20240911181734944"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、project</span><br><span class="line">label_values(container_last_seen, project)</span><br><span class="line"></span><br><span class="line">2、server</span><br><span class="line">label_values(container_last_seen&#123;project=~<span class="string">&quot;<span class="variable">$project</span>&quot;</span>&#125;, server)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、instance</span><br><span class="line">label_values(container_last_seen&#123;project=~<span class="string">&quot;<span class="variable">$project</span>&quot;</span>,server=~<span class="string">&quot;<span class="variable">$server</span>&quot;</span>&#125;, instance)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、project</span><br><span class="line">label_values(container_last_seen, project)</span><br><span class="line">获取的是container_last_seen里面的project，去prometheus里面去查一下是否有这个值</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240911192227950.png" alt="image-20240911192227950"></p><p>可以看到这个版本的project项目名叫job，所以project应该改成job</p><p><img src="../image/study_img/image-20240911194340683.png" alt="image-20240911194340683"></p><p>把project修改成job成功</p><p><img src="../image/study_img/image-20240911194429236.png" alt="image-20240911194429236"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2、server</span><br><span class="line">label_values(container_last_seen&#123;project=~<span class="string">&quot;<span class="variable">$project</span>&quot;</span>&#125;, server)</span><br></pre></td></tr></table></figure><p>这里面只要instance和job,没有server,所以把server删除</p><p><img src="../image/study_img/image-20240911194700416.png" alt="image-20240911194700416"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3、instance</span><br><span class="line">label_values(container_last_seen&#123;project=~<span class="string">&quot;<span class="variable">$project</span>&quot;</span>,server=~<span class="string">&quot;<span class="variable">$server</span>&quot;</span>&#125;, instance)</span><br><span class="line">server没有，不要，可以删除</span><br><span class="line"></span><br><span class="line">label_values(container_last_seen&#123;job=~<span class="string">&quot;<span class="variable">$project</span>&quot;</span>&#125;, instance)</span><br><span class="line"></span><br><span class="line"><span class="variable">$project</span>这个表示获取project里面的变量</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240911200218534.png" alt="image-20240911200218534"></p><p><img src="../image/study_img/image-20240911195320041.png" alt="image-20240911195320041"></p><p>修改完成，保存</p><p><img src="../image/study_img/image-20240911195411815.png" alt="image-20240911195411815"></p><p><img src="../image/study_img/image-20240911200333043.png" alt="image-20240911200333043"></p><p>查看没有数据，添加数据</p><p><img src="../image/study_img/image-20240911200507280.png" alt="image-20240911200507280"></p><p><img src="../image/study_img/image-20240911200625330.png" alt="image-20240911200625330"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">count(container_last_seen&#123;project=~<span class="string">&quot;<span class="variable">$project</span>&quot;</span>,instance=~<span class="string">&quot;<span class="variable">$instance</span>&quot;</span>,image!=<span class="string">&quot;&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line">把变量和job换一下</span><br><span class="line">count(container_last_seen&#123;job=~<span class="string">&quot;cadvisor&quot;</span>,instance=~<span class="string">&quot;10.0.0.101:8080&quot;</span>,image!=<span class="string">&quot;&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><p>可以获取到数据</p><p><img src="../image/study_img/image-20240911200945018.png" alt="image-20240911200945018"></p><p><img src="../image/study_img/image-20240911201650404.png" alt="image-20240911201650404"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">因为prometheus里面查出来的没有project标签，只有job标签</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">container_last_seen&#123;<span class="built_in">id</span>=<span class="string">&quot;/&quot;</span>, instance=<span class="string">&quot;10.0.0.101:8080&quot;</span>, job=<span class="string">&quot;cadvisor&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>目前只改了一个数据，但是不可能一个一个去修改，所以需要批量修改</p><p><img src="../image/study_img/image-20240911201813116.png" alt="image-20240911201813116"></p><p>这个json文件就是模版，但往下看，这个json文件里面还是project，可以复制出来，批量替换成job</p><p><img src="../image/study_img/image-20240911201937730.png" alt="image-20240911201937730"></p><p><img src="../image/study_img/image-20240911202129508.png" alt="image-20240911202129508"></p><p>把替换后的json文件粘贴</p><p><img src="../image/study_img/image-20240911202309412.png" alt="image-20240911202309412"></p><p>保存之后，重新进入，查看数据</p><p><img src="../image/study_img/image-20240911202434264.png" alt="image-20240911202434264"></p><p><img src="../image/study_img/image-20240911202449993.png" alt="image-20240911202449993"></p><p>⑤、添加node_exporter的模版</p><p>在官网搜索模版ID</p><p><img src="../image/study_img/image-20240911215221833.png" alt="image-20240911215221833"></p><p><img src="../image/study_img/image-20240911215237958.png" alt="image-20240911215237958"></p><p>回到自己安装的grafana，添加模版</p><p><img src="../image/study_img/image-20240911215341094.png" alt="image-20240911215341094"></p><p><img src="../image/study_img/image-20240911215432195.png" alt="image-20240911215432195"></p><p><img src="../image/study_img/image-20240911215458213.png" alt="image-20240911215458213"></p><p>数据生成</p><p><img src="../image/study_img/image-20240911215516206.png" alt="image-20240911215516206"></p><p><img src="../image/study_img/image-20240911215800737.png" alt="image-20240911215800737"></p><p><img src="../image/study_img/image-20240911215816266.png" alt="image-20240911215816266"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node_filesystem_size_bytes&#123;instance=<span class="string">&quot;<span class="variable">$node</span>&quot;</span>,job=<span class="string">&quot;<span class="variable">$job</span>&quot;</span>,mountpoint=<span class="string">&quot;/&quot;</span>,fstype!=<span class="string">&quot;rootfs&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">想要展示数据就把,fstype!=<span class="string">&quot;rootfs&quot;</span>删掉</span><br><span class="line">node_filesystem_size_bytes&#123;instance=<span class="string">&quot;<span class="variable">$node</span>&quot;</span>,job=<span class="string">&quot;<span class="variable">$job</span>&quot;</span>,mountpoint=<span class="string">&quot;/&quot;</span>,fstype!=<span class="string">&quot;rootfs&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240911215845909.png" alt="image-20240911215845909"></p><p>想要展示数据就把,fstype!=&quot;rootfs&quot;删掉</p><p><img src="../image/study_img/image-20240911220402516.png" alt="image-20240911220402516"></p><p><img src="../image/study_img/image-20240911220531172.png" alt="image-20240911220531172"></p><p>再查看没数据的框，查看没数据的原因，并修改</p><p><img src="../image/study_img/image-20240911220656392.png" alt="image-20240911220656392"></p><p>无法查询数据，CPU没有等待时间，查询不出数据，所以没有数据没关系</p><p><img src="../image/study_img/image-20240911221251157.png" alt="image-20240911221251157"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irate(node_pressure_cpu_waiting_seconds_total&#123;instance=<span class="string">&quot;<span class="variable">$node</span>&quot;</span>,job=<span class="string">&quot;<span class="variable">$job</span>&quot;</span>&#125;[<span class="variable">$__rate_interval</span>])</span><br></pre></td></tr></table></figure><p>再继续排查下一个没有数据的原因，并修改</p><p><img src="../image/study_img/image-20240911221454957.png" alt="image-20240911221454957"></p><p><img src="../image/study_img/image-20240911221632432.png" alt="image-20240911221632432"></p><p><img src="../image/study_img/image-20240911222204013.png" alt="image-20240911222204013"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">没有数据就去prometheus里面查一下，看看是否有相关字段</span><br><span class="line"></span><br><span class="line">比较好用的模版有</span><br><span class="line">11277</span><br><span class="line">8919</span><br></pre></td></tr></table></figure><p>8919的模版图</p><p><img src="../image/study_img/image-20240911224138667.png" alt="image-20240911224138667"></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡九、docker的资源限制</title>
      <link href="/posts/79ab352e.html"/>
      <url>/posts/79ab352e.html</url>
      
        <content type="html"><![CDATA[<h2 id="docker的资源限制">docker的资源限制</h2><h3 id="1、docker资源限制介绍"><strong>1、docker资源限制介绍</strong></h3><p>官网： <a href="https://docs.docker.com/engine/containers/resource_constraints/">https://docs.docker.com/engine/containers/resource_constraints/</a></p><p>带有内存、CPU 和 GPU 的运行时选项<br>默认情况下，容器没有资源限制，可以使用主机内核调度程序允许的尽可能多的给定资源。Docker 提供了控制容器可以使用多少内存或 CPU 的方法，设置docker run命令的运行时配置标志。本节提供有关何时应该设置此类限制以及设置这些限制的可能影响的详细信息。</p><p>其中许多功能需要您的内核支持 Linux 功能。要检查支持，您可以使用该 docker info命令。如果您的内核中禁用了某个功能，您可能会在输出的末尾看到如下警告：<br>WARNING: no swap limit support</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">阿里云上面没有swap空间，因为swap是虚拟的，阿里云也是虚拟的</span><br><span class="line">docker k8s都不要搞swap,本来就是虚拟化的产品，把虚拟磁盘再变成虚拟内存，性能更低</span><br><span class="line"></span><br><span class="line">当磁盘被沾满了，会内存溢出，会启动OOM <span class="built_in">kill</span>,会杀进程</span><br></pre></td></tr></table></figure><h4 id="Dokcer内存限制"><strong>Dokcer内存限制</strong></h4><p>Docker限制内存的相关参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1、拉取压测工具的镜像</span><br><span class="line">[root@docker03 ~]# docker pull akarshes/docker-stress-ng:latest</span><br><span class="line"></span><br><span class="line">2、# 内存限制测试</span><br><span class="line"><span class="comment"># 没有内存限制</span></span><br><span class="line">[root@docker02 ~]# docker run --name mem_test -it --<span class="built_in">rm</span> akarshes/docker-stress-ng --vm 8</span><br><span class="line">[root@docker03 ~]# docker stats</span><br><span class="line">CONTAINER ID   NAME              CPU %     MEM USAGE / LIMIT     MEM %     NET I/O         BLOCK I/O         PIDS</span><br><span class="line">9450d02cb9a1   mem_test          234.65%   2.006GiB / 2.885GiB   69.55%    586B / 0B       5.55MB / 0B       17</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#对容器做资源限制</span></span><br><span class="line">[root@docker03 ~]# docker run --name mem_test -it --<span class="built_in">rm</span>  -m 200m akarshes/docker-stress-ng --vm 8</span><br><span class="line">[root@docker03 ~]# docker stats</span><br><span class="line">CONTAINER ID   NAME              CPU %     MEM USAGE / LIMIT     MEM %     NET I/O          BLOCK I/O         PIDS</span><br><span class="line">7870345de325   mem_test          136.94%   193.2MiB / 200MiB     96.59%    656B / 0B        59.7MB / 7.41GB   15</span><br><span class="line"></span><br><span class="line">-m：允许容器使用的最大内存，单位：k、m、g</span><br><span class="line">--oom-kill-disable</span><br><span class="line"><span class="comment">#查看命令的帮助</span></span><br><span class="line">docker run --name mem_test -it --<span class="built_in">rm</span> akarshes/docker-stress-ng --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Example: stress-ng --cpu 8 --io 4 --vm 2 --vm-bytes 128M --fork 4 --<span class="built_in">timeout</span> 10s</span><br></pre></td></tr></table></figure><h4 id="Dokcer限制CPU"><strong>Dokcer限制CPU</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 没做CPU限制</span></span><br><span class="line">[root@docker02 ~]# docker run --name mem_test -it --<span class="built_in">rm</span> akarshes/docker-stress-ng --cpu 4</span><br><span class="line">[root@docker03 ~]# docker stats</span><br><span class="line">CONTAINER ID   NAME              CPU %     MEM USAGE / LIMIT     MEM %     NET I/O         BLOCK I/O         PIDS</span><br><span class="line">3c74f649be1e   mem_test          214.19%   25.6MiB / 2.885GiB    0.87%     656B / 0B       0B / 0B           9</span><br><span class="line"><span class="comment">#cpu数据一直增加，在超载</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 限制CPU</span></span><br><span class="line">[root@docker02 ~]# docker run --name mem_test -it --<span class="built_in">rm</span> --cpus 0.5 akarshes/docker-stress-ng -cpu 8</span><br></pre></td></tr></table></figure><p>我们资源限制不是目的，目的是我们要随时监控到我们的资源，能看到容器对宿主机资源的使用，才能更好的做限制，不要盲目限制，不知道资源使用的情况下，就对容器资源限制，是很危险的。所以我们要对容器进行监控，如果不监控。容器超载了就会出现OMM内存溢出，杀进程的情况</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡八、docker容器跨主机通信</title>
      <link href="/posts/f36f1204.html"/>
      <url>/posts/f36f1204.html</url>
      
        <content type="html"><![CDATA[<h2 id="docker容器跨主机通信">docker容器跨主机通信</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">起那么多台docker，想做集群，就要让容器之间互相通信，然后做成一个架构</span><br><span class="line"></span><br><span class="line"><span class="comment">#docker-compos多机编排，需要配合docker-swarm</span></span><br><span class="line"></span><br><span class="line">现在起一个容器自己决定起在哪一台上，没有对这台的资源进行计算</span><br><span class="line">多机编排工具可以计算哪台机器适合把服务起在哪台机器</span><br></pre></td></tr></table></figure><p><strong>Docker跨主机网络类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、静态路由</span><br><span class="line">2、flannel (k8s里面用的比较多)</span><br><span class="line">3、overlay</span><br><span class="line">4、macvlan</span><br><span class="line">5、calico</span><br></pre></td></tr></table></figure><h3 id="1、静态路由模式"><strong>1、静态路由模式</strong></h3><p><img src="C:%5CUsers%5CMac%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240910090901456.png" alt="image-20240910090901456"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">静态路由做起来简单，但是阿里云不让添加路由</span><br><span class="line"></span><br><span class="line">1. 添加一条到达网络192.168.1.0/24的路由，网关为192.168.0.1，距离值为10：</span><br><span class="line">route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.0.1 metric 10</span><br><span class="line"></span><br><span class="line">2. 添加一条到达主机192.168.1.100的路由，网关为192.168.0.1：</span><br><span class="line">route add -host 192.168.1.100 gw 192.168.0.1</span><br><span class="line"></span><br><span class="line">3. 添加一条到达网络192.168.0.0/16的路由，网关为192.168.1.1，距离值为20，经过eth0接口：</span><br><span class="line">route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 metric 20 dev eth0</span><br></pre></td></tr></table></figure><p>2、flannel (k8s里面用的比较多)</p><p><img src="C:%5CUsers%5CMac%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240910091610337.png" alt="image-20240910091610337"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flannel图形化界面需要配置证书</span><br></pre></td></tr></table></figure><h3 id="2、flanne网络模式的部署"><strong>2、flanne网络模式的部署</strong></h3><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>docker01</td><td>10.0.0.101  /  172.16.1.101</td><td>互相通信的容器</td><td>flanne</td></tr><tr><td>docker02</td><td>10.0.0.102  /  172.16.1.102</td><td>互相通信的容器</td><td>flanne</td></tr><tr><td>docker03</td><td>10.0.0.103  /  172.16.1.103</td><td>互相通信的容器</td><td>flanne</td></tr><tr><td>elk01</td><td>10.0.0.76  /  172.16.1.76</td><td>储存数据的中介</td><td>ETCD</td></tr></tbody></table><p>1、部署ETCD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1、安装etcd</span><br><span class="line">[root@elk1 ~]# yum -y install etcd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、修改etcd配置文件</span><br><span class="line">[root@elk1 ~]# vim /etc/etcd/etcd.conf </span><br><span class="line"><span class="comment"># [member]</span></span><br><span class="line">ETCD_NAME=default</span><br><span class="line">ETCD_DATA_DIR=<span class="string">&quot;/var/lib/etcd/default.etcd&quot;</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">&quot;http://172.16.1.76:2379,http://127.0.0.1:2379&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [cluster]</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=<span class="string">&quot;new&quot;</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">&quot;etcd-cluster&quot;</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">&quot;http://172.16.1.76:2379&quot;</span></span><br><span class="line"></span><br><span class="line">3、启动etcd并加入开机自启</span><br><span class="line">[root@elk1 ~]# systemctl start etcd</span><br><span class="line">[root@elk1 ~]# systemctl <span class="built_in">enable</span> etcd</span><br><span class="line">查看端口 2380是图形化界面连接的端口</span><br></pre></td></tr></table></figure><p>ETCD的基础操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-c  调接口</span><br><span class="line"></span><br><span class="line">1、检查集群的健康状态</span><br><span class="line">[root@elk1 ~]# etcdctl -C http://127.0.0.1:2379 cluster-health</span><br><span class="line"></span><br><span class="line">2、写入数据</span><br><span class="line">[root@elk1 ~]# etcdctl -C http://127.0.0.1:2379 <span class="built_in">set</span> /testdir/testkey <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line">3、查看数据</span><br><span class="line">[root@elk1 ~]# etcdctl -C http://127.0.0.1:2379 get /testdir/testkey </span><br></pre></td></tr></table></figure><p>2、3台机器安装配置flannel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1、3台机器安装flannel</span><br><span class="line">[root@docker01 ~]# yum -y install flannel</span><br><span class="line">[root@docker02 ~]# yum -y install flannel</span><br><span class="line">[root@docker02 ~]# yum -y install flannel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、3台机器修改flannle配置文件</span><br><span class="line">[root@docker02 ~]# vim /etc/sysconfig/flanneld</span><br><span class="line"><span class="comment">#写etcd端的ip</span></span><br><span class="line">FLANNEL_ETCD_ENDPOINTS=<span class="string">&quot;http://172.16.1.76:2379&quot;</span></span><br><span class="line"><span class="comment">#这段是默认的，不需要修改，一会要在改目录下创建文件</span></span><br><span class="line">FLANNEL_ETCD_PREFIX=<span class="string">&quot;/atomic.io/network&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、创建flannel数据再etcd中</span><br><span class="line">[root@elk1 ~]# etcdctl mk /atomic.io/network/config <span class="string">&#x27;&#123;&quot;Network&quot;:&quot;192.168.0.0/16&quot;&#125;&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;Network&quot;</span>:<span class="string">&quot;192.168.0.0/16&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">[root@elk1 ~]# etcdctl -C http://127.0.0.1:2379 <span class="built_in">set</span> /atomic.io/network/config <span class="string">&#x27;&#123;&quot;Network&quot;:&quot;192.168.0.0/16&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">4、3台机器启动flannel</span><br><span class="line">[root@docker01 ~]# systemctl start flanneld &amp;&amp; systemctl <span class="built_in">enable</span> flanneld</span><br><span class="line"></span><br><span class="line">5、3台机器查看flannel0网卡信息</span><br><span class="line">[root@docker01 ~]# ifconfig</span><br><span class="line">flannel0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1472</span><br><span class="line">        inet 192.168.54.0  netmask 255.255.0.0  destination 192.168.54.0</span><br></pre></td></tr></table></figure><p>3、关联flannel和docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">1、3台机器查看改文件，一会会在启动脚本里面加信息</span><br><span class="line">[root@docker02 ~]# <span class="built_in">cat</span> /run/flannel/docker </span><br><span class="line">DOCKER_OPT_BIP=<span class="string">&quot;--bip=192.168.22.1/24&quot;</span></span><br><span class="line">DOCKER_OPT_IPMASQ=<span class="string">&quot;--ip-masq=true&quot;</span></span><br><span class="line">DOCKER_OPT_MTU=<span class="string">&quot;--mtu=1472&quot;</span></span><br><span class="line">DOCKER_NETWORK_OPTIONS=<span class="string">&quot; --bip=192.168.22.1/24 --ip-masq=true --mtu=1472&quot;</span></span><br><span class="line"></span><br><span class="line">2、3台机器修改docker启动脚本</span><br><span class="line">[root@docker02 ~]# vim /usr/lib/systemd/system/docker.service</span><br><span class="line">[Service]</span><br><span class="line"><span class="comment">#添加这行读取环境变量文件</span></span><br><span class="line">EnviromentFile=/run/flannel/docker </span><br><span class="line"><span class="comment">#在最后面添加变量</span></span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock <span class="variable">$DOCKER_NETWORK_OPTIONS</span></span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# systemctl daemon-reload &amp;&amp; systemctl restart flanneld</span><br><span class="line"></span><br><span class="line">3、3台机器开启内核转发</span><br><span class="line">[root@docker03 ~]# <span class="built_in">echo</span> <span class="string">&#x27;net.ipv4.ip_forward=1&#x27;</span>  &gt;&gt; /etc/sysctl.conf </span><br><span class="line"></span><br><span class="line">4、3台机器开做如下操作</span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br><span class="line">[root@docker01 ~]# systemctl start firewalld</span><br><span class="line">[root@docker01 ~]# systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# systemctl start firewalld &amp;&amp; systemctl stop firewalld</span><br><span class="line">[root@docker01 ~]#  systemctl restart network</span><br><span class="line">[root@docker01 ~]#  systemctl restart flanneld </span><br><span class="line">[root@docker01 ~]#  systemctl restart docker</span><br><span class="line"></span><br><span class="line">------------注意---------------------</span><br><span class="line">1、# 执行docker info 出现警告</span><br><span class="line"><span class="comment">#需要配置内核转发支持iptables</span></span><br><span class="line">WARNING: bridge-nf-call-iptables is disabled</span><br><span class="line">WARNING: bridge-nf-call-ip6tables is disabled</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysctl.d/docker.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables=1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward=1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">[root@docker01 ~]#  systemctl restart network</span><br><span class="line">[root@docker01 ~]#  systemctl restart flanneld </span><br><span class="line">[root@docker01 ~]#  systemctl restart docker</span><br></pre></td></tr></table></figure><p>3、测试是否可以通信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1、进去查看3台机器的ip,然后再互相ping  IP，如果可以ping通则ok</span><br><span class="line">[root@docker01 ~]# docker run -it busybox /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 02:42:C0:A8:36:02  </span><br><span class="line">          inet addr:192.168.54.2  Bcast:192.168.54.255  Mask:255.255.255.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@docker02 ~]# docker run -it busybox /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 02:42:C0:A8:16:05  </span><br><span class="line">          inet addr:192.168.22.5  Bcast:192.168.22.255  Mask:255.255.255.0</span><br><span class="line">          </span><br><span class="line">[root@docker03 ~]# docker run -it busybox /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 02:42:C0:A8:39:05  </span><br><span class="line">          inet addr:192.168.57.5  Bcast:192.168.57.255  Mask:255.255.255.0</span><br></pre></td></tr></table></figure><h3 id="3、overlay跨主机通信"><strong>3、overlay跨主机通信</strong></h3><p><img src="C:%5CUsers%5CMac%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240910144826332.png" alt="image-20240910144826332"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">http://www.cnblogs.com/CloudMan6/p/7270551.html</span><br><span class="line"></span><br><span class="line">docker03上： consul存储ip地址的分配</span><br><span class="line">docker run -d -p 8500:8500 -h consul --name consul progrium/consul -server -bootstrap</span><br><span class="line"></span><br><span class="line">设置容器的主机名</span><br><span class="line">consul：kv类型的存储数据库（key:value）</span><br><span class="line">docker01、02上：</span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;cluster-store&quot;</span>: <span class="string">&quot;consul://10.0.0.13:8500&quot;</span>,</span><br><span class="line"><span class="string">&quot;cluster-advertise&quot;</span>: <span class="string">&quot;10.0.0.11:2376&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vim /usr/lib/systemd/system/docker.service</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line">2）创建overlay网络</span><br><span class="line">docker network create -d overlay --subnet 172.16.2.0/24 --gateway 172.16.2.254 ol1</span><br><span class="line"></span><br><span class="line">3）启动容器测试</span><br><span class="line">docker run -it --network ol1 --name oldboy01 busybox /bin/sh</span><br><span class="line">每个容器有两块网卡,eth0实现容器间的通讯,eth1实现容器访问外网</span><br></pre></td></tr></table></figure><h3 id="4、macvlan"><strong>4、macvlan</strong></h3><p>默认一个物理网卡，只有一个物理mac地址，虚拟多个mac地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建macvlan网络</span></span><br><span class="line">docker network create --driver macvlan --subnet 10.0.0.0/24 --gateway 10.0.0.254 -o parent=eth0 macvlan_1</span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置eth0的网卡为混杂模式</span></span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 promisc on</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建使用macvlan网络的容器</span></span><br><span class="line">docker run -it --network macvlan_1 --ip=10.0.0.200 busybox</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡七、Docker单机编排工具</title>
      <link href="/posts/c7b1e5e1.html"/>
      <url>/posts/c7b1e5e1.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker单机编排工具">Docker单机编排工具</h2><h3 id="1、docker-compose的介绍">1、<strong>docker-compose的介绍</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Compose是用于定义和运行多容器Docker应用工具通过Compose 可以使用YML文件来配置应用程序所需要的所有服务，用来管理容器的起停，查看容器的日志，比较方便</span><br><span class="line">不像docker run命令比较长，而且是临时执行的</span><br><span class="line"></span><br><span class="line">DockerCompose使用的三步:</span><br><span class="line">1.使用docker file 定义应用程序的环境镜像</span><br><span class="line">2.docker-compose定义构成应用程序的服务</span><br><span class="line">3.启动Compose，就相当于启动应用</span><br></pre></td></tr></table></figure><p><strong>版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">compose文件版本：version: <span class="string">&#x27;2.3&#x27;</span></span><br><span class="line"></span><br><span class="line">docker-compose程序安装的版本：</span><br><span class="line">[root@harbor harbor]# docker-compose --version</span><br><span class="line">docker-compose version 1.18.0, build 8dd22a9</span><br><span class="line"></span><br><span class="line">docker版本：</span><br><span class="line">[root@harbor harbor]# docker --version</span><br><span class="line">Docker version 26.1.4, build 5650f9b</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240909134745384.png" alt="image-20240909134745384"></p><h3 id="2、安装bocker-compose">2、<strong>安装bocker-compose</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：版本不可控，安装的版本稍微偏老  1.18的</span></span><br><span class="line">1、安装bocker-compose </span><br><span class="line">[root@docker01 ~]# yum install -y docker-compose</span><br><span class="line">[root@docker01 ~]# docker-compose --version</span><br><span class="line">docker-compose version 1.18.0, build 8dd22a9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、方法二  可能要开代理下载</span><br><span class="line">[root@docker02 bin]# curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/2.29.2/dockercompose-Linux-x86_64&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# <span class="built_in">mv</span> docker-compose-linux-x86_64\ \(2\)  docker-compose</span><br><span class="line">[root@docker01 ~]# <span class="built_in">mv</span> docker-compose /usr/local/bin/</span><br><span class="line">[root@docker01 ~]# <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose    </span><br><span class="line">[root@docker01 ~]# docker-compose  --version</span><br><span class="line">Docker Compose version v2.29.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#想要其他机器能够使用docker-compose命令,可以把这个文件scp过去</span></span><br><span class="line">scp /usr/local/bin/docker-compose 10.0.0.102:/usr/local/bin/</span><br></pre></td></tr></table></figure><h3 id="3、docker-compose的模版">3、<strong>docker-compose的模版</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;版本号&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  服务名称1:</span><br><span class="line">    image: 容器镜像</span><br><span class="line">    container_name: 容器名称(容器名称和服务名称保持一致)</span><br><span class="line">    environment:</span><br><span class="line">      - 环境变量1=值1</span><br><span class="line">      - 环境变量2=值2</span><br><span class="line">    volumes:</span><br><span class="line">      - 宿主机数据目录:容器内数据目录</span><br><span class="line">    ports:</span><br><span class="line">      - 宿主机端口:容器内映射端口</span><br><span class="line">    networks:</span><br><span class="line">      - 自定义网络名称</span><br><span class="line">    links:</span><br><span class="line">      - namenode</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - 数据库使用字符集变量时可以用</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  服务名称2:</span><br><span class="line">    image: 容器镜像</span><br><span class="line">    container_name: 容器名称(容器名称和服务名称保持一致)</span><br><span class="line">    environment:</span><br><span class="line">      - 环境变量1=值1</span><br><span class="line">      - 环境变量2=值2</span><br><span class="line">    user: 宿主机用户:容器用户</span><br><span class="line">    volumes:</span><br><span class="line">      - 宿主机数据目录:容器内数据目录</span><br><span class="line">    ports:</span><br><span class="line">      - 宿主机端口:容器内映射端口</span><br><span class="line">    networks:</span><br><span class="line">      - 自定义网络名称</span><br><span class="line">    links:</span><br><span class="line">      - namenode</span><br><span class="line">    depends_on:</span><br><span class="line">      - 依赖服务</span><br><span class="line">    restart: always</span><br><span class="line"> </span><br><span class="line"><span class="comment">#如果没有网络，就会自动创建</span></span><br><span class="line">networks:</span><br><span class="line">  default:</span><br><span class="line">  externnal: <span class="literal">true</span></span><br><span class="line">  name: 自定义网络名称</span><br></pre></td></tr></table></figure><h3 id="4、docker-compose——单机编排mysql">4、<strong>docker-compose——单机编排mysql</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">1、#找到运行mysql的命令</span><br><span class="line">docker run \</span><br><span class="line">--name mysql80 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=zabbix \</span><br><span class="line">-e MYSQL_USER=zabbix \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:8.0 \</span><br><span class="line">--character-set-server=utf8mb4 \</span><br><span class="line">--collation-server=utf8mb4_bin \</span><br><span class="line">--log_bin_trust_function_creators</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#编写docker-compose</span><br><span class="line">如果之前运行有其他版本的mysql，需要清除目录</span><br><span class="line">[root@docker01 mysql]# <span class="built_in">rm</span> -rf /data/</span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> mysql</span><br><span class="line">[root@docker01 ~]# <span class="built_in">cd</span> mysql/</span><br><span class="line">[root@docker01 mysql]# vim mysql-compose.yml    (名字最好叫docker-compose.yml)</span><br><span class="line">version: <span class="string">&#x27;2.0&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  mysql80:</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    container_name: mysql80</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=123</span><br><span class="line">      - MYSQL_DATABASE=zabbix</span><br><span class="line">      - MYSQL_USER=zabbix</span><br><span class="line">      - MYSQL_PASSWORD=123</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/mysql:/var/lib/mysql</span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - --character-set-server=utf8mb4</span><br><span class="line">      - --collation-server=utf8mb4_bin</span><br><span class="line">      - --log_bin_trust_function_creators</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#第一次启动使用up,会创建容器并启动容器,前台输出日志</span><br><span class="line">如果创建的文件名叫docker-compose.yml，启动命令是：</span><br><span class="line">      docker-compose up</span><br><span class="line">      </span><br><span class="line">如果创建的文件名不叫docker-compose.yml，启动命令是：</span><br><span class="line">[root@docker01 mysql]# docker-compose -f mysql-compose.yml up</span><br><span class="line"></span><br><span class="line">检查没问题就ctrl+c</span><br></pre></td></tr></table></figure><p>docker-compose的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一次启动创建容器并前台输出日志</span></span><br><span class="line">[root@docker01 mysql]# docker-compose -f mysql-compose.yml up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果日志没有报错，直接后台启动</span></span><br><span class="line">[root@docker01 mysql]# docker-compose -f mysql-compose.yml up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止容器</span></span><br><span class="line">[root@docker01 mysql]# docker-compose -f mysql-compose.yml stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">[root@docker01 mysql]# docker-compose -f mysql-compose.yml start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启容器</span></span><br><span class="line">[root@docker01 mysql]# docker-compose -f mysql-compose.yml restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看该compose中的所有容器运行状态</span></span><br><span class="line">[root@docker01 mysql]# docker-compose -f mysql-compose.yml ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除compose中的容器</span></span><br><span class="line">[root@docker01 mysql]# docker-compose <span class="built_in">rm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">[root@docker01 mysql]# docker-compose logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定服务启停</span></span><br><span class="line">[root@harbor harbor]# docker-compose start proxy</span><br></pre></td></tr></table></figure><h3 id="5、docker-compose——单机编排zabbix">5、<strong>docker-compose——单机编排zabbix</strong></h3><p>1、找到运行zabbix的docker命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mysql要初始化。所以web-server要后启动  写成=如果报错。就要写成key: value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、#找到运行mysql的命令</span><br><span class="line">docker run \</span><br><span class="line">--name mysql80 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=zabbix \</span><br><span class="line">-e MYSQL_USER=zabbix \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:8.0 \</span><br><span class="line">--character-set-server=utf8mb4 \</span><br><span class="line">--collation-server=utf8mb4_bin \</span><br><span class="line">--log_bin_trust_function_creators</span><br><span class="line"></span><br><span class="line">2、运行容器化zabbix-server</span><br><span class="line">docker run \</span><br><span class="line">--<span class="built_in">link</span> mysql80 \</span><br><span class="line">--name zabbix-server \</span><br><span class="line">-p 10051:10051 \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">&quot;mysql80&quot;</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">&quot;123&quot;</span> \</span><br><span class="line">-d zabbix/zabbix-server-mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、容器化zabbix-web</span><br><span class="line">docker run \</span><br><span class="line">--<span class="built_in">link</span> zabbix-server \</span><br><span class="line">--<span class="built_in">link</span> mysql80 \</span><br><span class="line">--name zabbix-web \</span><br><span class="line">-p 80:8080 \</span><br><span class="line">-p 8443:8443 \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">&quot;mysql80&quot;</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">&quot;123&quot;</span> \</span><br><span class="line">-e ZBX_SERVER_HOST=<span class="string">&quot;zabbix-server&quot;</span> \</span><br><span class="line">-e PHP_TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">-d zabbix/zabbix-web-nginx-mysql</span><br></pre></td></tr></table></figure><p>2、编写zabbix的docker-compose</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# <span class="built_in">rm</span> -rf /data/</span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> zabbix</span><br><span class="line">[root@docker01 ~]# <span class="built_in">cd</span> zabbix/</span><br><span class="line">[root@docker01 zabbix]# vim docker-compose.yml</span><br><span class="line">version: <span class="string">&#x27;2.0&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  mysql80:</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    container_name: mysql80</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=123</span><br><span class="line">      - MYSQL_DATABASE=zabbix</span><br><span class="line">      - MYSQL_USER=zabbix</span><br><span class="line">      - MYSQL_PASSWORD=123</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/mysql:/var/lib/mysql</span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - --character-set-server=utf8mb4</span><br><span class="line">      - --collation-server=utf8mb4_bin</span><br><span class="line">      - --log_bin_trust_function_creators</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  zabbix-server:</span><br><span class="line">    image: zabbix/zabbix-server-mysql</span><br><span class="line">    container_name: zabbix-server</span><br><span class="line">    environment:</span><br><span class="line">      - DB_SERVER_HOST=mysql80</span><br><span class="line">      - MYSQL_USER=zabbix</span><br><span class="line">      - MYSQL_PASSWORD=123</span><br><span class="line">    ports:</span><br><span class="line">      - 10051:10051</span><br><span class="line">    links:</span><br><span class="line">      - mysql80</span><br><span class="line">    restart: always</span><br><span class="line">    </span><br><span class="line">  zabbix-web:</span><br><span class="line">    image: zabbix/zabbix-web-nginx-mysql</span><br><span class="line">    container_name: zabbix-web</span><br><span class="line">    environment:</span><br><span class="line">      - DB_SERVER_HOST=mysql80</span><br><span class="line">      - MYSQL_USER=zabbix</span><br><span class="line">      - MYSQL_PASSWORD=123</span><br><span class="line">      - ZBX_SERVER_HOST=zabbix-server</span><br><span class="line">      - PHP_TZ=Asia/Shanghai</span><br><span class="line">    ports:</span><br><span class="line">      - 80:8080</span><br><span class="line">      - 443:8443</span><br><span class="line">    links:</span><br><span class="line">      - mysql80</span><br><span class="line">      - zabbix-server</span><br><span class="line">    restart: always</span><br><span class="line">    </span><br><span class="line"><span class="comment">#  networks:</span></span><br><span class="line"><span class="comment">#    default:</span></span><br><span class="line"><span class="comment">#      externnal: true</span></span><br><span class="line"><span class="comment">#      name: zabbix-net</span></span><br><span class="line"><span class="comment">#基于默认的default-bridge类型创建一个bridge类型的网桥</span></span><br></pre></td></tr></table></figure><p>####报错</p><p><img src="../image/study_img/image-20240909153932154.png" alt="image-20240909153932154"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 如果有环境变量的报错，就取消单引号试一下，不行再换成key:value格式</span></span><br><span class="line">environment:</span><br><span class="line">- DB_SERVER_HOST: <span class="string">&#x27;mysql80&#x27;</span></span><br><span class="line">- MYSQL_USER: <span class="string">&#x27;zabbix&#x27;</span></span><br><span class="line">- MYSQL_PASSWORD: <span class="string">&#x27;zabbix&#x27;</span></span><br></pre></td></tr></table></figure><p>3、启动zabbix</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、前台检查是否有报错</span><br><span class="line">[root@docker01 zabbix]# docker-compose up </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、没有报错就放后台运行</span><br><span class="line">[root@docker01 zabbix]# docker-compose up -d</span><br><span class="line"></span><br><span class="line">3、浏览器访问</span><br><span class="line">10.0.0.101</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240909154947402.png" alt="image-20240909154947402"></p><h3 id="6、docker-compose——单机编排jenkins">6、<strong>docker-compose——单机编排jenkins</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">1、gitlab镜像</span><br><span class="line">docker run \</span><br><span class="line">--hostname 10.0.0.102 \</span><br><span class="line">--<span class="built_in">env</span> GITLAB_OMNIBUS_CONFIG=<span class="string">&quot;external_url &#x27;http://10.0.0.102&#x27;&quot;</span> \</span><br><span class="line">-p 443:443 -p 80:80 -p 2222:22 \</span><br><span class="line">--name gitlab \</span><br><span class="line">--restart always \</span><br><span class="line">-v /data/gitlab/config:/etc/gitlab \</span><br><span class="line">-v /data/gitlab/logs:/var/log/gitlab \</span><br><span class="line">-v /data/gitlab/data:/var/opt/gitlab \</span><br><span class="line">-d gitlab/gitlab-ce</span><br><span class="line"></span><br><span class="line">2、运行jenkins容器</span><br><span class="line">docker run \</span><br><span class="line">--name jenkins \</span><br><span class="line">--privileged \</span><br><span class="line">--user=root \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /data/jenkins/:/var/jenkins_home \</span><br><span class="line">-v /usr/bin/docker:/usr/bin/docker \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">-v /root/.ssh/:/root/.ssh/ \</span><br><span class="line">-v /root/.docker/config.json:/root/.docker/config.json \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">-p 5000:5000 \</span><br><span class="line">-d jenkins/jenkins:2.422</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> jenkins &amp;&amp; <span class="built_in">cd</span> jenkins</span><br><span class="line">[root@docker01 jenkins]# vim jenkins-docker-compose.yml</span><br><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  gitlab:</span><br><span class="line">    image: gitlab/gitlab-ce</span><br><span class="line">    container_name: gitlab</span><br><span class="line">    hostname: 10.0.0.102</span><br><span class="line">    environment:</span><br><span class="line">      GITLAB_OMNIBUS_CONFIG: |</span><br><span class="line">        external_url <span class="string">&#x27;http://10.0.0.102</span></span><br><span class="line"><span class="string">        gitlab_rails[&#x27;</span>gitlab_shell_ssh_port<span class="string">&#x27;] = 2222 </span></span><br><span class="line"><span class="string">        alertmanager[&#x27;</span><span class="built_in">enable</span><span class="string">&#x27;] = false</span></span><br><span class="line"><span class="string">        node_exporter[&#x27;</span><span class="built_in">enable</span><span class="string">&#x27;] = false</span></span><br><span class="line"><span class="string">        redis_exporter[&#x27;</span><span class="built_in">enable</span><span class="string">&#x27;] = false</span></span><br><span class="line"><span class="string">        postgres_exporter[&#x27;</span><span class="built_in">enable</span><span class="string">&#x27;] = false</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - /data/gitlab/config:/etc/gitlab </span></span><br><span class="line"><span class="string">      - /data/gitlab/logs:/var/log/gitlab </span></span><br><span class="line"><span class="string">      - /data/gitlab/data:/var/opt/gitlab</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 443:443 </span></span><br><span class="line"><span class="string">      - 80:80 </span></span><br><span class="line"><span class="string">      - 2222:22</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">  jenkins:</span></span><br><span class="line"><span class="string">    image: jenkins/jenkins:2.422</span></span><br><span class="line"><span class="string">    container_name: jenkins</span></span><br><span class="line"><span class="string">    user: root</span></span><br><span class="line"><span class="string">    privileged: ture</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - /data/jenkins/:/var/jenkins_home</span></span><br><span class="line"><span class="string">      - /usr/bin/docker:/usr/bin/docker</span></span><br><span class="line"><span class="string">      - /var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line"><span class="string">      - /root/.ssh/:/root/.ssh/</span></span><br><span class="line"><span class="string">      - /root/.docker/config.json:/root/.docker/config.json</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8080:8080 </span></span><br><span class="line"><span class="string">      - 5000:5000 </span></span><br><span class="line"><span class="string">    restart: always</span></span><br></pre></td></tr></table></figure><h3 id="7、docker-compose——单机编排wordpress">7、<strong>docker-compose——单机编排wordpress</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行数据库</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wp_db \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行wordpress容器</span></span><br><span class="line">docker run \</span><br><span class="line">--name wp \</span><br><span class="line">--<span class="built_in">link</span> mysql57 \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-e WORDPRESS_DB_HOST=mysql57 \</span><br><span class="line">-e WORDPRESS_DB_USER=wp_user \</span><br><span class="line">-e WORDPRESS_DB_PASSWORD=123 \</span><br><span class="line">-e WORDPRESS_DB_NAME=wp_db \</span><br><span class="line">-d wordpress-df:v1 </span><br></pre></td></tr></table></figure><p>2、编写docker-compos</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> wp</span><br><span class="line">[root@docker01 ~]# <span class="built_in">cd</span> wp/</span><br><span class="line">[root@docker01 wp]# vim wp-docker-compose.yml</span><br><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  mysql57:</span><br><span class="line">    image: mysql:5.7.44</span><br><span class="line">    container_name: mysql57</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=123</span><br><span class="line">      - MYSQL_DATABASE=wp_db</span><br><span class="line">      - MYSQL_USER=wp_user</span><br><span class="line">      - MYSQL_PASSWORD=123</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/mysql:/var/lib/mysql</span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  wp:</span><br><span class="line">    image:  wordpress-df:v2</span><br><span class="line">    container_name: wp</span><br><span class="line">    environment:</span><br><span class="line">      - WORDPRESS_DB_HOST=mysql57</span><br><span class="line">      - WORDPRESS_DB_USER=wp_user</span><br><span class="line">      - WORDPRESS_DB_PASSWORD=123</span><br><span class="line">      - WORDPRESS_DB_NAME=wp_db</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    links:</span><br><span class="line">      - mysql57</span><br><span class="line">    restart: always</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">[root@docker01 wp]# docker-compose -f wp-docker-compose.yml up -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡六、docker的容器化代码上线</title>
      <link href="/posts/93124e7b.html"/>
      <url>/posts/93124e7b.html</url>
      
        <content type="html"><![CDATA[<h2 id="容器化代码上线">容器化代码上线</h2><h3 id="1、容器化gitlab"><strong>1、容器化gitlab</strong></h3><p>环境准备  先检查可以内存Avail(最少还有10G)比较多的机器，去拉取gitlab，不然会拉取失败</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th><th>内存</th></tr></thead><tbody><tr><td>docker03</td><td>10.0.0.102  /  172.16.1.102</td><td>部署容器化gitlab</td><td>8G</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 容器化代码上线坑：</span></span><br><span class="line">1.gitlab如何使用非22端口拉代码</span><br><span class="line">2.jenkins容器如何使用docker命令</span><br><span class="line">3.jenkins的密钥上传到gitlab</span><br><span class="line">4.jenkins如何登录 harbor</span><br><span class="line"></span><br><span class="line">开发把代码提交到gitlab，jekins去拉取代码到容器里面</span><br></pre></td></tr></table></figure><p>容器化代码上线流程图</p><p><img src="../image/study_img/image-20240905093733661.png" alt="image-20240905093733661"></p><p>1、去官网查找运行容器的代码  <a href="https://about.gitlab.com/">https://about.gitlab.com/</a></p><p><img src="../image/study_img/image-20240907130711368.png" alt="image-20240907130711368"></p><p>往下滑 找到容器安装</p><p><img src="../image/study_img/image-20240907130745739.png" alt="image-20240907130745739"></p><p><img src="../image/study_img/image-20240907131037286.png" alt="image-20240907131037286"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">1、拉取镜像   Git-ce 是社区版，gitlab-ee是企业版，收费的。</span><br><span class="line">[root@docker02 ~]# docker pull gitlab/gitlab-ce:latest</span><br><span class="line"></span><br><span class="line">2、运行镜像</span><br><span class="line">docker run \</span><br><span class="line">--hostname 10.0.0.102 \</span><br><span class="line">--<span class="built_in">env</span> GITLAB_OMNIBUS_CONFIG=<span class="string">&quot;external_url &#x27;http://10.0.0.102&#x27;&quot;</span> \</span><br><span class="line">-p 443:443 -p 80:80 -p 2222:22 \</span><br><span class="line">--name gitlab \</span><br><span class="line">--restart always \</span><br><span class="line">-v /data/gitlab/config:/etc/gitlab \</span><br><span class="line">-v /data/gitlab/logs:/var/log/gitlab \</span><br><span class="line">-v /data/gitlab/data:/var/opt/gitlab \</span><br><span class="line">-d gitlab/gitlab-ce</span><br><span class="line"></span><br><span class="line">-p 2222:22  宿主机的22端口被占用了，所有使用宿主机的2222端口</span><br><span class="line">--detach=-d</span><br><span class="line"></span><br><span class="line">3、运行之后，执行</span><br><span class="line">[root@docker02 ~]# docker ps</span><br><span class="line">可能一开始看不到运行结果，因为镜像比较大，运行起来比较慢，后面还要做优化，先进入容器里面，查看启动状态</span><br><span class="line">[root@docker02 ~]# docker <span class="built_in">exec</span> -it gitlab /bin/bash</span><br><span class="line">root@10:/# gitlab-ctl status</span><br><span class="line">run: alertmanager: (pid 1281) 314s; run: <span class="built_in">log</span>: (pid 1008) 429s</span><br><span class="line">run: gitaly: (pid 1231) 318s; run: <span class="built_in">log</span>: (pid 559) 642s</span><br><span class="line">run: gitlab-exporter: (pid 1219) 319s; run: <span class="built_in">log</span>: (pid 939) 448s</span><br><span class="line">run: gitlab-kas: (pid 751) 626s; run: <span class="built_in">log</span>: (pid 768) 623s</span><br><span class="line">run: gitlab-workhorse: (pid 1155) 321s; run: <span class="built_in">log</span>: (pid 885) 461s</span><br><span class="line">run: logrotate: (pid 502) 655s; run: <span class="built_in">log</span>: (pid 514) 653s</span><br><span class="line">run: nginx: (pid 1169) 320s; run: <span class="built_in">log</span>: (pid 917) 455s</span><br><span class="line">run: postgres-exporter: (pid 1289) 314s; run: <span class="built_in">log</span>: (pid 1032) 420s</span><br><span class="line">run: postgresql: (pid 583) 632s; run: <span class="built_in">log</span>: (pid 594) 631s</span><br><span class="line">run: prometheus: (pid 1238) 318s; run: <span class="built_in">log</span>: (pid 984) 437s</span><br><span class="line">run: puma: (pid 835) 474s; run: <span class="built_in">log</span>: (pid 842) 473s</span><br><span class="line">run: redis: (pid 519) 649s; run: <span class="built_in">log</span>: (pid 532) 647s</span><br><span class="line">run: redis-exporter: (pid 1221) 319s; run: <span class="built_in">log</span>: (pid 968) 441s</span><br><span class="line">run: sidekiq: (pid 852) 468s; run: <span class="built_in">log</span>: (pid 860) 467s</span><br><span class="line">run: sshd: (pid 37) 676s; run: <span class="built_in">log</span>: (pid 36) 676s</span><br><span class="line"></span><br><span class="line">4、看到nginx服务起来了，就可以访问网页</span><br><span class="line">10.0.0.102</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240907152247060.png" alt="image-20240907152247060"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">登录的用户名是root</span><br><span class="line"></span><br><span class="line">5、查看gitlab的初始密码</span><br><span class="line">[root@docker02 ~]# docker <span class="built_in">exec</span> -it gitlab grep <span class="string">&#x27;Password:&#x27;</span> /etc/gitlab/initial_root_password</span><br><span class="line">Password: dUs0tOCn+nDOkWoShlwCvYYWlnIZUwaiBujL9BkO2TU=</span><br></pre></td></tr></table></figure><p>6、创建一个项目</p><p><img src="../image/study_img/image-20240907153032437.png" alt="image-20240907153032437"></p><p><img src="../image/study_img/image-20240907153123588.png" alt="image-20240907153123588"></p><p><img src="../image/study_img/image-20240907155134996.png" alt="image-20240907155134996"></p><p>7、拉取代码：目前项目创建完成后，使用其他机器拉取代码，无法拉取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、拉取代码的机器需要安装git</span><br><span class="line">[root@docker01 ~]# yum -y install git</span><br><span class="line"></span><br><span class="line">2、生成密钥对，配置到gitlab仓库</span><br><span class="line">[root@docker01 ~]# ssh-keygen</span><br><span class="line">[root@docker01 ~]# <span class="built_in">cat</span> ~/.ssh/id_rsa.pub </span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQrHuOoZahkYpkUthbzbVLMH3ijST4TSPGuKWm77QBIredxGGKpoq2TN71pysOPUiGUKpBQnttyfo5AOealp0knNFuxqiShcRa8IlJQMX6mJfVFrY6jI5g/AnDvIayurVVBsf6T7h6sQNV8Pj4bzGpO8PXi8Z8GGslZ2LbmqA+LsfLLX/KR3BJce4JC/0PsK4DqAVO/WVYd7H0qeSUK5arrnpt7ncYVx02k63KI47Tb4W+nyqhlChwxD55V3ArzbvVpQy3BnRoOQQ5cr7le6HP+kl27jHTxCNJ7bf5uU1O4Polc3ODBkq2gZC9JaN6O8RuyB2UeCe5odVYOmxb5IKJ root@docker01</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240907154118623.png" alt="image-20240907154118623"></p><p><img src="../image/study_img/image-20240907154153334.png" alt="image-20240907154153334"></p><p><img src="../image/study_img/image-20240907154228630.png" alt="image-20240907154228630"></p><p>修改为中文字体，再刷新</p><p><img src="../image/study_img/image-20240907154846257.png" alt="image-20240907154846257"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1、使用这个命令拉取代码时，还需要输入密码，所以配置的ssh密钥对到gitlab时是不太行的</span><br><span class="line">[root@docker01 ~]# git <span class="built_in">clone</span> git@10.0.0.102:root/web.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#gitlab使用非22端口拉代码</span><br><span class="line">[root@docker01 ~]# git <span class="built_in">clone</span> ssh://git@10.0.0.102:2222/root/web.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、由于每次拉取代码都要输入协议和端口，效率不高，可以修改配置文件设置自动出现协议和端口，直接复制</span><br><span class="line"><span class="comment">#修改配置文件和做gitlab的优化</span></span><br><span class="line">由于配置文件已经映射出来了，直接修改</span><br><span class="line">[root@docker02 ~]# vim /data/gitlab/config/gitlab.rb</span><br><span class="line"><span class="comment">#32行：url的配置</span></span><br><span class="line">external_url <span class="string">&#x27;http://10.0.0.102&#x27;</span>  </span><br><span class="line"><span class="comment"># 698行：端口的配置</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_shell_ssh_port&#x27;</span>] = 2222 </span><br><span class="line"><span class="comment">###优化内容  把这几行加入配置文件</span></span><br><span class="line"><span class="comment">#告警关闭</span></span><br><span class="line">alertmanager[<span class="string">&#x27;enable&#x27;</span>] = <span class="literal">false</span></span><br><span class="line"><span class="comment">#关闭前端的node功能</span></span><br><span class="line">node_exporter[<span class="string">&#x27;enable&#x27;</span>] = <span class="literal">false</span></span><br><span class="line"><span class="comment">#关闭redis功能</span></span><br><span class="line">redis_exporter[<span class="string">&#x27;enable&#x27;</span>] = <span class="literal">false</span></span><br><span class="line"><span class="comment">#关闭postgre功能</span></span><br><span class="line">postgres_exporter[<span class="string">&#x27;enable&#x27;</span>] = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、重新加载gitlab配置文件，需要等待3分钟左右</span><br><span class="line">[root@docker02 ~]# docker <span class="built_in">exec</span> -it gitlab gitlab-ctl reconfigure</span><br><span class="line">reconfigure相当于nginx的reload，还是可以正常访问网页的</span><br><span class="line"></span><br><span class="line">5、再次访问网页，刷新页面，可以看到提供的地址是直接可以使用的地址</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240907162925699.png" alt="image-20240907162925699"></p><h3 id="2、容器化jenkins"><strong>2、容器化jenkins</strong></h3><p>访问官网，找到启动容器的命令：<a href="https://www.jenkins.io/">https://www.jenkins.io/</a></p><p><img src="../image/study_img/image-20240907163455778.png" alt="image-20240907163455778"></p><p><img src="../image/study_img/image-20240907163613722.png" alt="image-20240907163613722"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">--name jenkins-docker \</span><br><span class="line">--<span class="built_in">rm</span> \</span><br><span class="line">--detach \</span><br><span class="line">--privileged \</span><br><span class="line">--network jenkins \    <span class="comment">#网络没有配置，需要删除</span></span><br><span class="line">--network-alias docker \ <span class="comment">#网络没有配置，需要删除</span></span><br><span class="line">--<span class="built_in">env</span> DOCKER_TLS_CERTDIR=/certs \  <span class="comment">#没有证书，需要删除</span></span><br><span class="line">--volume jenkins-docker-certs:/certs/client \ <span class="comment">#没有证书，需要删除</span></span><br><span class="line">--volume jenkins-data:/var/jenkins_home \  <span class="comment">#映射的jenkins目录</span></span><br><span class="line">--publish 2376:2376 \</span><br><span class="line">docker:dind \</span><br><span class="line">--storage-driver overlay2</span><br></pre></td></tr></table></figure><p>到docker官网，找到jenkins镜像  <a href="https://hub.docker.com/">https://hub.docker.com/</a></p><p><img src="../image/study_img/image-20240907164947184.png" alt="image-20240907164947184"></p><p><img src="../image/study_img/image-20240907165448303.png" alt="image-20240907165448303"></p><p><img src="../image/study_img/image-20240907165642490.png" alt="image-20240907165642490"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">1、拉取2.422版本的镜像</span><br><span class="line">[root@docker02 ~]# docker pull jenkins/jenkins:2.422</span><br><span class="line"></span><br><span class="line">2、运行jenkins容器</span><br><span class="line">docker run \</span><br><span class="line">--name jenkins \</span><br><span class="line">--privileged \</span><br><span class="line">--user=root \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /data/jenkins/:/var/jenkins_home \</span><br><span class="line">-v /usr/bin/docker:/usr/bin/docker \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">-v /root/.ssh/:/root/.ssh/ \</span><br><span class="line">-v /root/.docker/config.json:/root/.docker/config.json \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">-p 5000:5000 \</span><br><span class="line">-d jenkins/jenkins:2.422</span><br><span class="line"></span><br><span class="line">--<span class="built_in">rm</span>：只要容器停止就会删掉</span><br><span class="line">--user=root：jenkins需要root用户去启动，不然运行之后docker <span class="built_in">log</span> -f jenkins查看日志都会没有权限</span><br><span class="line">--privileged：相当于zabbix需要监控宿主机，想要有权限就需要这个参数，还可以让容器有权限能使用宿主机上的docker命令</span><br><span class="line">docker容器想要使用宿主机的命令就是docker <span class="keyword">in</span> docker</span><br><span class="line">-v /usr/bin/docker：将宿主机的docker命令映射，容器里面就可以执行docker ps..</span><br><span class="line">-v /var/run/docker.sock：docker的命令通过sockt连接的，需要映射sock文件，由于容器里面没有sock文件，不然执行docker命令会报错</span><br><span class="line"><span class="comment">#解决jenkins生成密钥到gitlab,如果在容器里面生成密钥对，万一jenkins宕机了，在重新生成密钥对，之前放到gitlab里面的密钥对就不能使用了，为了密钥对持久化，需要在宿主机上生成密钥对，映射到容器</span></span><br><span class="line">[root@docker02 ~]# ssh-keygen</span><br><span class="line">-v /root/.ssh：将宿主机的密钥对映射到容器</span><br><span class="line">-v /root/.docker/config.json：将登录harbor的认证信息映射，容器就可以推送镜像到harbor</span><br><span class="line"></span><br><span class="line">3、上传插件</span><br><span class="line"></span><br><span class="line">4、解压插件</span><br><span class="line">[root@docker02 ~]# tar xf jenkins_plugins_2.422.tgz -C /data/jenkins/</span><br><span class="line"></span><br><span class="line">5、再重新启动jenkins</span><br><span class="line">[root@docker02 ~]# docker restart jenkins</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、浏览器访问网页</span><br><span class="line">10.0.0.102:8080</span><br><span class="line"></span><br><span class="line">7、查看密码</span><br><span class="line">[root@docker02 ~]# docker <span class="built_in">exec</span> -it jenkins <span class="built_in">cat</span> /var/jenkins_home/secrets/initialAdminPassword</span><br><span class="line">3766efc193fe418f9256897f39840929</span><br><span class="line"></span><br><span class="line">由于/var/jenkins_home目录已经映射出来在宿主机上已经持久化了，还可以这样查看密码文件</span><br><span class="line">[root@docker02 ~]# <span class="built_in">cat</span> /data/jenkins/secrets/initialAdminPassword </span><br><span class="line">3766efc193fe418f9256897f39840929</span><br><span class="line"></span><br><span class="line">然后出现安装jenkins插件的页面之间，不要安装插件，直接点击右上角的×——&gt;点击开始使用jenkins</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240907175615967.png" alt="image-20240907175615967"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">8、将搭建了jenkins服务器的公钥放到gitlab服务器</span><br><span class="line">[root@docker02 ~]# <span class="built_in">cat</span> .ssh/id_rsa.pub </span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPOMkDhGerkcJCwv55/6B4vTtzY0gxDKDYibzGUHX18AKgN8eZUBQVyub/mLmhBYlPWBIlb8x1xzNqH6N+kt/aIp03KheYAJBk26Npc8vtVEh009kf9DU3q4QopDrbKOmaF21/0LZ+ZVsAT0AmPKVH8pWodOv9O8aoXoVZe+uxAD+nItopJ6bnDzalKLEeVadtGZqm4k+AZRY2W7bZFUlss6WEKB2DLWfnf4FkIkDBQqLTPOS8ovB4U9gEBqN0vRFGI9qa1dDE4I9bK3ISKWBLR1yzV5wA4ARszXuj4t/nEP71qWfdi3vi9xdYvWStGdWa487nIFgi7s96ix9g8QBD root@docker02</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240907182329531.png" alt="image-20240907182329531"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">9、jenkins机器拉取gitlab里面的代码</span><br><span class="line">进入jenkins容器</span><br><span class="line">[root@docker02 ~]# docker <span class="built_in">exec</span> -it jenkins /bin/bash</span><br><span class="line"></span><br><span class="line">10、拉取代码</span><br><span class="line">root@126b61b9d225:/# git <span class="built_in">clone</span> ssh://git@10.0.0.102:2222/root/web.git</span><br><span class="line">输入<span class="built_in">yes</span>，不需要输入密码，直接免密拉取代码</span><br></pre></td></tr></table></figure><h3 id="3、测试将jenkins里面的镜像推送到Harbor图形化镜像仓库"><strong>3、测试将jenkins里面的镜像推送到Harbor图形化镜像仓库</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、进入jenkins容器</span><br><span class="line">[root@docker02 ~]# docker <span class="built_in">exec</span> -it jenkins /bin/bash</span><br><span class="line">root@126b61b9d225:/# docker images</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、将镜像改名</span><br><span class="line">root@126b61b9d225:/# docker tag wordpress:v7 172.16.1.76/wordpress/wordpress-jenkins-harbor:v7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、推送镜像   报错，是因为需要登录，但是每次重启都需要登录</span><br><span class="line">root@126b61b9d225:/# docker push 172.16.1.76/wordpress/wordpress-jenkins-harbor:v7</span><br><span class="line">unauthorized: unauthorized to access repository: wordpress/wordpress-jenkins-harbor, action: push: unauthorized to access repository: wordpress/wordpress-jenkins-harbor, action: push</span><br><span class="line"></span><br><span class="line">4、检查宿主机是否能够推送</span><br><span class="line">[root@docker02 ~]# docker push 172.16.1.76/wordpress/wordpress-jenkins-harbor:v7</span><br><span class="line">unauthorized: unauthorized to access repository: wordpress/wordpress-jenkins-harbor, action: push: unauthorized to access repository: wordpress/wordpress-jenkins-harbor, action: push</span><br><span class="line"></span><br><span class="line">5、宿主机不能推送，需要登录harbor</span><br><span class="line">[root@docker01 ~]# docker login 172.16.1.76</span><br><span class="line">Username: admin</span><br><span class="line">Password:  <span class="comment">#密码：Harbor12345</span></span><br><span class="line">......</span><br><span class="line">Login Succeeded</span><br><span class="line"></span><br><span class="line">6、宿主机正常推送  推送成功</span><br><span class="line">[root@docker02 ~]# docker push 172.16.1.76/wordpress/wordpress-jenkins-harbor:v7</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240907210452739.png" alt="image-20240907210452739"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">7、宿主机能够推送镜像，但是容器不一定能推，因为容器也是需要login登录的，但是这里不需要容器登录</span><br><span class="line">宿主机登录了之后，会有一个认证信息做出一个文件保存到~/.docker/config.json</span><br><span class="line">[root@docker02 ~]# ll -a ~/.docker/config.json </span><br><span class="line">-rw------- 1 root root 139 Sep  7 21:02 /root/.docker/config.json</span><br><span class="line">[root@docker02 ~]# <span class="built_in">cat</span> ~/.docker/config.json</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">&quot;auths&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;10.0.0.76&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;auth&quot;</span>: <span class="string">&quot;YWRtaW46SGFyYm9yMTIzNDU=&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;172.16.1.76&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;auth&quot;</span>: <span class="string">&quot;YWRtaW46SGFyYm9yMTIzNDU=&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">#所以，是需要在启动jenkins的时候，将认证信息的文件映射，这样jenkins容器就可以推送镜像到Harbor从库，在运行的时候我已经加上这个文件映射了的，只要我的宿主机登录过，我的jenkins容器可以推送</span></span><br></pre></td></tr></table></figure><h3 id="4、jenkins容器构建代码上线——自由风格"><strong>4、jenkins容器构建代码上线——自由风格</strong></h3><p>1、测试构建</p><p><img src="../image/study_img/image-20240907230455222.png" alt="image-20240907230455222"></p><p><img src="../image/study_img/image-20240907234349843.png" alt="image-20240907234349843"></p><p>复制代码地址</p><p><img src="../image/study_img/image-20240907234446792.png" alt="image-20240907234446792"></p><p><img src="../image/study_img/image-20240907234558247.png" alt="image-20240907234558247"></p><p><img src="../image/study_img/image-20240908000318150.png" alt="image-20240908000318150"></p><p>执行构建，构建成功</p><p><img src="../image/study_img/image-20240908000821406.png" alt="image-20240908000821406"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、#拉取后代码存放的目录</span><br><span class="line">[root@docker02 ~]# ll /data/jenkins/workspace/web-frestlye/</span><br><span class="line">-rw-r--r-- 1 root root    7 Sep  8 00:06 index.html</span><br><span class="line">-rw-r--r-- 1 root root 6141 Sep  8 00:06 README.md</span><br><span class="line"></span><br><span class="line">2、#免密web服务器</span><br><span class="line">[root@docker02 ~]# ssh-copy-id -i ~/.ssh/id_rsa.pub root@172.16.1.101</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;WORKSPACE&#125;</span></span><br><span class="line">/var/jenkins_home/workspace/web-frestlye</span><br></pre></td></tr></table></figure><p>2、写脚本构建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">harbor_ip=172.16.1.76</span><br><span class="line">web_ip=172.16.1.101</span><br><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;WORKSPACE&#125;</span>/Dockerfile &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">FROM nginx:alpine</span></span><br><span class="line"><span class="string">#将网页代码复制到nginx的站点目录下</span></span><br><span class="line"><span class="string">COPY index.html /usr/share/nginx/html/</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="comment">#进入工作目录构建镜像</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span> &amp;&amp; \</span><br><span class="line">docker build -t <span class="variable">$&#123;harbor_ip&#125;</span>/wordpress/web-frestlye:v1 .</span><br><span class="line"><span class="comment">#打完镜像后推送到Harbor仓库</span></span><br><span class="line">docker push <span class="variable">$&#123;harbor_ip&#125;</span>/wordpress/web-frestlye:v1</span><br><span class="line"><span class="comment">#连接到web服务器把镜像从harbor拉下来,注意jenkins机器要和web免密</span></span><br><span class="line">ssh root@<span class="variable">$&#123;web_ip&#125;</span> <span class="string">&quot;docker pull <span class="variable">$&#123;harbor_ip&#125;</span>/wordpress/web-frestlye:v1&quot;</span></span><br><span class="line"><span class="comment">#删除之前旧的web镜像</span></span><br><span class="line">ssh root@<span class="variable">$&#123;web_ip&#125;</span> <span class="string">&quot;docker rm -f web&quot;</span></span><br><span class="line"><span class="comment">#在web服务器部署nginx网页代码</span></span><br><span class="line">ssh root@<span class="variable">$&#123;web_ip&#125;</span> <span class="string">&quot;docker run --name web -p 80:80 -d <span class="variable">$&#123;harbor_ip&#125;</span>/wordpress/web-frestlye:v1&quot;</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240908230050715.png" alt="image-20240908230050715"></p><p><img src="../image/study_img/image-20240908230246558.png" alt="image-20240908230246558"></p><h3 id="5、jenkins容器构建代码上线——参数化构建"><strong>5、jenkins容器构建代码上线——参数化构建</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、第一版</span><br><span class="line">[root@docker02 ~]# <span class="built_in">mkdir</span> /web</span><br><span class="line">[root@docker02 ~]# <span class="built_in">cd</span> /web</span><br><span class="line">[root@docker02 web]# git init /web</span><br><span class="line">[root@docker02 web]# vim index.html</span><br><span class="line">[root@docker02 web]# vim src.js</span><br><span class="line">[root@docker02 web]# git add .</span><br><span class="line">[root@docker02 web]#  git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line">[root@docker02 web]# git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">[root@docker02 web]# git commit -m <span class="string">&#x27;官网v1.0&#x27;</span></span><br><span class="line">[root@docker02 web]#  git tag -a <span class="string">&#x27;v1&#x27;</span>  -m <span class="string">&quot;官网v1.0&quot;</span></span><br><span class="line">[root@docker02 web]# git remote add origin ssh://git@10.0.0.102:2222/root/web-website.git</span><br><span class="line">[root@docker02 web]# git push --all</span><br><span class="line">[root@docker02 web]# git push --tag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、第二版</span><br><span class="line">[root@docker02 web]# vim src.js</span><br><span class="line">[root@docker02 web]# git add .</span><br><span class="line">[root@docker02 web]# git commit -m <span class="string">&#x27;官网v2.0&#x27;</span></span><br><span class="line">[root@docker02 web]# git tag -a <span class="string">&#x27;v2&#x27;</span>  -m <span class="string">&quot;官网v2.0&quot;</span></span><br><span class="line">[root@docker02 web]# git push --all</span><br><span class="line">[root@docker02 web]# git push --tag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">代码不需要软连接了。已经容器部署了，代码可以随便删除</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240909172701792.png" alt="image-20240909172701792"></p><p><img src="../image/study_img/image-20240909224852871.png" alt="image-20240909224852871"></p><p><img src="../image/study_img/image-20240909224914742.png" alt="image-20240909224914742"></p><p><img src="../image/study_img/image-20240909224936189.png" alt="image-20240909224936189"></p><p><img src="../image/study_img/image-20240909225006620.png" alt="image-20240909225006620"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">harbor_ip=172.16.1.76</span><br><span class="line">project_name=<span class="string">&#x27;wordpress&#x27;</span></span><br><span class="line">pkg_name=<span class="string">&#x27;$&#123;harbor_ip&#125;/$&#123;project_name&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;WORKSPACE&#125;</span>/Dockerfile &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">FROM nginx:alpine</span></span><br><span class="line"><span class="string">#将网页代码复制到nginx的站点目录下</span></span><br><span class="line"><span class="string">COPY ./* /usr/share/nginx/html/</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#进入工作目录构建镜像</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span> &amp;&amp; \</span><br><span class="line">docker build -t <span class="variable">$&#123;pkg_name&#125;</span>/web-frestlye:<span class="variable">$&#123;git_tag&#125;</span> .</span><br><span class="line"><span class="comment">#打完镜像后推送到Harbor仓库</span></span><br><span class="line">docker push <span class="variable">$pkg_name</span>&#125;/web-frestlye:<span class="variable">$&#123;git_tag&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">deploy</span></span> () &#123;</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="variable">$@</span> ;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#连接到web服务器把镜像从harbor拉下来,注意jenkins机器要和web免密</span></span><br><span class="line">ssh root@172.16.1.<span class="variable">$&#123;n&#125;</span> <span class="string">&quot;docker pull <span class="variable">$&#123;harbor_ip&#125;</span>/wordpress/web-frestlye:<span class="variable">$&#123;git_tag&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#删除之前旧的web镜像</span></span><br><span class="line">ssh root@172.16.1.<span class="variable">$&#123;n&#125;</span> <span class="string">&quot;docker rm -f web&quot;</span></span><br><span class="line"><span class="comment">#在web服务器部署nginx网页代码</span></span><br><span class="line">ssh root@172.16.1.<span class="variable">$&#123;n&#125;</span> <span class="string">&quot;docker run --name web -p 80:80 -d <span class="variable">$&#123;harbor_ip&#125;</span>/wordpress/web-frestlye:<span class="variable">$&#123;git_tag&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$env</span> <span class="keyword">in</span></span><br><span class="line">dev)</span><br><span class="line"><span class="comment">#给函数传参数 传递机器的ip</span></span><br><span class="line">   deploy 101</span><br><span class="line">   ;;</span><br><span class="line">prod)</span><br><span class="line">   deploy 103</span><br><span class="line">   ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240909225041225.png" alt="image-20240909225041225"></p><h3 id="6、jenkins容器构建代码上线——MAVEN项目构建"><strong>6、jenkins容器构建代码上线——MAVEN项目构建</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">1、哪台机器需要部署java代码，到docker官网拉取tomcat</span><br><span class="line">docker pull tomcat:alpine </span><br><span class="line">需要先手动编译代码，下载maven</span><br><span class="line">yum -y install maven</span><br><span class="line"></span><br><span class="line">2、下载java代码helloword</span><br><span class="line"></span><br><span class="line">3、运行tmocat</span><br><span class="line">docker run -p 8080:8080 -d tomcat:alpine </span><br><span class="line"></span><br><span class="line">改Maven源。换成阿里云的源</span><br><span class="line">vim</span><br><span class="line"></span><br><span class="line">构建  构建完成之后会生成一个target目录</span><br><span class="line">maven pakage</span><br><span class="line"><span class="built_in">cd</span> target/hellowrd</span><br><span class="line">tar zcf hello-1.0.0.tgz</span><br><span class="line"></span><br><span class="line">vim Dockerfile</span><br><span class="line">FROM tomcat:alpine </span><br><span class="line">RUN <span class="built_in">rm</span> -rf /usr/local/tomcat/webapps/ROOT/*</span><br><span class="line">ADD hello-1.0.0.tgz /usr/local/tomcat/webapps/ROOT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker build -t 172.16.1.76/wordpress/hello:v1 .</span><br><span class="line">docker run -p 8080:8080 -d 172.16.1.76/wordpress/hello:v1</span><br><span class="line"></span><br><span class="line">目前访问的时候要加上目录，tomcat前面会加上nginx做代理，代理这个目录</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240909092954321.png" alt="image-20240909092954321"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#jenkins机器</span></span><br><span class="line">起宿主机把maven映射进去  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Jenkins时区不对，差8个小时，解决方案</span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it -u root jenkins bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改容器时区</span></span><br><span class="line"><span class="built_in">echo</span>  <span class="string">&#x27;Asia/Shanghai&#x27;</span> &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看修改后的容器时区</span></span><br><span class="line"><span class="built_in">cat</span> /etc/timezone</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启jenkins容器</span></span><br><span class="line">docker restart jenkins</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果觉得Jenkins占用内存过大,我们可以采用下面的方式限制ienkins占用内存大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker限制内存大小</span></span><br><span class="line">docker update jenkins -m 3g --memory-swap -1</span><br><span class="line"></span><br><span class="line">--memory 或-m 限制容器的内存使用量</span><br><span class="line">--memory-swap 限制内存和swap的总和，不设置的话默认为--memory的两倍</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡五、Docker的图形化Portainer</title>
      <link href="/posts/812941c2.html"/>
      <url>/posts/812941c2.html</url>
      
        <content type="html"><![CDATA[<h3 id="Docker的图形化Portainer">Docker的图形化Portainer</h3><p>启动Portainer     坡泰了</p><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>elk1</td><td>10.0.0.76  /  172.16.1.76</td><td>图形化portainer</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@elk1 harbor]# docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock --restart=always --name portainer portainer/portainer</span><br><span class="line"></span><br><span class="line">2、浏览器访问</span><br><span class="line">http://10.0.0.76:9000/</span><br><span class="line"></span><br><span class="line">3、登录进去可能回提示portainer超时，需要重启</span><br><span class="line">[root@elk1 harbor]# docker restart  portainer</span><br><span class="line">portainer</span><br><span class="line"></span><br><span class="line">4、重启之后再访问页面，进去刷新，设置初始密码 12位的</span><br><span class="line">aaaaaa111111</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240906175708573.png" alt="image-20240906175708573"></p><p>5、查看本地的docker</p><p><img src="../image/study_img/image-20240906175929805.png" alt="image-20240906175929805"></p><p><img src="../image/study_img/image-20240906180028688.png" alt="image-20240906180028688"></p><p>此处可以启动容器</p><p><img src="../image/study_img/image-20240906180212414.png" alt="image-20240906180212414"></p><p>6、测试拉取一个镜像并启动</p><p><img src="../image/study_img/image-20240906180900453.png" alt="image-20240906180900453"></p><p><img src="../image/study_img/image-20240906180924462.png" alt="image-20240906180924462"></p><p>等待一会，显示拉取镜像并启动成功，跳转到容器启动的页面，并且在命令行主可以查看到已拉取成功，启动成功</p><p><img src="../image/study_img/image-20240906181242551.png" alt="image-20240906181242551"></p><p><img src="../image/study_img/image-20240906181309969.png" alt="image-20240906181309969"></p><p>7、查看所有镜像</p><p><img src="../image/study_img/image-20240906181607353.png" alt="image-20240906181607353"></p><p>8、测试拉取镜像</p><p><img src="../image/study_img/image-20240906181951743.png" alt="image-20240906181951743"></p><p>9、挂载目录的页面</p><p><img src="../image/study_img/image-20240906182154901.png" alt="image-20240906182154901"></p><p>10、事件的查看，哪个容器退出了，查看日志</p><p><img src="../image/study_img/image-20240906182246878.png" alt="image-20240906182246878"></p><p>12、查看物理机的信息</p><p><img src="../image/study_img/image-20240906182322538.png" alt="image-20240906182322538"></p><p>13、添加自己的镜像仓库。拉取容器的时候就去自己创建的仓库里面拉取</p><p><img src="../image/study_img/image-20240906182455490.png" alt="image-20240906182455490"></p><p><img src="../image/study_img/image-20240906182652673.png" alt="image-20240906182652673"></p><p>添加之后，如果想拉取自己仓库里面的容器，就这样选择</p><p><img src="../image/study_img/image-20240906182823018.png" alt="image-20240906182823018"></p><p>拉取harbor里面的容器</p><p><img src="../image/study_img/image-20240906182929405.png" alt="image-20240906182929405"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#portainer需要信任harbor的地址</span></span><br><span class="line">[root@elk1 harbor]# vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.1panel.live&quot;</span>, <span class="string">&quot;https://hub.rat.dev/&quot;</span>, <span class="string">&quot;https://docker.chenby.cn&quot;</span>, <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>],</span><br><span class="line"><span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;http://10.0.0.76&quot;</span>,<span class="string">&quot;http://172.16.1.101:5000&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@elk1 harbor]# systemctl restart docker</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240906183541971.png" alt="image-20240906183541971"></p><p>14、管理docker01 ~ 03机器的镜像</p><p><img src="../image/study_img/image-20240906183926754.png" alt="image-20240906183926754"></p><p><img src="../image/study_img/image-20240906184008628.png" alt="image-20240906184008628"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在想要管理的docker机器执行这个命令</span></span><br><span class="line">docker run -d \</span><br><span class="line">  -p 9001:9001 \</span><br><span class="line">  --name portainer_agent \</span><br><span class="line">  --restart=always \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  -v /var/lib/docker/volumes:/var/lib/docker/volumes \</span><br><span class="line">  portainer/agent:2.16.2</span><br><span class="line">  </span><br><span class="line"><span class="comment">#重启docker</span></span><br><span class="line">  systemctl restart docker</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240906185043251.png" alt="image-20240906185043251"></p><p><img src="../image/study_img/image-20240906185302712.png" alt="image-20240906185302712"></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡四、docker的网络与Harbor镜像仓库</title>
      <link href="/posts/5c6d7d69.html"/>
      <url>/posts/5c6d7d69.html</url>
      
        <content type="html"><![CDATA[<h2 id="docker的网络与Harbor镜像仓库">docker的网络与Harbor镜像仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">101上起的容器和103上起的容器不能通信</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看容器的ip</span></span><br><span class="line"><span class="comment">#101起centos</span></span><br><span class="line">[root@docker01 ~]# docker run --<span class="built_in">link</span> mysql80 -it centos:7 /bin/bash</span><br><span class="line">[root@56db98b318bb /]# ping mysql80</span><br><span class="line">PING mysql80 (172.17.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from mysql80 (172.17.0.2): icmp_seq=1 ttl=64 time=0.271 ms</span><br><span class="line"></span><br><span class="line">mysql80容器的ip是：172.17.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#102起centos</span></span><br><span class="line">[root@bdc4ac174cb6 /]# ping 172.17.0.2</span><br><span class="line">PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.</span><br><span class="line"></span><br><span class="line">可以发现是ping不通的，如果开启内核转，就可以通信，A虚拟机里面起的容器就与B虚拟机可以通信</span><br></pre></td></tr></table></figure><h3 id="1、Bridge桥接模式-docker-默认的网络模式"><strong>1、Bridge桥接模式  (docker 默认的网络模式)</strong></h3><p>Bridge：Docker设计的NAT网络模型 默认类型，类似于虚拟机里面的NAT模式</p><p><img src="../image/study_img/image-20240905150011381.png" alt="image-20240905150011381"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">你的容器桥接到docker0那个网卡，容器的网卡和docker0那个网卡在同一网段</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前虚拟机的网络类型</span></span><br><span class="line">[root@docker02 ~]# docker network <span class="built_in">ls</span></span><br><span class="line">NETWORK ID     NAME      DRIVER    SCOPE</span><br><span class="line">870935df49b1   bridge    bridge    <span class="built_in">local</span></span><br><span class="line">a7fce1fe694d   host      host      <span class="built_in">local</span></span><br><span class="line">d7fe2c2b78e7   none      null      <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看桥接模式的详细信息</span></span><br><span class="line">[root@docker01 ~]# docker network inspect bridge</span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装bridge-utils 查看</span></span><br><span class="line">[root@docker01 ~]# brctl show</span><br><span class="line">bridge name bridge <span class="built_in">id</span> STP enabled interfaces</span><br><span class="line">docker0 8000.0242eca7bc4c no</span><br><span class="line"></span><br><span class="line"><span class="comment">#调试网络专用镜像</span></span><br><span class="line">[root@docker01 ~]# docker run -it -d  busybox  /bin/sh</span><br><span class="line"></span><br><span class="line">公司有规定 内网的ip规定192或者168的网段</span><br><span class="line"><span class="comment">#修改桥接模式的网段</span></span><br><span class="line">方法1：修改docker的启动脚本</span><br><span class="line">[root@docker01 ~]# vim /lib/systemd/system/docker.service</span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">--bip=192.168.10.1/24</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# systemctl daemon-reload</span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker run -it busybox /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">eth0 Link encap:Ethernet HWaddr 02:42:C0:A8:0A:03</span><br><span class="line">     inet addr:192.168.10.3 Bcast:192.168.10.255 Mask:255.255.255.0</span><br><span class="line">     UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1</span><br><span class="line">     RX packets:8 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">     TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">     collisions:0 txqueuelen:0</span><br><span class="line">     RX bytes:656 (656.0 B) TX bytes:0 (0.0 B)</span><br><span class="line"></span><br><span class="line">[root@docker02 ~]# docker run -it busybox /bin/sh</span><br><span class="line"><span class="comment">#这个是专门的网络工具，网络相关的命令都支持</span></span><br><span class="line"></span><br><span class="line">方法2：修改docker的配置文件</span><br><span class="line">[root@docker01 ~]# vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;bip&quot;</span>: <span class="string">&quot;192.168.30.1/24&quot;</span>,</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.1panel.live&quot;</span>,<span class="string">&quot;https://hub.rat.dev/&quot;</span>,</span><br><span class="line"><span class="string">&quot;https://docker.chenby.cn&quot;</span>, <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">## 或者</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.1panel.live&quot;</span>,<span class="string">&quot;https://hub.rat.dev/&quot;</span>,</span><br><span class="line"><span class="string">&quot;https://docker.chenby.cn&quot;</span>, <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>],</span><br><span class="line"><span class="string">&quot;bip&quot;</span>: <span class="string">&quot;192.168.30.1/24&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# systemctl daemon-reload</span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br><span class="line">[root@docker01 ~]# docker run -it busybox /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">eth0 Link encap:Ethernet HWaddr 02:42:C0:A8:14:03</span><br><span class="line">     inet addr:192.168.20.3 Bcast:192.168.20.255 Mask:255.255.255.0</span><br><span class="line">     UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1</span><br><span class="line">     RX packets:6 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">     TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">     collisions:0 txqueuelen:0</span><br><span class="line">     RX bytes:516 (516.0 B) TX bytes:0 (0.0 B)</span><br><span class="line">     </span><br><span class="line">这样子就可以定义容器的网段了</span><br></pre></td></tr></table></figure><h3 id="2、Host模式">**2、Host模式   **</h3><p>host：与宿主机共享Network Namespace，–network=host 性能最高</p><p><img src="../image/study_img/image-20240905151204236.png" alt="image-20240905151204236"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker run --network=host -d nginx:alpine</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker run -it --network=host nginx:alpine /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">docker0 Link encap:Ethernet HWaddr 02:42:77:C6:BE:B9</span><br><span class="line">        inet addr:192.168.20.1 Bcast:192.168.20.255 Mask:255.255.255.0</span><br><span class="line">        inet6 addr: fe80::42:77ff:fec6:beb9/64 Scope:Link</span><br><span class="line">        UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1</span><br><span class="line">        RX packets:3150 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">        TX packets:2794 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">        collisions:0 txqueuelen:0</span><br><span class="line">        RX bytes:7792958 (7.4 MiB) TX bytes:1119887 (1.0 MiB)</span><br><span class="line"></span><br><span class="line">eth0    Link encap:Ethernet HWaddr 00:0C:29:1A:2F:80</span><br><span class="line">        inet addr:10.0.0.101 Bcast:10.0.0.255 Mask:255.255.255.0</span><br><span class="line">        inet6 addr: fe80::20c:29ff:fe1a:2f80/64 Scope:Link</span><br><span class="line"></span><br><span class="line">和主机共享网卡的模式，一般起容器不会用到这个模式</span><br></pre></td></tr></table></figure><h3 id="3、container模式"><strong>3、container模式</strong></h3><p>Container：与另一个运行中的容器共享Network Namespace，–net=container:containerID（K8S）</p><p><img src="../image/study_img/image-20240905114345031.png" alt="image-20240905114345031"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker run -it busybox /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">eth0 Link encap:Ethernet HWaddr 02:42:C0:A8:14:03</span><br><span class="line">     inet addr:192.168.20.3 Bcast:192.168.20.255 Mask:255.255.255.0</span><br><span class="line">     UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1</span><br><span class="line">     RX packets:6 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">     TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">     collisions:0 txqueuelen:0</span><br><span class="line">     RX bytes:516 (516.0 B) TX bytes:0 (0.0 B)</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker run -it --network=container:763cd9e2da94 centos:7 /bin/bash</span><br><span class="line">[root@docker01 ~]# docker run -it --network=container:763cd9e2da94 nginx:alpine /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">eth0 Link encap:Ethernet HWaddr 02:42:C0:A8:14:03</span><br><span class="line">     inet addr:192.168.20.3 Bcast:192.168.20.255 Mask:255.255.255.0</span><br><span class="line">     UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1</span><br><span class="line">     RX packets:8 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">     TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">     collisions:0 txqueuelen:0</span><br><span class="line">     RX bytes:656 (656.0 B) TX bytes:0 (0.0 B)</span><br></pre></td></tr></table></figure><h3 id="4、None模式"><strong>4、None模式</strong></h3><p>None:不为客器配置任何网络功能，–net=none   没有网络的模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">启动的时候指定  </span><br><span class="line">[root@docker01 ~]# docker run -it --network=none busybox /bin/sh</span><br><span class="line">/ <span class="comment"># ifconfig</span></span><br><span class="line">lo   Link encap:Local Loopback</span><br><span class="line">     inet addr:127.0.0.1 Mask:255.0.0.0</span><br><span class="line">     inet6 addr: ::1/128 Scope:Host</span><br><span class="line">     UP LOOPBACK RUNNING MTU:65536 Metric:1</span><br><span class="line">     RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">     TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">     collisions:0 txqueuelen:1000</span><br><span class="line">     RX bytes:0 (0.0 B) TX bytes:0 (0.0 B)</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240905113318250.png" alt="image-20240905113318250"></p><h3 id="5、Docker自定义网络模式"><strong>5、Docker自定义网络模式</strong></h3><p>基于以上4种模式创建网络</p><p><img src="../image/study_img/image-20240905113509543.png" alt="image-20240905113509543"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义网络</span></span><br><span class="line">docker network create -d &lt;mode&gt; --subnet &lt;CIDR&gt; --gateway &lt;网关&gt; &lt;自定义网路名称&gt;</span><br><span class="line">创建</span><br><span class="line">docker network create -d bridge --subnet 192.168.100.0/24 --gateway 192.168.100.1 abc-net</span><br><span class="line"></span><br><span class="line"><span class="comment">## 引用自定义网络</span></span><br><span class="line">[root@docker01 ~]# docker run -it --network=abc-net busybox /bin/sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">就相当于创建了一个交换机</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除自定义网络</span></span><br><span class="line">[root@docker01 ~]# docker network <span class="built_in">ls</span></span><br><span class="line">NETWORK ID NAME DRIVER SCOPE</span><br><span class="line">2b0a232f6643 bridge bridge <span class="built_in">local</span></span><br><span class="line">168f91213e19 host host <span class="built_in">local</span></span><br><span class="line">4de4c2edcb74 none null <span class="built_in">local</span></span><br><span class="line">7a7b8742e475 abc-net bridge <span class="built_in">local</span></span><br><span class="line">[root@docker01 ~]# docker network <span class="built_in">rm</span> abc-net</span><br><span class="line">abc-net</span><br><span class="line">[root@docker01 ~]# docker network <span class="built_in">ls</span></span><br><span class="line">NETWORK ID NAME DRIVER SCOPE</span><br><span class="line">2b0a232f6643 bridge bridge <span class="built_in">local</span></span><br><span class="line">168f91213e19 host host <span class="built_in">local</span></span><br><span class="line">4de4c2edcb74 none null <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">创建了网络就创建了一个桥接的网卡，相当于一个网卡就是一个交换机</span><br><span class="line">docker默认就是bridge模式，当有不同的·项目就要自己创建一个网络，把不同项目的主机放到这个模式里面</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240905113639559.png" alt="image-20240905113639559"></p><h3 id="6、Docker私有创建Harbor">6、<strong>Docker私有创建Harbor</strong></h3><p>Harbor 是为企业用户设计的容器镜像仓库开源项目，包括了权限管理(RBAC)、+DAP、审计、安全漏洞扫描、镜像验真、管理界面、自我注册、HA 等企业必需的功能，同时针对中国用户的特点，设计镜像复制和中文支持等功舱   <a href="https://goharbor.io/">https://goharbor.io/</a></p><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>elk1</td><td>10.0.0.76  /  172.16.1.76</td><td>Harbor图形化仓库</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">harbor 图形化界面的  https://goharbor.io/</span><br><span class="line">registry 命令行操作的</span><br><span class="line"></span><br><span class="line">下载harbor带offline标签的，所有的镜像，安装包里面都在一起的所以比较大</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、#安装docker环境</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.huaweicloud.com/repository/conf/CentOS-7-anon.repo</span><br><span class="line">curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">sed -i <span class="string">&quot;s@http://mirrors.aliyun.com@https://mirrors.huaweicloud.com@g&quot;</span> /etc/yum.repos.d/epel.repo</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/docker-ce.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[docker-ce-stable]</span></span><br><span class="line"><span class="string">name=Docker CE Stable - $basearch</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.huaweicloud.com/docker-ce/linux/centos/7/x86_64/stable</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.huaweicloud.com/docker-ce/linux/centos/gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sed -i <span class="string">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;：[&quot;https://docker.1panel.live&quot;,&quot;https://hub.rat.dev/&quot;,&quot;https://docker.chenby.cn&quot;, &quot;https://docker.m.daocloud.io&quot;]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.下载harbor</span><br><span class="line">[root@harbor ~]# wget https://github.com/goharbor/harbor/releases/download/v2.11.1/harbor-offline-installer-v2.11.1.tgz</span><br><span class="line"></span><br><span class="line"> 3.解压</span><br><span class="line">[root@harbor ~]# tar xf harbor-offline-installer-v2.11.1.tgz </span><br><span class="line"></span><br><span class="line">4.进入harbor目录</span><br><span class="line">[root@harbor harbor]# <span class="built_in">cd</span> /root/harbor/</span><br><span class="line">[root@elk1 harbor]# ll</span><br><span class="line">total 646848</span><br><span class="line">-rw-r--r-- 1 root root      3646 Aug 15 18:07 common.sh</span><br><span class="line">-rw-r--r-- 1 root root 662330539 Aug 15 18:07 harbor.v2.11.1.tar.gz#harbor的所有镜像</span><br><span class="line">-rw-r--r-- 1 root root     14270 Aug 15 18:07 harbor.yml.tmpl</span><br><span class="line">-rwxr-xr-x 1 root root      1975 Aug 15 18:07 install.sh</span><br><span class="line">-rw-r--r-- 1 root root     11347 Aug 15 18:07 LICENSE</span><br><span class="line">-rwxr-xr-x 1 root root      1882 Aug 15 18:07 prepare</span><br><span class="line"></span><br><span class="line">5.改配置文件名</span><br><span class="line">[root@harbor harbor]# <span class="built_in">cp</span> /root/harbor/harbor.yml.tmpl /root/harbor/harbor.yml</span><br><span class="line"></span><br><span class="line">6.修改配置文件 (注释HTTPS的配置)</span><br><span class="line">[root@harbor harbor]# vim harbor.yml</span><br><span class="line">第5行 改成当前主机的ip</span><br><span class="line">hostname: 10.0.0.105</span><br><span class="line">47行：先记录harbor的密码</span><br><span class="line">harbor_admin_password: Harbor12345</span><br><span class="line"></span><br><span class="line">7.执行安装脚本</span><br><span class="line">[root@harbor harbor]# ./install.sh</span><br><span class="line">✔ ----Harbor has been installed and started successfully.----#出现这个就安装成功</span><br><span class="line"></span><br><span class="line">[root@harbor harbor]# docker images</span><br><span class="line">会看到harbor自动安装的镜像</span><br><span class="line">[root@harbor harbor]# netstat -lntup</span><br><span class="line">会看到80端口</span><br><span class="line"></span><br><span class="line">8、浏览器访问当前主机的IP</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240905171032747.png" alt="image-20240905171032747"></p><p>1、创建项目     -1 就是无限大</p><p><img src="../image/study_img/image-20240905171320050.png" alt="image-20240905171320050"></p><p>2、上传镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#上传镜像的需求</span></span><br><span class="line">需要修改镜像名称：命名规则</span><br><span class="line">harbor的IP地址/项目名称/镜像名称:标签</span><br><span class="line"></span><br><span class="line">1、将镜像重新命名</span><br><span class="line">[root@docker02 ~]# docker tag wordpress:v7 10.0.0.76/wordpress/wordpress:v7</span><br><span class="line"></span><br><span class="line">2、推送镜像  报错</span><br><span class="line">[root@docker02 ~]# docker push 10.0.0.76/wordpress/wordpress:v7</span><br><span class="line">The push refers to repository [10.0.0.76/wordpress/wordpress]</span><br><span class="line">Get <span class="string">&quot;https://10.0.0.76/v2/&quot;</span>: dial tcp 10.0.0.76:443: connect: connection refused</span><br><span class="line">原因是没有信任不安全的连接</span><br><span class="line"></span><br><span class="line">3、修改docker配置文件，添加信任不安全的镜像仓库配置</span><br><span class="line">[root@docker02 ~]# vim /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.1panel.live&quot;</span>, <span class="string">&quot;https://hub.rat.dev/&quot;</span>, <span class="string">&quot;https://docker.chenby.cn&quot;</span>, <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>],</span><br><span class="line"><span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;http://10.0.0.76&quot;</span>]#就是加这个配置，注意，需要在上一行结束位置加,逗号</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">重启docker</span><br><span class="line">[root@docker02 ~]# systemctl restart docker</span><br><span class="line"></span><br><span class="line">4、再次推送 报错</span><br><span class="line">[root@docker02 ~]# docker push 10.0.0.76/wordpress/wordpress:v7</span><br><span class="line">unauthorized: unauthorized to access repository: wordpress/wordpress, action: push: unauthorized to access repository: wordpress/wordpress, action: push</span><br><span class="line">仓库没有做认证</span><br><span class="line"></span><br><span class="line">5、命令行登录Harbor进行认证</span><br><span class="line">[root@docker02 ~]# docker login 10.0.0.76</span><br><span class="line">Username: admin</span><br><span class="line">Password:  <span class="comment">#密码：Harbor12345</span></span><br><span class="line">......</span><br><span class="line">Login Succeeded</span><br><span class="line"></span><br><span class="line">6、这次推送镜像成功，进入web页面，刷新一下查看</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240905173214933.png" alt="image-20240905173214933"></p><p><img src="../image/study_img/image-20240905173246328.png" alt="image-20240905173246328"></p><p><img src="../image/study_img/image-20240905173324730.png" alt="image-20240905173324730"></p><p>3、下载Harbor仓库里面的镜像</p><p><img src="../image/study_img/image-20240905181051876.png" alt="image-20240905181051876"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">使用10.0.0.101下载镜像</span><br><span class="line"><span class="comment">#10.0.0.101操作如下</span></span><br><span class="line">1、修改docker配置文件，添加信任不安全的镜像仓库配置</span><br><span class="line">[root@docker01 ~]# vim /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.1panel.live&quot;</span>, <span class="string">&quot;https://hub.rat.dev/&quot;</span>, <span class="string">&quot;https://docker.chenby.cn&quot;</span>, <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>],</span><br><span class="line"><span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;http://10.0.0.76&quot;</span>]#就是加这个配置，注意，需要在上一行结束位置加,逗号</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br><span class="line"></span><br><span class="line">2、登录harbor</span><br><span class="line">[root@docker01 ~]# docker login 10.0.0.76</span><br><span class="line">Username: admin</span><br><span class="line">Password:  <span class="comment">#密码：Harbor12345</span></span><br><span class="line">......</span><br><span class="line">Login Succeeded</span><br><span class="line"></span><br><span class="line">3、下载镜像</span><br><span class="line">[root@docker01 ~]# docker pull 10.0.0.76/wordpress/wordpress@sha256:c23f172bdd40059652c0a45affd4c0d1740fa8578c56e0209316e43516560050</span><br><span class="line">或者</span><br><span class="line">[root@docker01 ~]# docker pull 10.0.0.76/wordpress/wordpress:v7</span><br></pre></td></tr></table></figure><h3 id="7、镜像仓库registry">7、<strong>镜像仓库registry</strong></h3><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>docker01</td><td>10.0.0.101  /  172.16.1.101</td><td>registry命令行仓库</td></tr></tbody></table><p>1、使用10.0.0.101地址的机器搭建仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、搭建仓库</span><br><span class="line">[root@docker01 ~]# docker run -d -p 5000:5000 --restart=always --name registry -v /opt/myregistry:/var/lib/registry registry</span><br><span class="line"></span><br><span class="line">[root@docker01 wordpress]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS         PORTS                                                  NAMES</span><br><span class="line">356673cd10da   registry          <span class="string">&quot;/entrypoint.sh /etc…&quot;</span>   11 seconds ago   Up 9 seconds   0.0.0.0:5000-&gt;5000/tcp, :::5000-&gt;5000/tcp              registry</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个是http的80端口，一般在企业中，会在他前面加nginx代理，用nginx80代理他的5000端口，nginx上配置域名或者ip</span></span><br><span class="line">regsitry做集群可以挂载这个目录/opt/myregistry/docker/registry/v2/repositories/</span><br><span class="line"></span><br><span class="line">Harbor：他本来就是http,如果想给harbor做集群,可以多起几个harbor,前面加个负载均衡，虽然数据不是统一的数据，可以使用NFS挂载，nginx负载均衡可以解决数据统一的问题，一台上面安装rsync，其他2台实时同步也可以，所有机器都要安装rsync,seysync</span><br><span class="line"></span><br><span class="line">registry可以使用nginx代理</span><br><span class="line">habor不可以使用nginx代理</span><br></pre></td></tr></table></figure><p>2、上传镜像到仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1、给镜像打tag标签，要写全仓库地址    地址:端口/镜像名:版本号</span><br><span class="line">[root@docker02 ~]# docker tag wordpress-manual:v1 172.16.1.101:5000/wordpress-manual:v1</span><br><span class="line">[root@docker02 ~]# docker tag nginx:alpine 172.16.1.101:5000/nginx:alpine</span><br><span class="line">[root@docker02 ~]# docker tag busybox:latest  172.16.1.101:5000/busybox:latest</span><br><span class="line"></span><br><span class="line">2、其他机器需要将代码上传到仓库的机器配置文件，改机器就要信任仓库地址</span><br><span class="line">[root@docker03 ~]# vim /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.1panel.live&quot;</span>, <span class="string">&quot;https://hub.rat.dev/&quot;</span>, <span class="string">&quot;https://docker.chenby.cn&quot;</span>, <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>],</span><br><span class="line"><span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;http://10.0.0.76&quot;</span>,<span class="string">&quot;http://172.16.1.101:5000&quot;</span>]#就是加这个配置，注意，需要在上一行结束位置加,逗号，地址写内外推送会比较快，如果写内外，命名就要用内外命名</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">3、重启Docker</span><br><span class="line">[root@docker03 ~]# systemctl restart docker</span><br><span class="line"></span><br><span class="line">4、推送镜像</span><br><span class="line">[root@docker02 ~]# docker push 172.16.1.101:5000/wordpress-manual:v1</span><br><span class="line">[root@docker02 ~]# docker push 172.16.1.101:5000/nginx:alpine</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、查看私有查看镜像列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1、随便在哪台机器查看都行，只要和registre查看的机器通，查看所有镜像仓库</span><br><span class="line">[root@docker02 ~]# curl http://172.16.1.101:5000/v2/_catalog</span><br><span class="line">&#123;<span class="string">&quot;repositories&quot;</span>:[<span class="string">&quot;busybox&quot;</span>,<span class="string">&quot;nginx&quot;</span>,<span class="string">&quot;wordpress-manual&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line">2、查看指定仓库的tag标签</span><br><span class="line">[root@docker02 ~]# curl http://172.16.1.101:5000/v2/nginx/tags/list</span><br><span class="line">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;nginx&quot;</span>,<span class="string">&quot;tags&quot;</span>:[<span class="string">&quot;alpine&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line">3、格式化输出json格式信息</span><br><span class="line">[root@docker02 ~]# yum -y install jq</span><br><span class="line">[root@docker02 ~]#  curl -s http://172.16.1.101:5000/v2/_catalog|jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;repositories&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;busybox&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nginx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wordpress-manual&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、删除私有仓库中的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1、查看映射的目录</span><br><span class="line">[root@docker01 ~]# docker inspect registry</span><br><span class="line">        <span class="string">&quot;Mounts&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Source&quot;</span>: <span class="string">&quot;/opt/myregistry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Destination&quot;</span>: <span class="string">&quot;/var/lib/registry&quot;</span>,</span><br><span class="line"></span><br><span class="line">2、查看/opt/myregistry目录下的文件，可以看到上传到的镜像</span><br><span class="line">[root@docker01 ~]# ll /opt/myregistry/docker/registry/v2/repositories/</span><br><span class="line">drwxr-xr-x 5 root root 55 Sep  6 16:40 busybox</span><br><span class="line">drwxr-xr-x 5 root root 55 Sep  6 16:32 nginx</span><br><span class="line">drwxr-xr-x 5 root root 55 Sep  6 16:17 wordpress-manual</span><br><span class="line"></span><br><span class="line">3、由于做了映射，就不需要连到容器里面，直接在宿主机上删除</span><br><span class="line">[root@docker01 ~]# <span class="built_in">rm</span> -rf /opt/myregistry/docker/registry/v2/repositories/busybox</span><br><span class="line">[root@docker01 ~]# ll /opt/myregistry/docker/registry/v2/repositories/</span><br><span class="line">drwxr-xr-x 5 root root 55 Sep  6 16:32 nginx</span><br><span class="line">drwxr-xr-x 5 root root 55 Sep  6 16:17 wordpress-manual</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# curl -s http://172.16.1.101:5000/v2/_catalog|jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;repositories&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;nginx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wordpress-manual&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">4、查看是否生成blob二进制文件，如果有就删除，没有生成就不用管</span><br><span class="line">[root@docker01 ~]# ll /etc/docker</span><br><span class="line">-rw-r--r-- 1 root root 219 Sep  6 16:52 daemon.json</span><br><span class="line"></span><br><span class="line">删除方法：</span><br><span class="line">registry garbage-collect /etc/docker/registry/config.yml</span><br></pre></td></tr></table></figure><p>5、拉取镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker03 ~]# docker pull 172.16.1.101:5000/wordpress-manual:v1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡三、Docker制作镜像</title>
      <link href="/posts/eb54e23d.html"/>
      <url>/posts/eb54e23d.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker制作镜像">Docker制作镜像</h2><p>Docker 容器操作的选项</p><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>–name</td><td>自定义容器名</td></tr><tr><td>-d</td><td>将容器放后台启动</td></tr><tr><td>-it   (input   TTY)</td><td>分配一个交互式的终端</td></tr><tr><td>-p</td><td>端口映射</td></tr><tr><td>-P</td><td>映射随机端口</td></tr><tr><td>-v</td><td>数据卷映射</td></tr><tr><td>-e</td><td>env  指定环境变量</td></tr><tr><td>–restart=always</td><td>设置容器开机自启，docker启动就跟着自动启动</td></tr><tr><td>–link=mysql57</td><td>指定另一个容器的名字，就可以和指定的容器通信</td></tr></tbody></table><p>运行mysql容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">1、拉取mysql5.7.44镜像</span><br><span class="line">root@docker01 ~]# docker pull mysql:5.7.44</span><br><span class="line"></span><br><span class="line">2、查看工作目录和端口</span><br><span class="line">[root@docker01 ~]# docker inspect mysql:5.7.44</span><br><span class="line">            <span class="string">&quot;ExposedPorts&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;3306/tcp&quot;</span>: &#123;&#125;,</span><br><span class="line">                <span class="string">&quot;33060/tcp&quot;</span>: &#123;&#125;</span><br><span class="line">                </span><br><span class="line">            <span class="string">&quot;Volumes&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;/var/lib/mysql&quot;</span>: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#环境变量</span></span><br><span class="line"><span class="comment">#root密码</span></span><br><span class="line">MYSQL_ROOT_PASSWORD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建库</span></span><br><span class="line">MYSQL_DATABASE</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建用户</span></span><br><span class="line">MYSQL_USER</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建普通用户的密码</span></span><br><span class="line">MYSQL_PASSWORD</span><br><span class="line"></span><br><span class="line">2、运行镜像</span><br><span class="line">docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wordpress \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line">-v <span class="comment">#映射配置文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">-name some-mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=my-secret-pw \</span><br><span class="line">-d mysql:tag \</span><br><span class="line">--character-set-server=utf8mb4 \</span><br><span class="line">--collation-server=utf8mb4_unicode_ci</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">--name wp \</span><br><span class="line">--<span class="built_in">link</span> mysql57 \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-v /data/wp:/var/www/html \</span><br><span class="line">-e WORDPRESS_DB_HOST=mysql57 \</span><br><span class="line">-e WORDPRESS_DB_USER=wp_user \</span><br><span class="line">-e WORDPRESS_DB_PASSWORD=123 \</span><br><span class="line">-e WORDPRESS_DB_NAME=wordpress \</span><br><span class="line">-d wordpress</span><br><span class="line">一般都是创建普通用户，做了端口映射宿主机也能连接</span><br><span class="line"></span><br><span class="line">3、连接进去</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">exec</span> -it eedc00b /bin/bash</span><br><span class="line">bash-4.2# </span><br><span class="line">bash-4.2# mysql -uroot -p123</span><br><span class="line"></span><br><span class="line">4、查看创建的库和用户</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| user          | host      |</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| root          | %         |</span><br><span class="line">| wp_user       | %         | <span class="comment">#容器的ip是内外ip,不把端口映射到宿主机上就没事</span></span><br><span class="line">| mysql.session | localhost |</span><br><span class="line">| mysql.sys     | localhost |</span><br><span class="line">| root          | localhost |</span><br><span class="line">+---------------+-----------+</span><br><span class="line"></span><br><span class="line">mysql&gt; show grants <span class="keyword">for</span> wp_user@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">+--------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> wp_user@%                                   |</span><br><span class="line">+--------------------------------------------------------+</span><br><span class="line">| GRANT USAGE ON *.* TO <span class="string">&#x27;wp_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>                    |</span><br><span class="line">| GRANT ALL PRIVILEGES ON `wordpress`.* TO <span class="string">&#x27;wp_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> |</span><br><span class="line">+--------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">4、映射的目录里面有数据</span><br><span class="line">[root@docker01 ~]# ll /data/mysql/</span><br></pre></td></tr></table></figure><h3 id="1、手动制作WordPress镜像">1、<strong>手动制作WordPress镜像</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">1、下载wordpress代码包</span><br><span class="line">[root@docker01 ~]# wget https://cn.wordpress.org/wordpress-5.9.10-zh_CN.tar.gz</span><br><span class="line"></span><br><span class="line">2、运行一个基础容器</span><br><span class="line">[root@docker01 ~]# docker run --name wp_base -it  centos:7 /bin/bash</span><br><span class="line"></span><br><span class="line">3、换源</span><br><span class="line">[root@3dcd1060f3ab /]#  curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.huaweicloud.com/repository/conf/CentOS-7-anon.repo</span><br><span class="line">[root@3dcd1060f3ab /]#  curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">[root@3dcd1060f3ab /]#sed -i <span class="string">&quot;s@http://mirrors.aliyun.com@https://mirrors.huaweicloud.com@g&quot;</span> /etc/yum.repos.d/epel.repo</span><br><span class="line"></span><br><span class="line">4、换php源</span><br><span class="line">[root@3dcd1060f3ab /]# <span class="built_in">cat</span> &gt; /etc/yum.repos.d/php.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[php-webtatic]</span></span><br><span class="line"><span class="string">name = PHP Repository</span></span><br><span class="line"><span class="string">baseurl = http://us-east.repo.webtatic.com/yum/el7/x86_64/</span></span><br><span class="line"><span class="string">gpgcheck = 0</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> -e  <span class="string">&quot;[php-webtatic]\nname = PHP Repository\nbaseurl = http://us-east.repo.webtatic.com/yum/el7/x86_64/\ngpgcheck = 0&quot;</span>&gt; /etc/yum.repos.d/php.repo</span><br><span class="line"></span><br><span class="line">5、安装php、mysql、nginx</span><br><span class="line">[root@nginx ~]# yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb mariadb-server nginx</span><br><span class="line"></span><br><span class="line">6、创建nginx启动用户</span><br><span class="line">[root@3dcd1060f3ab code]# groupadd -g 666 www</span><br><span class="line">[root@3dcd1060f3ab code]# useradd -u 666 -g 666 -s /sbin/nologin -M www</span><br><span class="line"></span><br><span class="line">7、优化nginx  php 统一用户</span><br><span class="line">主配置文件   (如果是nginxX官方源下载的nginx，就不用优化)</span><br><span class="line">[root@3dcd1060f3ab /]# vi /etc/nginx/nginx.conf</span><br><span class="line">user www;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 4096;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@3dcd1060f3ab ~]# sed -i <span class="string">&#x27;s#user = apache#user = www#g&#x27;</span> /etc/php-fpm.d/www.conf</span><br><span class="line">[root@3dcd1060f3ab ~]# sed -i <span class="string">&#x27;s#group = apache#group = www#g&#x27;</span> /etc/php-fpm.d/www.conf </span><br><span class="line"></span><br><span class="line">8、编写网站主配置文件</span><br><span class="line">[root@3dcd1060f3ab /]# vi /etc/nginx/conf.d/wp.conf</span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name _;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        index index.php index.html;</span><br><span class="line">        </span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">             fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">             fastcgi_param SCRIPT_FILENAME $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">             include fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">9、创建站点目录，宿主机新开窗口上传代码到站点目录，并解压，授权</span><br><span class="line">[root@3dcd1060f3ab /]# <span class="built_in">mkdir</span> /code</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> wordpress-5.9.10.tar.gz  wp_base:/code</span><br><span class="line"></span><br><span class="line">[root@3dcd1060f3ab /]# <span class="built_in">cd</span> /code</span><br><span class="line">[root@3dcd1060f3ab code]# tar xf wordpress-5.9.10.tar.gz </span><br><span class="line">[root@3dcd1060f3ab code]# <span class="built_in">chown</span> -R  www.www /code/</span><br><span class="line"></span><br><span class="line">10、启动数据库</span><br><span class="line">虽然是不能systemd启动，但是mariadb的启动脚本还是在的</span><br><span class="line">[root@3dcd1060f3ab code]# <span class="built_in">cat</span> /usr/lib/systemd/system/mariadb.service </span><br><span class="line"> 35行：启动之前要做初始化，找到初始化命令 </span><br><span class="line"> ExecStartPre=/usr/libexec/mariadb-prepare-db-dir %n</span><br><span class="line"> 38行：启动命令</span><br><span class="line"> ExecStart=/usr/bin/mysqld_safe --basedir=/usr   (可以卡主)</span><br><span class="line"> </span><br><span class="line"> [root@3dcd1060f3ab code]# /usr/libexec/mariadb-prepare-db-dir %n</span><br><span class="line"> [root@3dcd1060f3ab code]# /usr/bin/mysqld_safe --basedir=/usr &amp;</span><br><span class="line"> </span><br><span class="line"> 11、进去数据库创建库 用户</span><br><span class="line">[root@3dcd1060f3ab code]# mysql</span><br><span class="line">MariaDB [(none)]&gt; create database wordpress;</span><br><span class="line">MariaDB [(none)]&gt; grant all on *.* to wp_user@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">12、测试用户是否可以连接</span><br><span class="line">[root@3dcd1060f3ab code]# mysql -uwp_user -p123 -h127.0.0.1</span><br><span class="line"></span><br><span class="line">13、启动nginx</span><br><span class="line">[root@3dcd1060f3ab code]# nginx</span><br><span class="line"></span><br><span class="line">14、启动php</span><br><span class="line">找到启动脚本里面的启动命令</span><br><span class="line">[root@3dcd1060f3ab code]# vi /usr/lib/systemd/system/php-fpm.service </span><br><span class="line"> 9行</span><br><span class="line"> ExecStart=/usr/sbin/php-fpm --nodaemonize --fpm-config /etc/php-fpm.conf</span><br><span class="line"> </span><br><span class="line"> --nodaemonize：可以卡住，不加就放后台</span><br><span class="line">[root@3dcd1060f3ab code]# /usr/sbin/php-fpm  --fpm-config /etc/php-fpm.conf</span><br><span class="line"> </span><br><span class="line"> 15、curl一下，能够正常访问</span><br><span class="line"> [root@3dcd1060f3ab code]# curl -L 127.0.0.1</span><br><span class="line"> ....</span><br><span class="line"> &lt;p&gt;Welcome to WordPress. Before getting started, we need some information on the database. You will need to know the following items before proceeding.&lt;/p&gt;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">        &lt;li&gt;Database name&lt;/li&gt;     <span class="comment">#填写数据库信息的页面</span></span><br><span class="line">        &lt;li&gt;Database username&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;Database password&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;Database host&lt;/li&gt;</span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line">16、将3个服务写脚本启动，就不用一个一个启动了</span><br><span class="line">[root@3dcd1060f3ab code]# <span class="built_in">cd</span> ~</span><br><span class="line">[root@3dcd1060f3ab ~]# vi start.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">/sbin/nginx</span><br><span class="line">/usr/sbin/php-fpm  --fpm-config /etc/php-fpm.conf</span><br><span class="line"><span class="comment">#脚本里面需要卡主一个就可以，把mysql卡住</span></span><br><span class="line">/usr/bin/mysqld_safe --basedir=/usr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">17、输入此时可以打包了，但是打包出来的镜像很大，需要优化一下</span><br><span class="line">[root@3dcd1060f3ab ~]# <span class="built_in">rm</span> -rf /code/wordpress-5.9.10.tar.gz</span><br><span class="line">[root@3dcd1060f3ab ~]# yum clean all</span><br><span class="line">删除所有yum源，以后用不到的，这个就是wordpress</span><br><span class="line">[root@3dcd1060f3ab ~]# <span class="built_in">rm</span> -rf /etc/yum.repos.d/* </span><br><span class="line">如果有下载wget下载东西，都要卸载掉，以后用不到的</span><br><span class="line"></span><br><span class="line">18、打开新窗口，将容器打包</span><br><span class="line">[root@docker01 ~]# docker commit wp_base wordpress:v1</span><br><span class="line">[root@docker01 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">wordpress    v1        26586db1eda4   9 seconds ago   615MB</span><br><span class="line"></span><br><span class="line">19、运行这个容器，测试是否能够在网页里面访问</span><br><span class="line">[root@docker01 ~]# docker run -p 80:80 -d wordpress:v1  /bin/sh ~/start.sh</span><br><span class="line">脚本在容器里面的绝对路径</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS        PORTS                               NAMES</span><br><span class="line">720febe29da7   wordpress:v1   <span class="string">&quot;/bin/sh /root/start…&quot;</span>   2 seconds ago   Up 1 second   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   hopeful_wing</span><br><span class="line"></span><br><span class="line">20、浏览器访问10.0.0.101</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240904155106974.png" alt="image-20240904155106974"></p><p><img src="../image/study_img/image-20240905192409386.png" alt="image-20240905192409386"></p><p><img src="../image/study_img/image-20240904160154137.png" alt="image-20240904160154137"></p><p><img src="../image/study_img/image-20240904160307363.png" alt="image-20240904160307363"></p><p><img src="../image/study_img/image-20240904160327203.png" alt="image-20240904160327203"></p><p><img src="../image/study_img/image-20240904160430589.png" alt="image-20240904160430589"></p><p><img src="../image/study_img/image-20240904162155815.png" alt="image-20240904162155815"></p><h3 id="2、使用官方的wordpress容器">2、<strong>使用官方的wordpress容器</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1、拉取wordpress容器</span><br><span class="line">[root@docker02 ~]# docker pull wordpress</span><br><span class="line"></span><br><span class="line">2、拉取数据库</span><br><span class="line">[root@docker02 ~]# docker pull mysql:5.7.44</span><br><span class="line"></span><br><span class="line">3、#官方wp容器的启动方法</span><br><span class="line">[root@docker02 ~]# docker run \</span><br><span class="line">--name wp \</span><br><span class="line">--<span class="built_in">link</span> mysql57 \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-v /data/wp:/var/www/html \</span><br><span class="line">-e WORDPRESS_DB_HOST=mysql57 \</span><br><span class="line">-e WORDPRESS_DB_USER=wp_user \</span><br><span class="line">-e WORDPRESS_DB_PASSWORD=123 \</span><br><span class="line">-e WORDPRESS_DB_NAME=wordpress \</span><br><span class="line">-d wordpress</span><br><span class="line"></span><br><span class="line"><span class="comment">#官方mysql容器的启动方法</span></span><br><span class="line">[root@docker02 ~]# docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wordpress \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line">4、浏览器访问10.0.0.102</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240904164056259.png" alt="image-20240904164056259"></p><p>可以看到没有填写数据库信息的阶段，因为在启动数据库之前已经使用参数传递进去了，而且不会出现错误，不会出现破图，这个才是生产中需要的效果，需要变量传递参数</p><p><img src="../image/study_img/image-20240904164144932.png" alt="image-20240904164144932"></p><h3 id="3、构建可以传递参数的镜像-（模拟官方打wordpress镜像）">3、<strong>构建可以传递参数的镜像    （模拟官方打wordpress镜像）</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先了解读取系统环境变量的命令：envsubst</span></span><br><span class="line">[root@docker02 ~]# <span class="built_in">export</span> wp_db_name=wp</span><br><span class="line">[root@docker02 ~]# <span class="built_in">export</span> wp_db_user=wp_user</span><br><span class="line">[root@docker02 ~]# <span class="built_in">echo</span> <span class="variable">$wp_db_name</span></span><br><span class="line">wp</span><br><span class="line">[root@docker02 ~]# <span class="built_in">echo</span> <span class="variable">$wp_db_user</span></span><br><span class="line">wp_user</span><br><span class="line">[root@docker02 ~]# vim 1.txt</span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;$wp_db_name&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;$wp_db_user&#x27;</span> );</span><br><span class="line"></span><br><span class="line">拿环境变量去渲染这个文件,1.txt会变成空文件</span><br><span class="line">envsubst读取1.txt里面的变量，匹配环境变量里面有没有，有的话，输出渲染到2.txt</span><br><span class="line">[root@docker02 ~]# envsubst &lt; 1.txt &gt; 2.txt</span><br><span class="line">[root@docker02 ~]# <span class="built_in">cat</span> 2.txt </span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wp&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wp_user&#x27;</span> );</span><br><span class="line"></span><br><span class="line">指定只渲染一个变量，没被渲染的变量就是默认的</span><br><span class="line">[root@docker02 ~]# <span class="built_in">cat</span> 1.txt </span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;$wp_db_name&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;$wp_db_user&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;DB_PASS&#x27;</span>, <span class="string">&#x27;$wp_db_pass&#x27;</span> );</span><br><span class="line">[root@docker02 ~]# envsubst <span class="string">&#x27;$wp_db_name&#x27;</span> &lt; 1.txt &gt;2.txt </span><br><span class="line">[root@docker02 ~]# <span class="built_in">cat</span> 2.txt </span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wp&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;$wp_db_user&#x27;</span> );</span><br><span class="line">define( <span class="string">&#x27;DB_PASS&#x27;</span>, <span class="string">&#x27;$wp_db_pass&#x27;</span> );</span><br><span class="line"></span><br><span class="line">容器里面没有这个命令，先查询一个属于哪个包，在容器里面安装服务的时候一起安装</span><br><span class="line">[root@docker02 ~]# yum provides envsbet</span><br><span class="line">gettext-0.19.8.1-3.el7.x86_64 : GNU libraries and utilities <span class="keyword">for</span> producing multi-lingual messages</span><br></pre></td></tr></table></figure><p>在docker02    10.0.0.102 构建     需要把之前允许的容器关闭，需要打nginx、php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line">1、下载wordpress代码包</span><br><span class="line">[root@docker01 ~]# wget https://cn.wordpress.org/wordpress-5.9.10-zh_CN.tar.gz</span><br><span class="line"></span><br><span class="line">1、运行一个基础容器</span><br><span class="line">[root@docker01 ~]# docker run --name wp_base -it  centos:7 /bin/bash</span><br><span class="line"></span><br><span class="line">2、换源</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.huaweicloud.com/repository/conf/CentOS-7-anon.repo</span><br><span class="line">curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">sed -i <span class="string">&quot;s@http://mirrors.aliyun.com@https://mirrors.huaweicloud.com@g&quot;</span> /etc/yum.repos.d/epel.repo</span><br><span class="line"></span><br><span class="line">3、换php源</span><br><span class="line">[root@3dcd1060f3ab /]# <span class="built_in">cat</span> &gt; /etc/yum.repos.d/php.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[php-webtatic]</span></span><br><span class="line"><span class="string">name = PHP Repository</span></span><br><span class="line"><span class="string">baseurl = http://us-east.repo.webtatic.com/yum/el7/x86_64/</span></span><br><span class="line"><span class="string">gpgcheck = 0</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> -e  <span class="string">&quot;[php-webtatic]\nname = PHP Repository\nbaseurl = http://us-east.repo.webtatic.com/yum/el7/x86_64/\ngpgcheck = 0&quot;</span>&gt; /etc/yum.repos.d/php.repo</span><br><span class="line"></span><br><span class="line">4、安装php、nginx、envsubst命令</span><br><span class="line">[root@nginx ~]# yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb nginx  gettext</span><br><span class="line"></span><br><span class="line">5、创建nginx启动用户</span><br><span class="line">groupadd -g 666 www</span><br><span class="line">useradd -u 666 -g 666 -s /sbin/nologin -M www</span><br><span class="line"></span><br><span class="line">6、优化nginx  php 统一用户</span><br><span class="line">主配置文件   (如果是nginxX官方源下载的nginx，就不用优化)</span><br><span class="line">[root@3dcd1060f3ab /]# vi /etc/nginx/nginx.conf</span><br><span class="line">user www;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 4096;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@3dcd1060f3ab ~]# sed -i <span class="string">&#x27;s#user = apache#user = www#g&#x27;</span> /etc/php-fpm.d/www.conf</span><br><span class="line">sed -i <span class="string">&#x27;s#group = apache#group = www#g&#x27;</span> /etc/php-fpm.d/www.conf </span><br><span class="line"></span><br><span class="line">7、编写网站主配置文件</span><br><span class="line">[root@3dcd1060f3ab /]# vi /etc/nginx/conf.d/wp.conf</span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name _;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        index index.php index.html;</span><br><span class="line">        </span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">             fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">             fastcgi_param SCRIPT_FILENAME $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">             include fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">8、创建站点目录，宿主机新开窗口上传代码到站点目录，并解压，授权</span><br><span class="line">[root@3dcd1060f3ab /]# <span class="built_in">mkdir</span> /code</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> wordpress-5.9.10.tar.gz  wp_base:/code</span><br><span class="line">[root@3dcd1060f3ab code]# <span class="built_in">cd</span> /code</span><br><span class="line">[root@3dcd1060f3ab code]# tar xf wordpress-5.9.10.tar.gz </span><br><span class="line">[root@3dcd1060f3ab code]# <span class="built_in">chown</span> -R  www.www /code/</span><br><span class="line"><span class="built_in">chown</span> -R www.www /var/lib/nginx/</span><br><span class="line"></span><br><span class="line">9、启动nginx</span><br><span class="line">[root@3dcd1060f3ab code]# nginx</span><br><span class="line"></span><br><span class="line">10、启动php</span><br><span class="line">找到启动脚本里面的启动命令</span><br><span class="line">[root@3dcd1060f3ab code]# vi /usr/lib/systemd/system/php-fpm.service </span><br><span class="line"> 9行</span><br><span class="line"> ExecStart=/usr/sbin/php-fpm --nodaemonize --fpm-config /etc/php-fpm.conf</span><br><span class="line"> </span><br><span class="line"> --nodaemonize：可以卡住，不加就放后台</span><br><span class="line">[root@3dcd1060f3ab code]# /usr/sbin/php-fpm  --fpm-config /etc/php-fpm.conf</span><br><span class="line"> </span><br><span class="line"> 11、curl一下，能够正常访问</span><br><span class="line"> [root@3dcd1060f3ab code]# curl -L 127.0.0.1</span><br><span class="line"> ....    <span class="comment">#可以看到选中语言的界面</span></span><br><span class="line">&lt;option value=<span class="string">&quot;zh_HK&quot;</span> lang=<span class="string">&quot;zh&quot;</span> data-continue=<span class="string">&quot;繼續&quot;</span>&gt;香港中文&lt;/option&gt;</span><br><span class="line">&lt;option value=<span class="string">&quot;zh_CN&quot;</span> lang=<span class="string">&quot;zh&quot;</span> data-continue=<span class="string">&quot;继续&quot;</span>&gt;简体中文&lt;/option&gt;</span><br><span class="line">&lt;option value=<span class="string">&quot;zh_TW&quot;</span> lang=<span class="string">&quot;zh&quot;</span> data-continue=<span class="string">&quot;繼續&quot;</span>&gt;繁體中文&lt;/option&gt;</span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line">12、传参，不要数据的页面，需要使用读取系统环境变量的命令envsubst</span><br><span class="line">将配置文件改成模版文件</span><br><span class="line">[root@1925f5794372 code]# vi /code/wordpress/wp-config-sample.php</span><br><span class="line">......</span><br><span class="line"><span class="comment">#把这几行改成变量</span></span><br><span class="line">     23 define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;$WORDPRESS_DB_NAME&#x27;</span> );</span><br><span class="line">     24 </span><br><span class="line">     25 /** Database username */</span><br><span class="line">     26 define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;$WORDPRESS_DB_USER&#x27;</span> );</span><br><span class="line">     27 </span><br><span class="line">     28 /** Database password */</span><br><span class="line">     29 define( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;$WORDPRESS_DB_PASSWORD&#x27;</span> );</span><br><span class="line">     30 </span><br><span class="line">     31 /** Database hostname */</span><br><span class="line">     32 define( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;$WORDPRESS_DB_HOST&#x27;</span> );</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">sed -i <span class="string">&#x27;s#database_name_here#$WORDPRESS_DB_NAME#g&#x27;</span> /code/wordpress/wp-config-sample.php</span><br><span class="line">sed -i <span class="string">&#x27;s#username_here#$WORDPRESS_DB_USER#g&#x27;</span> /code/wordpress/wp-config-sample.php</span><br><span class="line">sed -i <span class="string">&#x27;s#password_here#$WORDPRESS_DB_PASSWORD#g&#x27;</span> /code/wordpress/wp-config-sample.php</span><br><span class="line">sed -i <span class="string">&#x27;s#localhost#$WORDPRESS_DB_HOST#g&#x27;</span> /code/wordpress/wp-config-sample.php</span><br><span class="line"></span><br><span class="line">13、将2个服务写脚本启动，就不用一个一个启动了</span><br><span class="line">[root@3dcd1060f3ab ~]# vi /start.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#渲染变量到wp-config.php</span></span><br><span class="line">envsubst <span class="string">&#x27;$WORDPRESS_DB_NAME $WORDPRESS_DB_USER $WORDPRESS_DB_PASSWORD $WORDPRESS_DB_HOST&#x27;</span> &lt; /code/wordpress/wp-config-sample.php &gt; /code/wordpress/wp-config.php</span><br><span class="line"><span class="built_in">chown</span> -R  www.www /code/</span><br><span class="line">/usr/sbin/php-fpm  --fpm-config /etc/php-fpm.conf</span><br><span class="line"><span class="comment">#脚本里面必须有一个卡在，哪个卡在都可以</span></span><br><span class="line">/sbin/nginx -g <span class="string">&#x27;daemon off;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">14、输入此时可以打包了，但是打包出来的镜像很大，需要优化一下</span><br><span class="line">[root@3dcd1060f3ab ~]# <span class="built_in">rm</span> -rf /code/wordpress-5.9.10.tar.gz</span><br><span class="line">[root@3dcd1060f3ab ~]# yum clean all</span><br><span class="line">删除所有yum源，以后用不到的，这个就是wordpress</span><br><span class="line">[root@3dcd1060f3ab ~]# <span class="built_in">rm</span> -rf /etc/yum.repos.d/* </span><br><span class="line">如果有下载wget下载东西，都要卸载掉，以后用不到的</span><br><span class="line"></span><br><span class="line">15、打开新窗口，将容器打包</span><br><span class="line">[root@docker01 ~]# docker commit wp_base wordpress:v1</span><br><span class="line">[root@docker02 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">wordpress    v1        23e066cac691   2 seconds ago   586MB</span><br><span class="line"></span><br><span class="line">16、删除数据库数据目录，不然第二次启动不能建库，因为第一次的数据已经持久化了</span><br><span class="line">[root@docker02 ~]# <span class="built_in">rm</span> -rf /data</span><br><span class="line"></span><br><span class="line">17、运行带变量的容器</span><br><span class="line"><span class="comment">#运行数据库</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wp_db \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行wordpress容器</span></span><br><span class="line">docker run \</span><br><span class="line">--name wp \</span><br><span class="line">--<span class="built_in">link</span> mysql57 \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-e WORDPRESS_DB_HOST=mysql57 \</span><br><span class="line">-e WORDPRESS_DB_USER=wp_user \</span><br><span class="line">-e WORDPRESS_DB_PASSWORD=123 \</span><br><span class="line">-e WORDPRESS_DB_NAME=wp_db \</span><br><span class="line">-d wordpress:v3 /bin/sh /start.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看正在运行的镜像</span></span><br><span class="line">[root@docker02 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED             STATUS             PORTS                                                  NAMES</span><br><span class="line">71439bdb8066   wordpress:v5   <span class="string">&quot;/bin/sh /start.sh&quot;</span>      5 seconds ago       Up 4 seconds       0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp                      wp</span><br><span class="line">c6eefe3b5358   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   49 minutes ago      Up 49 minutes      0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql57</span><br><span class="line">4f798d07ace2   centos:7       <span class="string">&quot;/bin/bash&quot;</span>              About an hour ago   Up About an hour                                                          wp_base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">18、浏览器访问</span><br><span class="line">10.0.0.102</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240904193619359.png" alt="image-20240904193619359"></p><p>通过填写数据库信息的页面，直接来的主从页面</p><p><img src="../image/study_img/image-20240904194031698.png" alt="image-20240904194031698"></p><p><strong>报错问题</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、docker正常启动，容器里面的服务都正常启动,端口映射也没问题，访问网页找不到页面</span></span><br><span class="line">是因为外面的请求不能到底容器</span><br><span class="line"></span><br><span class="line"><span class="comment">#解决办法：</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"></span><br><span class="line">systemctl restart network</span><br><span class="line"></span><br><span class="line"><span class="comment">#2、wp破图</span></span><br><span class="line">1、查看错误日志</span><br><span class="line">[root@1a60046efc86 wordpress]# tailf /var/log/nginx/error.log </span><br><span class="line">2024/09/05 12:45:49 [crit] 16#16: *432 open() <span class="string">&quot;/var/lib/nginx/tmp/fastcgi/8/01/0000000018&quot;</span> failed (13: Permission denied) <span class="keyword">while</span> reading upstream, client: 10.0.0.1, server: _, request: <span class="string">&quot;GET /wp-admin/site-editor.php?postType=wp_template&amp;postId=twentytwentytwo%2F%2Fhome HTTP/1.1&quot;</span>, upstream: <span class="string">&quot;fastcgi://127.0.0.1:9000&quot;</span>, host: <span class="string">&quot;10.0.0.102&quot;</span>, referrer: <span class="string">&quot;http://10.0.0.102/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Nginx 修改了默认配置，不是以 nginx 或 root 用户来运行 Nginx（主要的原因）</span><br><span class="line">这个目录没有权限去访问：/var/lib/nginx/tmp 目录主要是用来存放临时的缓存文件，因为使用的是 Nginx 的反向代理，当我们上传文件的时候会先把文件写入 Nginx 的 /var/lib/nginx/tmp/client_body 目录，然后再通过代理转发到目标系统。</span><br><span class="line"></span><br><span class="line">2、查看 /var/lib/nginx/tmp 的权限，会发现这个目录默认的所有者是 nginx:</span><br><span class="line">[root@1a60046efc86 wordpress]# ll /var/lib</span><br><span class="line">.....</span><br><span class="line">drwxr-xr-x 2 root root   6 Apr 11  2018 misc</span><br><span class="line">drwxrwx--- 3 nginx root  17 Sep  5 11:52 nginx <span class="comment">#权限不对</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、修改权限</span><br><span class="line">[root@1a60046efc86 wordpress]# <span class="built_in">chown</span> -R www.www /var/lib/nginx/</span><br><span class="line">[root@1a60046efc86 wordpress]# ll /var/lib</span><br><span class="line">......</span><br><span class="line">drwxrwx--- 1 www  www   17 Sep  5 11:52 nginx</span><br><span class="line"></span><br><span class="line">4、再次访问，刷新慢一点，加重一下，就不会破图了</span><br></pre></td></tr></table></figure><h3 id="4、Docker自动化构建镜像">4、<strong>Docker自动化构建镜像</strong></h3><p>手动构建镜像的缺陷<br>1.体积太大<br>2.启动不方便<br>3.无法直接修改CMD<br>4.没有声明端口<br>5、没有声明可映射目录</p><h3 id="5、Dockerfile的介绍">5、<strong>Dockerfile的介绍</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Dockerile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。声明式的脚本，将镜像构建内容，写入脚本中即可。</span><br><span class="line"></span><br><span class="line">镜像:中药</span><br><span class="line">dockerfile：配方</span><br><span class="line">dockerfile：常用指令</span><br></pre></td></tr></table></figure><p>dockerfile的指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM：指定一个基础镜像</span><br><span class="line">RUN： 指定系统命令</span><br><span class="line">CMD： 指定运行容器PID为1的进程命令   </span><br><span class="line">ENTRYPOINT：指定运行容器PID为1的进程命令 /bin/sh /start.sh</span><br><span class="line"></span><br><span class="line">ADD： 将宿主机上面的文件docker <span class="built_in">cp</span>到容器中(会自动解压，一般传压缩包,里面不会传压缩包，之后传解压后的包)</span><br><span class="line">COPY：将宿主机上面的文件docker <span class="built_in">cp</span>到容器中(不会自动压，一般传配置文件)</span><br><span class="line">WORKDIR：指定一个工作目录，docker <span class="built_in">exec</span>连接进去时，自动进入该目录下</span><br><span class="line">EXPOSE：声明镜像要暴露的端口</span><br><span class="line">VOLUME： 声明可映射的数据卷</span><br><span class="line">ENV：声明默认环境变量(ssh的密码,数据库的密码)镜像的属性标签</span><br><span class="line"></span><br><span class="line">LABEL：打标签</span><br><span class="line">MAINTAINER：声明管理者标识</span><br></pre></td></tr></table></figure><h3 id="6、自动化构建wordpress">6、<strong>自动化构建wordpress</strong></h3><p>1、准备需要的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1、运行带有配置文件的容器，进入容器，将需要的配置文件拉出去</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">exec</span> -it 40b99669a1 /bin/bash</span><br><span class="line"></span><br><span class="line">2、创建所需文件存放的目录</span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> -p /code/wordpress/</span><br><span class="line"></span><br><span class="line">3、拉取容器里面的配置文件</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> 40b99669a160:/etc/nginx/nginx.conf /code/wordpress/</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> 40b99669a160:/etc/nginx/conf.d/wp.conf /code/wordpress/ </span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> 40b99669a160:/etc/php-fpm.d/www.conf /code/wordpress/</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> 40b99669a160:/code/wordpress/wp-config-sample.php /code/wordpress/</span><br><span class="line"></span><br><span class="line">4、准备这些文件,检查配置文件都安装所需要求更改ok</span><br><span class="line">[root@docker01 ~]# ll /code/wordpress/</span><br><span class="line">-rw-r--r-- 1 root root  724 Sep  5 23:31 nginx.conf</span><br><span class="line">-rw-r--r-- 1 root root  278 Sep  5 20:12 start.sh</span><br><span class="line">-rw-rw-rw- 1 root root  18M Sep  5 23:24 wordpress-5.9.10.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root  324 Sep  5 19:53 wp.conf</span><br><span class="line">-rw-r--r-- 1 root root 3.0K Sep  5 21:39 wp-config-sample.php</span><br><span class="line">-rw-r--r-- 1 root root  18K Sep  5 23:32 www.conf</span><br></pre></td></tr></table></figure><p>2、编写Dockerfile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">1、编写DockerFile</span><br><span class="line">[root@docker01 ~]# <span class="built_in">cd</span> /code/wordpress/</span><br><span class="line">[root@docker01 wordpress]# vim Dockerfile</span><br><span class="line">FROM centos:7</span><br><span class="line">RUN  curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.huaweicloud.com/repository/conf/CentOS-7-anon.repo</span><br><span class="line">RUN  curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">RUN  sed -i <span class="string">&quot;s@http://mirrors.aliyun.com@https://mirrors.huaweicloud.com@g&quot;</span> /etc/yum.repos.d/epel.repo</span><br><span class="line">RUN  <span class="built_in">echo</span> -e  <span class="string">&quot;[php-webtatic]\nname = PHP Repository\nbaseurl = http://us-east.repo.webtatic.com/yum/el7/x86_64/\ngpgcheck = 0&quot;</span>&gt; /etc/yum.repos.d/php.repo</span><br><span class="line">RUN  yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb nginx  gettext</span><br><span class="line">RUN  groupadd -g 666 www</span><br><span class="line">RUN  useradd -u 666 -g 666 -s /sbin/nologin -M www</span><br><span class="line">RUN  <span class="built_in">mkdir</span> /code</span><br><span class="line">COPY nginx.conf /etc/nginx/nginx.conf</span><br><span class="line">COPY www.conf /etc/php-fpm.d/www.conf</span><br><span class="line">COPY wp.conf /etc/nginx/conf.d/wp.conf</span><br><span class="line">ADD  wordpress-5.9.10.tar.gz  /code</span><br><span class="line">COPY wp-config-sample.php /code/wordpress/wp-config-sample.php</span><br><span class="line">RUN  <span class="built_in">chown</span> -R  www.www /code</span><br><span class="line">RUN  <span class="built_in">chown</span> -R www.www /var/lib/nginx</span><br><span class="line">COPY start.sh /start.sh</span><br><span class="line">RUN  <span class="built_in">rm</span> -rf /code/wordpress-5.9.10.tar.gz</span><br><span class="line">RUN  yum clean all</span><br><span class="line">RUN  <span class="built_in">rm</span> -rf /etc/yum.repos.d/* </span><br><span class="line">CMD  [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;/start.sh&quot;</span>]</span><br><span class="line">EXPOSE 80/tcp 8080/tcp</span><br><span class="line">WORKDIR /code/wordpress</span><br><span class="line">VOLUME  /code/wordpress</span><br><span class="line">ENV  WORDPRESS_DB_NAME=wp_db</span><br><span class="line">ENV  WORDPRESS_DB_USER=wp_user</span><br><span class="line">ENV  WORDPRESS_DB_PASSWORD=123</span><br><span class="line">ENV  WORDPRESS_DB_HOST=localhost</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#构建</span><br><span class="line">[root@docker01 wordpress]# docker build -t wordpress-df:v1 .</span><br><span class="line">[root@docker01 ~]# docker images</span><br><span class="line">REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">wordpress-df                    v1        e389c28d9b3b   14 hours ago    831MB</span><br><span class="line"></span><br><span class="line">3、删除数据库数据目录，不然第二次启动不能建库，因为第一次的数据已经持久化了</span><br><span class="line">[root@docker02 ~]# <span class="built_in">rm</span> -rf /data</span><br><span class="line"></span><br><span class="line">4、运行带变量的容器</span><br><span class="line"><span class="comment">#运行数据库</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wp_db \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行wordpress容器</span></span><br><span class="line">docker run \</span><br><span class="line">--name wp \</span><br><span class="line">--<span class="built_in">link</span> mysql57 \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-e WORDPRESS_DB_HOST=mysql57 \</span><br><span class="line">-e WORDPRESS_DB_USER=wp_user \</span><br><span class="line">-e WORDPRESS_DB_PASSWORD=123 \</span><br><span class="line">-e WORDPRESS_DB_NAME=wp_db \</span><br><span class="line">-d wordpress-df:v1 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、浏览器访问</span><br><span class="line">10.0.0.101</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240906135218039.png" alt="image-20240906135218039"></p><p>3、优化Dockerfile的原则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 优化原则:构建的镜像尽可能小,构建速度尽可能快</span></span><br><span class="line">a: 使用体积小的linux镜像alpine作为基础镜像</span><br><span class="line">b：尽可能的清理无用的缓存文件（尽可能把多个RUN合并）</span><br><span class="line">c：修改dockerfile的时候，尽可能把修改的内容放在最后</span><br><span class="line">d：使用.dockerignore忽略构建docker镜像时，不需要的文件</span><br><span class="line">f:使用\减少不必要的文件RUN或ADD</span><br><span class="line"></span><br><span class="line">层数多不代表体积大，层数多和镜像里面的服务，命令，安装包有关，层数多是命令多，不会让文件数量，文件大小增加</span><br></pre></td></tr></table></figure><p>4、优化Dockerfile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">1、优化DockerFile</span><br><span class="line">[root@docker01 ~]# <span class="built_in">cd</span> /code/wordpress/</span><br><span class="line">[root@docker01 wordpress]# vim Dockerfile</span><br><span class="line">FROM centos:7</span><br><span class="line">RUN  curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.huaweicloud.com/repository/conf/CentOS-7-anon.repo &amp;&amp; \</span><br><span class="line">curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo &amp;&amp; \</span><br><span class="line">sed -i <span class="string">&quot;s@http://mirrors.aliyun.com@https://mirrors.huaweicloud.com@g&quot;</span> /etc/yum.repos.d/epel.repo &amp;&amp; \</span><br><span class="line"><span class="built_in">echo</span> -e  <span class="string">&quot;[php-webtatic]\nname = PHP Repository\nbaseurl = http://us-east.repo.webtatic.com/yum/el7/x86_64/\ngpgcheck = 0&quot;</span>&gt; /etc/yum.repos.d/php.repo &amp;&amp; \</span><br><span class="line">yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb nginx  gettext &amp;&amp; \</span><br><span class="line">groupadd -g 666 www &amp;&amp; \</span><br><span class="line">useradd -u 666 -g 666 -s /sbin/nologin -M www &amp;&amp; \</span><br><span class="line"><span class="built_in">mkdir</span> /code &amp;&amp; \</span><br><span class="line">yum clean all &amp;&amp; \</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/yum.repos.d/*</span><br><span class="line">COPY nginx.conf /etc/nginx/nginx.conf</span><br><span class="line">COPY www.conf /etc/php-fpm.d/www.conf</span><br><span class="line">COPY wp.conf /etc/nginx/conf.d/wp.conf</span><br><span class="line">ADD  wordpress-5.9.10.tar.gz  /code</span><br><span class="line">COPY wp-config-sample.php /code/wordpress/wp-config-sample.php</span><br><span class="line">RUN  <span class="built_in">chown</span> -R  www.www /code &amp;&amp; \</span><br><span class="line"><span class="built_in">chown</span> -R www.www /var/lib/nginx</span><br><span class="line">COPY start.sh /start.sh</span><br><span class="line">CMD  [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;/start.sh&quot;</span>]</span><br><span class="line">EXPOSE 80/tcp 8080/tcp</span><br><span class="line">WORKDIR /code/wordpress</span><br><span class="line">VOLUME  /code/wordpress</span><br><span class="line">ENV  WORDPRESS_DB_NAME=wp_db</span><br><span class="line">ENV  WORDPRESS_DB_USER=wp_user</span><br><span class="line">ENV  WORDPRESS_DB_PASSWORD=123</span><br><span class="line">ENV  WORDPRESS_DB_HOST=localhost</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#构建</span><br><span class="line">[root@docker01 wordpress]# docker build -t wordpress-df:v1 .</span><br><span class="line">[root@docker01 ~]# docker images</span><br><span class="line">REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">wordpress-df                    v2        1a14add5916b   11 seconds ago   530MB</span><br><span class="line"></span><br><span class="line">3、删除数据库数据目录，不然第二次启动不能建库，因为第一次的数据已经持久化了</span><br><span class="line">[root@docker02 ~]# <span class="built_in">rm</span> -rf /data</span><br><span class="line"></span><br><span class="line">4、运行带变量的容器</span><br><span class="line"><span class="comment">#运行数据库</span></span><br><span class="line">docker run \</span><br><span class="line">--name mysql57 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=wp_db \</span><br><span class="line">-e MYSQL_USER=wp_user \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:5.7.44</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行wordpress容器</span></span><br><span class="line">docker run \</span><br><span class="line">--name wp \</span><br><span class="line">--<span class="built_in">link</span> mysql57 \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-e WORDPRESS_DB_HOST=mysql57 \</span><br><span class="line">-e WORDPRESS_DB_USER=wp_user \</span><br><span class="line">-e WORDPRESS_DB_PASSWORD=123 \</span><br><span class="line">-e WORDPRESS_DB_NAME=wp_db \</span><br><span class="line">-d wordpress-df:v2 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、浏览器访问</span><br><span class="line">10.0.0.101</span><br></pre></td></tr></table></figure><h3 id="7、制作zabbix镜像">7、<strong>制作zabbix镜像</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">1、拉取相关镜像</span><br><span class="line">[root@docker01 ~]#  docker pull zabbix/zabbix-server-mysql</span><br><span class="line">[root@docker01 ~]#  docker pull zabbix/zabbix-web-nginx-mysql</span><br><span class="line">[root@docker01 ~]#  docker pull mysql:8.0</span><br><span class="line"></span><br><span class="line">2、#运行数据库</span><br><span class="line">注意：再次启动数据库之前先清空data目录</span><br><span class="line"><span class="built_in">rm</span> -rf /data/mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">--name mysql80 \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /data/mysql:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">-e MYSQL_DATABASE=zabbix \</span><br><span class="line">-e MYSQL_USER=zabbix \</span><br><span class="line">-e MYSQL_PASSWORD=123 \</span><br><span class="line">--restart=always \</span><br><span class="line">-d mysql:8.0 \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--character-set-server=utf8mb4 </span><br><span class="line">--collation-server=utf8mb4_bin </span><br><span class="line">--log_bin_trust_function_creators</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、yunx容器化zabbix-server</span><br><span class="line">docker run \</span><br><span class="line">--<span class="built_in">link</span> mysql80 \</span><br><span class="line">--name zabbix-server \</span><br><span class="line">-p 10051:10051 \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">&quot;mysql80&quot;</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">&quot;123&quot;</span> \</span><br><span class="line">-d zabbix/zabbix-server-mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、容器化zabbix-web</span><br><span class="line">docker run \</span><br><span class="line">--<span class="built_in">link</span> zabbix-server \</span><br><span class="line">--<span class="built_in">link</span> mysql80 \</span><br><span class="line">--name zabbix-web \</span><br><span class="line">-p 80:8080 \</span><br><span class="line">-p 8443:8443 \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">&quot;mysql80&quot;</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">&quot;123&quot;</span> \</span><br><span class="line">-e ZBX_SERVER_HOST=<span class="string">&quot;zabbix-server&quot;</span> \</span><br><span class="line">-e PHP_TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">-d zabbix/zabbix-web-nginx-mysql</span><br><span class="line"></span><br><span class="line">5、检查3个容器是否起来</span><br><span class="line">[root@docker01 ~]# docker ps </span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240905101309249.png" alt="image-20240905101309249"></p><p><img src="../image/study_img/image-20240905100315171.png" alt="image-20240905100315171"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">出现以上报错就是mysql8.0启动命令加参数</span><br><span class="line">--log_bin_trust_funetion</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240905143325160.png" alt="image-20240905143325160"></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡二、Docker对象操作</title>
      <link href="/posts/8f4c40fd.html"/>
      <url>/posts/8f4c40fd.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker对象操作">Docker对象操作</h2><h3 id="1、Docker镜像的操作"><strong>1、Docker镜像的操作</strong></h3><p>docker官网寻找镜像：<a href="https://hub.docker.com/">https://hub.docker.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#搜索镜像  (选项image可以省略)</span></span><br><span class="line">[root@docker01 ~]# docker search nginx</span><br><span class="line">或者</span><br><span class="line">[root@docker01 ~]# docker image search nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#显示镜像的关键过程</span></span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">history</span> alpine</span><br><span class="line">IMAGE          CREATED       CREATED BY                                      SIZE      COMMENT</span><br><span class="line">324bc02ae123   6 weeks ago   /bin/sh -c <span class="comment">#(nop)  CMD [&quot;/bin/sh&quot;]              0B        </span></span><br><span class="line">&lt;missing&gt;      6 weeks ago   /bin/sh -c <span class="comment">#(nop) ADD file:99093095d62d04215…   7.8MB  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#拉取镜像： (选项image可以省略)</span></span><br><span class="line">docker pull 从库名:标签名   (不加标签默认拉取latest版本的)</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker pull nginx:alpine </span><br><span class="line">或者</span><br><span class="line">[root@docker01 ~]# docker image pull nginx:alpine</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker pull nginx:latest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看拉取到的镜像</span></span><br><span class="line">[root@docker01 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">nginx        alpine    0f0eda053dc5   2 weeks ago     43.3MB</span><br><span class="line">nginx        latest    5ef79149e0ec   2 weeks ago     188MB</span><br><span class="line">alpine       latest    324bc02ae123   6 weeks ago     7.8MB</span><br><span class="line">busybox      latest    87ff76f62d36   15 months ago   4.26MB</span><br><span class="line">centos       6         5bf9684f4720   2 years ago     194MB</span><br><span class="line">centos       7         eeb6ee3f44bd   2 years ago     204MB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除镜像  rmi     (不加标签，默认删除latest)</span></span><br><span class="line">[root@docker01 ~]# docker rmi centos:6  </span><br><span class="line">或者</span><br><span class="line">[root@docker01 ~]# docker image <span class="built_in">rm</span> centos:6 </span><br><span class="line">或者</span><br><span class="line">[root@docker01 ~]# docker rmi 5bf9684f4720</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#导出镜像(一次只能导出一个)</span></span><br><span class="line">[root@docker01 ~]# docker save centos:7 -o /tmp/c7.tgz</span><br><span class="line">-o：output 输出</span><br><span class="line">或者</span><br><span class="line">[root@docker01 ~]# docker save centos:7 &gt; /tmp/c7_2.tgz</span><br><span class="line">&gt;：重定向</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# ll /tmp/ -h</span><br><span class="line">-rw-r--r-- 1 root root 202M Sep  3 14:22 c7_2.tgz</span><br><span class="line">-rw------- 1 root root 202M Sep  3 14:21 c7.tgz</span><br><span class="line">-rw------- 1 root root 202M Sep  3 14:35 eeb6ee3f44bd.tgz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#导入镜像</span></span><br><span class="line">[root@docker01 ~]# scp /tmp/c7.tgz  172.16.1.102:/tmp</span><br><span class="line"></span><br><span class="line">[root@docker02 ~]# docker image load -i /tmp/c7.tgz</span><br><span class="line">-i：input 输入</span><br><span class="line">或者  &lt;：标注输入</span><br><span class="line">[root@docker02 ~]# docker image load &lt; /tmp/c7.tgz</span><br><span class="line"></span><br><span class="line">镜像层数是分层的，镜像有相同的层数，不会占用磁盘空间，再次把c7_2.tgz导进去不会重复，不会占用磁盘空间，他会自动识别到是同一个层</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者使用ID来导出(不推荐，因为导入到新环境的时候没有名字)</span><br><span class="line">[root@docker01 ~]# docker save  eeb6ee3f44bd -o /tmp/eeb6ee3f44bd.tgz</span><br><span class="line">[root@docker01 ~]# scp /tmp/eeb6ee3f44bd.tgz 172.16.1.103:/tmp</span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# docker image load -i /tmp/eeb6ee3f44bd.tgz </span><br><span class="line">[root@docker03 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">&lt;none&gt;       &lt;none&gt;    eeb6ee3f44bd   2 years ago   204MB</span><br><span class="line"></span><br><span class="line"><span class="comment">#给镜像加标签(改名)</span></span><br><span class="line">docker tag ID号 镜像名:标签</span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# docker tag eeb6ee3f44bd centos:7</span><br><span class="line">[root@docker03 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">centos       7         eeb6ee3f44bd   2 years ago   204MB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看镜像的详细信息(常用)</span></span><br><span class="line">[root@docker02 ~]# docker inspect nginx:alpine</span><br></pre></td></tr></table></figure><h3 id="2、Docker容器的操作"><strong>2、Docker容器的操作</strong></h3><p>Docker 容器操作的选项</p><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>–name</td><td>自定义容器名</td></tr><tr><td>-d</td><td>将容器放后台启动</td></tr><tr><td>-it   (input   TTY)</td><td>分配一个交互式的终端</td></tr><tr><td>-p</td><td>端口映射</td></tr><tr><td>-P</td><td>映射随机端口</td></tr><tr><td>-v</td><td>数据卷映射</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#容器运行的原则：</span></span><br><span class="line">1、一个容器最好只做一件事</span><br><span class="line">(比如说搭wp,最后nginx跑一个容器,mysql跑一个容器,php跑一个容器,最好分开，如果想要一个容器跑多个应用，需要解决横向扩展的问题)</span><br><span class="line">2、容器运行必须保证容器内PID为1的进程一直存在</span><br><span class="line"></span><br><span class="line">PID为1的进程是谁决定的：</span><br><span class="line">1、docker run运行容器后加的命令</span><br><span class="line">2、如果在运行容器时没有加任何命令，则以容器镜像中的CMD中的命令作为PID为1的</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、#运行alpine容器</span><br><span class="line">[root@docker03 ~]# docker run alpine /bin/echo <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#查看正在运行的容器</span><br><span class="line">[root@docker02 ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                     PORTS     NAMES</span><br><span class="line">1ed0569ef98e   alpine    <span class="string">&quot;/bin/echo &#x27;hello wo…&quot;</span>   9 seconds ago    Exited (0) 9 seconds ago             affectionate_curie</span><br><span class="line">a1b13ddd5328   alpine    <span class="string">&quot;echo hello world&quot;</span>       19 seconds ago   Created                              goofy_bartik</span><br><span class="line">-a：查看所有容器</span><br><span class="line">[root@docker02 ~]# docker ps -aq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行一个容器</span></span><br><span class="line">docker run [1个或者多个选项]  镜像 [<span class="built_in">command</span>]</span><br><span class="line">[root@docker02 ~]# docker run centos:7 /bin/bash</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker run -it -d  busybox  /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#让容器在后台运行</span></span><br><span class="line">[root@docker03 ~]# docker run -d centos:7 tailf /etc/passwd</span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE      COMMAND               CREATED          STATUS          PORTS     NAMES</span><br><span class="line">29d1fc5f02e3   centos:7   <span class="string">&quot;tailf /etc/passwd&quot;</span>   28 seconds ago   Up 28 seconds             vibrant_ritchie</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行容器时给容器起一个名字</span></span><br><span class="line">[root@docker03 ~]# docker run --name wordpress -d nginx:alpine</span><br><span class="line">[root@docker03 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">c13fdc5ac70e   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   18 seconds ago   Up 17 seconds   80/tcp    wordpress</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行一个镜像并连进去</span></span><br><span class="line">[root@docker03 ~]# docker run -it centos:7 /bin/bash</span><br><span class="line"></span><br><span class="line">3、#连接一个容器</span><br><span class="line">如果/bin/bash不能连接进去，就换成/bin/sh</span><br><span class="line">[root@docker03 ~]# docker <span class="built_in">exec</span> -it 29d1fc5f02e3 /bin/bash</span><br><span class="line">查看PID为1的进程</span><br><span class="line">[root@29d1fc5f02e3 /]# ps -aux</span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root          1  0.0  0.0   4364   584 ?        Ss   07:11   0:00 tailf /etc/passwd</span><br><span class="line"></span><br><span class="line">--------docker run 帮我们做了哪些事-----</span><br><span class="line">[root@docker02 ~]# docker run nginx:alpine</span><br><span class="line"></span><br><span class="line">1、拉镜像</span><br><span class="line">docker pull nginx:alpine</span><br><span class="line">2、创建容器</span><br><span class="line">docker create nginx:alpine</span><br><span class="line">3、启动容器</span><br><span class="line">docker start 29d1fc5f02e3</span><br><span class="line">--------------------------------</span><br><span class="line"></span><br><span class="line">4、#停止容器</span><br><span class="line">[root@docker03 ~]# docker ps</span><br><span class="line">[root@docker03 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE      COMMAND               CREATED          STATUS          PORTS     NAMES</span><br><span class="line">29d1fc5f02e3   centos:7   <span class="string">&quot;tailf /etc/passwd&quot;</span>   17 minutes ago   Up 17 minutes             vibrant_ritchie</span><br><span class="line"></span><br><span class="line">加名字</span><br><span class="line">[root@docker03 ~]# docker stop vibrant_ritchie</span><br><span class="line">vibrant_ritchie</span><br><span class="line">或者 加ID</span><br><span class="line">[root@docker03 ~]# docker stop 29d1fc5f02e3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、#删除容器</span><br><span class="line">docker <span class="built_in">rm</span> -f [container <span class="built_in">id</span>]    </span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# docker <span class="built_in">rm</span> 29d1fc5f02e3</span><br><span class="line">[root@docker03 ~]# docker <span class="built_in">rm</span> -f 29d1fc5f02e3</span><br><span class="line"><span class="comment">#(强制删除  -f )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#批量删除</span></span><br><span class="line">[root@docker03 ~]# docker <span class="built_in">rm</span> -f $(docker ps -q)</span><br><span class="line">批量删除停止运行的容器 -aq</span><br><span class="line">[root@docker03 ~]# docker <span class="built_in">rm</span> -f $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、#代码的上传和拉取</span><br><span class="line"><span class="comment">#将代码上传到容器</span></span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> 1.txt 74ce711a7128:/root</span><br><span class="line"></span><br><span class="line"><span class="comment">#将容器里面的代码下载到本地</span></span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> 74ce711a7128:/etc/passwd ./</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用命令将nginx启动并且卡住，容器就不会结束</span><br><span class="line">[root@docker03 ~]# nginx -g <span class="string">&#x27;daemon off;&#x27;</span></span><br></pre></td></tr></table></figure><p>报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1、查看镜像</span><br><span class="line">[root@docker02 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">alpine       latest    324bc02ae123   6 weeks ago   7.8MB</span><br><span class="line"></span><br><span class="line">2、删除镜像，报错</span><br><span class="line">[root@docker02 ~]# docker rmi 324bc02ae123</span><br><span class="line">Error response from daemon: conflict: unable to delete 324bc02ae123 (must be forced) - image is being used by stopped container a1b13ddd5328</span><br><span class="line"></span><br><span class="line">3、删除依赖的容器</span><br><span class="line">[root@docker02 ~]# docker ps -a | grep <span class="string">&quot;alpine&quot;</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs docker <span class="built_in">rm</span></span><br><span class="line">1ed0569ef98e</span><br><span class="line">a1b13ddd5328</span><br><span class="line"></span><br><span class="line">4、删除镜像</span><br><span class="line">[root@docker02 ~]# docker rmi 324bc02ae123</span><br></pre></td></tr></table></figure><h3 id="3、容器的端口映射">3、<strong>容器的端口映射</strong></h3><p>容器需要做端口映射才能让外界访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">端口映射</span><br><span class="line">   -p 宿主机端口:容器端口</span><br><span class="line">   -P 宿主机IP:宿主机端口:容器端口  (多个容器都想使用80端口)</span><br><span class="line">   -p 宿主机IP::容器端口(随机端口)</span><br><span class="line">   -p 宿主机端口:容器端口/udp (但是一般TCP的比较多)</span><br><span class="line">   -p 宿主机IP::容器端口/udp使用宿主机的10.0.8.183这个ip地址的随机端口的udp协议映射容器的udp53端口</span><br><span class="line">   -p 81:80 -p 443:443 可以指定多个-p</span><br><span class="line">   -p 80-88:80-88 端口范围映射</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">1、#  -p：把容器的80端口映射到宿主机的80端口</span><br><span class="line">[root@docker03 ~]# docker run -p80:80 -d nginx:alpine</span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                               NAMES</span><br><span class="line">92e2dbca064e   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   9 seconds ago    Up 8 seconds    0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   adoring_hertz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">浏览器访问10.0.0.103，就可以访问nginx页面</span><br><span class="line"></span><br><span class="line">2、</span><br><span class="line">[root@docker03 ~]# docker run -p8080:80 -p90:90 -d nginx:alpine</span><br><span class="line"></span><br><span class="line">查看宿主机上有8080和90端口</span><br></pre></td></tr></table></figure><p>-P 宿主机IP:宿主机端口:容器端口    (针对不同的IP，访问不同的容器，多个容器都想使用80端口)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、先清楚之前允许的docker</span><br><span class="line">[root@docker03 ~]# docker <span class="built_in">rm</span> -f $(docker ps -q)</span><br><span class="line"></span><br><span class="line">2、端口映射</span><br><span class="line">[root@docker03 ~]# docker run -p10.0.0.103:80:80 -d nginx:alpine</span><br><span class="line">[root@docker03 ~]# docker run -p172.16.1.103:80:80 -d nginx:alpine</span><br><span class="line">[root@docker03 ~]# docker run -p127.0.0.1:80:80 -d nginx:alpine</span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                     NAMES</span><br><span class="line">7a87c542db29   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   25 seconds ago   Up 24 seconds   127.0.0.1:80-&gt;80/tcp      kind_mahavira</span><br><span class="line">a2d578ffff01   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   47 seconds ago   Up 46 seconds   172.16.1.103:80-&gt;80/tcp   interesting_joliot</span><br><span class="line">98e6d6611bd6   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   59 seconds ago   Up 58 seconds   10.0.0.103:80-&gt;80/tcp     interesting_jennings</span><br><span class="line"></span><br><span class="line"><span class="comment">#不同的网卡，不同的ip,访问方式不一样</span></span><br><span class="line">查看容器日志</span><br><span class="line">[root@docker03 ~]# docker logs -f 容器ID</span><br><span class="line">[root@docker03 ~]# docker logs -f 容器名</span><br><span class="line"></span><br><span class="line">3、查看10.0.0.103:80-&gt;80/tcp容器的访问日志</span><br><span class="line">[root@docker03 ~]# docker logs -f 98e6d6611bd6</span><br><span class="line">浏览器访问10.0.0.103，可以看到日志变化，请求过来了</span><br><span class="line"></span><br><span class="line">4、查看172.16.1.103:80-&gt;80/tcp容器的访问日志</span><br><span class="line">[root@docker03 ~]# docker logs -f a2d578ffff01</span><br><span class="line"></span><br><span class="line">打开一个新终端，使用curl命令访问，看到日志有请求就访问成功</span><br><span class="line">[root@docker03 ~]# curl 172.16.1.103</span><br><span class="line"></span><br><span class="line">5、查看127.0.0.1:80-&gt;80/tcp容器的访问日志</span><br><span class="line">[root@docker03 ~]# docker logs  -f 7a87c542db29</span><br><span class="line">打开一个新终端，使用curl命令访问，看到日志有请求就访问成功</span><br><span class="line">[root@docker03 ~]# curl 127.0.0.1</span><br></pre></td></tr></table></figure><p>-p 宿主机IP::容器端口(随机端口)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1、在宿主机上起5个随机端口</span><br><span class="line">[root@docker03 ~]# docker run -p10.0.0.103::80 -d nginx:alpine</span><br><span class="line">[root@docker03 ~]# docker run -p10.0.0.103::80 -d nginx:alpine</span><br><span class="line">[root@docker03 ~]# docker run -p10.0.0.103::80 -d nginx:alpine</span><br><span class="line">[root@docker03 ~]# docker run -p10.0.0.103::80 -d nginx:alpine</span><br><span class="line">[root@docker03 ~]# docker run -p10.0.0.103::80 -d nginx:alpine</span><br><span class="line"></span><br><span class="line">2、查看端口</span><br><span class="line">[root@docker03 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS              PORTS                      NAMES</span><br><span class="line">57ae53de8781   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   About a minute ago   Up About a minute   10.0.0.103:32776-&gt;80/tcp   distracted_tharp</span><br><span class="line">fe081b7a25ac   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   About a minute ago   Up About a minute   10.0.0.103:32775-&gt;80/tcp   kind_knuth</span><br><span class="line">2ed44ac6261f   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   About a minute ago   Up About a minute   10.0.0.103:32774-&gt;80/tcp   clever_sinoussi</span><br><span class="line">c009cf3348ff   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   About a minute ago   Up About a minute   10.0.0.103:32773-&gt;80/tcp   inspiring_hawking</span><br><span class="line">fe02a74ce3d2   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   About a minute ago   Up About a minute   10.0.0.103:32772-&gt;80/tcp   keen_yonath</span><br><span class="line"></span><br><span class="line">3、浏览器访问这些页面，可以看到nginx测试页</span><br><span class="line">10.0.0.103:32776</span><br><span class="line">10.0.0.103:32775</span><br><span class="line">10.0.0.103:32774</span><br><span class="line">10.0.0.103:32773</span><br><span class="line">10.0.0.103:32772</span><br></pre></td></tr></table></figure><p>-p 80-88:80-88 端口范围映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@docker03 ~]# docker run  -p81-85:81-85 -d nginx:alpine</span><br><span class="line"></span><br><span class="line">[root@docker03 ~]# netstat -lntup|grep <span class="string">&#x27;\b8[0-9]\b&#x27;</span></span><br><span class="line">tcp        0      0 0.0.0.0:81              0.0.0.0:*</span><br><span class="line">tcp        0      0 0.0.0.0:82              0.0.0.0:*</span><br><span class="line">tcp        0      0 0.0.0.0:83              0.0.0.0:*</span><br><span class="line">tcp        0      0 0.0.0.0:84              0.0.0.0:*</span><br><span class="line">tcp        0      0 0.0.0.0:85              0.0.0.0:*</span><br><span class="line">tcp6       0      0 :::81                   :::*     </span><br><span class="line">tcp6       0      0 :::82                   :::*     </span><br><span class="line">tcp6       0      0 :::83                   :::*     </span><br><span class="line">tcp6       0      0 :::84                   :::*     </span><br><span class="line">tcp6       0      0 :::85                   :::*     </span><br></pre></td></tr></table></figure><h3 id="4、案例：运行容器，部署游戏代码">4、<strong>案例：运行容器，部署游戏代码</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1、下载代码</span><br><span class="line">[root@docker01 ~]# wget http://test.driverzeng.com/Nginx_Code/h5_games.zip</span><br><span class="line"></span><br><span class="line">2、运行nginx容器</span><br><span class="line">[root@docker01 ~]# docker run -p80:80 -d nginx:alpine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、查看运行的PID</span><br><span class="line">[root@docker01 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS              PORTS                               NAMES</span><br><span class="line">74ce711a7128   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   About a minute ago   Up About a minute   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   zealous_shaw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、查看是否存在工作目录     看到不存在工作目录</span><br><span class="line">[root@docker01 ~]# docker inspect nginx:alpine</span><br><span class="line"></span><br><span class="line">5、连接到容器里面，查看站点目录</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">exec</span> -it 74ce711a7128 /bin/sh</span><br><span class="line">/ <span class="comment"># vi /etc/nginx/conf.d/default.conf </span></span><br><span class="line"> root   /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">6、将代码上传</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> h5_games.zip 74ce711a7128:/usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">7、这次连接到容器里面</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">exec</span> -it 74ce711a7128 /bin/sh</span><br><span class="line">/ <span class="comment"># </span></span><br><span class="line">/ <span class="comment"># cd /usr/share/nginx/html/</span></span><br><span class="line">/usr/share/nginx/html <span class="comment"># unzip h5_games.zip </span></span><br><span class="line"></span><br><span class="line">/usr/share/nginx/html <span class="comment"># ls</span></span><br><span class="line">50x.html      __MACOSX      h5_games      h5_games.zip  index.html</span><br><span class="line"></span><br><span class="line">8、浏览器访问</span><br><span class="line">10.0.0.101/h5_games</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240903120700780.png" alt="image-20240903120700780"></p><p>以上操作都比较麻烦，而且如果这个容器坏了，起不来了，需要重复执行什么的操作，</p><p>方法一：把正在运行的容器打成一个镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1、新开一个窗口操作</span><br><span class="line">[root@docker01 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                               NAMES</span><br><span class="line">76a4b880872b   nginx:alpine   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   22 minutes ago   Up 22 minutes   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   funny_sinoussi</span><br><span class="line"></span><br><span class="line">2、#把正在运行的容器打成一个镜像</span><br><span class="line">[root@docker01 ~]# docker commit 76a4b880872b h5:v1</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">h5           v1        6fcc45b1c065   51 seconds ago   89.9MB</span><br><span class="line"></span><br><span class="line">3、把正在运行的容器删除</span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">rm</span> -f $(docker ps -qa)</span><br><span class="line">76a4b880872b</span><br><span class="line"></span><br><span class="line">4、现在没有任何容器运行，将打的镜像导入</span><br><span class="line">导入在本地运行：docker run -p80:80 -d h5:v1</span><br><span class="line">导出到其他机器运行：</span><br><span class="line">docker save h5:v1 -o /tmp/h5.tgz</span><br><span class="line">scp /tmp/h5.tgz 10.0.0.102:/tmp</span><br><span class="line">docker load &lt; /tmp/h5.tgz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、运行导入的容器</span><br><span class="line">[root@docker02 ~]# docker run -p80:80 -d h5:v1</span><br><span class="line"></span><br><span class="line">6、浏览器访问</span><br><span class="line">10.0.0.102/h5_games</span><br></pre></td></tr></table></figure><p>方法二：可以使用文件映射</p><h3 id="5、Docker容器文件映射">5、<strong>Docker容器文件映射</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-v ：数据卷映射 </span><br><span class="line">-v ：宿主机绝对路径:容器绝对路径  (常用)</span><br><span class="line">-v ：容器目录     <span class="comment">#创建一个随机卷,来持久化容器的目录下的数据，适合保存变化的数据</span></span><br><span class="line">-v ：卷名:容器目录 <span class="comment">#创建一个固定名字的卷,来持久化容器的目录下的数据，适合数据共享</span></span><br><span class="line"></span><br><span class="line">1、#制作一个数据卷映射</span><br><span class="line">[root@docker02 ~]# docker run --name h5 -p 80:80 -v  /code/h5_games:/usr/share/nginx/html -d nginx:alpine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、code目录会自动创建，只需要将代码解压到code目录</span><br><span class="line">[root@docker02 ~]# unzip h5_games.zip -d /code/</span><br><span class="line">[root@docker02 ~]# <span class="built_in">ls</span> /code/h5_games/</span><br><span class="line">ceshi  game  img  index.html  readme.txt</span><br><span class="line"></span><br><span class="line">3、连接进去,并查看站点目录是否存在代码</span><br><span class="line">[root@docker02 ~]# docker <span class="built_in">exec</span> -it h5 /bin/sh</span><br><span class="line">/ <span class="comment"># ls /usr/share/nginx/html</span></span><br><span class="line">ceshi       game        img         index.html  readme.txt</span><br><span class="line"></span><br><span class="line">4、访问网页</span><br><span class="line">10.0.0.102   出现小游戏的页面就映射完成</span><br></pre></td></tr></table></figure><h3 id="6、手动制作h5小游戏的镜像">6、<strong>手动制作h5小游戏的镜像</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">1、运行一个基础镜像并连进去</span><br><span class="line">[root@docker01 ~]# docker run -it centos:7 /bin/bash</span><br><span class="line"></span><br><span class="line">2、因为使用centos镜像，里面没有nginx,需要安装nginx</span><br><span class="line">[root@afc3071510f6 /]#  yum -y install nginx</span><br><span class="line">发现没有源</span><br><span class="line"></span><br><span class="line">3、换源</span><br><span class="line">[root@afc3071510f6 /]#  curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.huaweicloud.com/repository/conf/CentOS-7-anon.repo</span><br><span class="line">[root@afc3071510f6 /]#  curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"></span><br><span class="line">4、优化源</span><br><span class="line">[root@afc3071510f6 /]# vi /etc/yum.repos.d/CentOS-Base.repo  </span><br><span class="line">[updates]</span><br><span class="line">....</span><br><span class="line">enabled=0</span><br><span class="line"></span><br><span class="line">5、下载nginx</span><br><span class="line">[root@afc3071510f6 /]# yum -y install nginx</span><br><span class="line"></span><br><span class="line">6、清空站点目录</span><br><span class="line">[root@afc3071510f6 /]# <span class="built_in">rm</span> -rf /usr/share/nginx/html/*</span><br><span class="line"></span><br><span class="line">7、新开一个窗口，将解压代码上传到容器的站点目录</span><br><span class="line">root@docker01 ~]# unzip h5_games.zip </span><br><span class="line">[root@docker01 ~]# docker <span class="built_in">cp</span> h5_games afc3071510f6:/usr/share/nginx/html</span><br><span class="line"></span><br><span class="line">8、容器查看代码上传成功，并把代码移动到站点目录</span><br><span class="line">[root@afc3071510f6 /]# <span class="built_in">mv</span> /usr/share/nginx/html/h5_games/* /usr/share/nginx/html/</span><br><span class="line">[root@afc3071510f6 /]# <span class="built_in">ls</span> /usr/share/nginx/html/</span><br><span class="line">ceshi  game  h5_games  img  index.html  readme.txt</span><br><span class="line"></span><br><span class="line">9、启动nginx  curl一下是否成功</span><br><span class="line">[root@afc3071510f6 /]# nginx</span><br><span class="line">[root@afc3071510f6 /]# curl 127.0.0.1</span><br><span class="line"></span><br><span class="line">10、如果现在退出进行，这个容器就会退出，nginx就会结束，这个镜像相当于没起nginx,没有办法让这个容器起来</span><br><span class="line">[root@docker01 ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE      COMMAND       CREATED          STATUS                     PORTS     NAMES</span><br><span class="line">afc3071510f6   centos:7   <span class="string">&quot;/bin/bash&quot;</span>   24 minutes ago   Exited (0) 8 seconds ago             friendly_wozniak</span><br><span class="line"></span><br><span class="line">11、打镜像</span><br><span class="line">[root@docker01 ~]# docker commit afc3071510f6 h5_game:v2</span><br><span class="line"></span><br><span class="line">12、运行这个镜像</span><br><span class="line">[root@docker01 ~]# docker run --name h5 -p 80:80 -d h5_game:v2 /sbin/nginx -g <span class="string">&#x27;daemon off;&#x27;</span></span><br><span class="line"></span><br><span class="line">/sbin/nginx：nginx启动</span><br><span class="line">daemon off;：卡主</span><br><span class="line"></span><br><span class="line">13、浏览器访问网页</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">1.体积太大</span><br><span class="line">2.启动不方便</span><br><span class="line">3.无法直接修改CMD</span><br><span class="line">4.没有声明端口</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240903185831846.png" alt="image-20240903185831846"></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍡一、Docker容器的介绍和部署</title>
      <link href="/posts/a56cb35d.html"/>
      <url>/posts/a56cb35d.html</url>
      
        <content type="html"><![CDATA[<h2 id="docker容器">docker容器</h2><p>Docker便用G00g1e公司推出WG0语言进行开友实现，基于操作条统内孩中时Cgroup(贷源控制)NameSpace(资源隔离)与0verlayFS(数据存储)等技术，实现基于操作系统层面的(应用)虚拟化技术,<br>最初实现是基于LXC技术，从0.7版本以后开始去除LXC，转而使用自行开发的libcontainer(容器管理技术)。</p><p>容器技术发展架构图：</p><p><img src="../image/study_img/image-20240902083945201.png" alt="image-20240902083945201"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">为什么有云平台：因为方便快捷，还便宜</span><br><span class="line">购买物理机，不仅还要买服务器，还要租机房</span><br><span class="line"></span><br><span class="line">VMware Workstation:虚拟化工具，启动虚拟机的，使用的编排工具是的：Vcenter server</span><br><span class="line">KVM：虚拟化工具，启动虚拟机的    使用的编排工具是的：OpenStack</span><br><span class="line">Docker：容器化工具，容器运行时   使用的编排工具是的：(docker自己写的编排工具)Docker-swarm、mesos、kubernetes(最灵活的,常用的)</span><br><span class="line">K8s,谷歌的产品</span><br><span class="line"></span><br><span class="line">编排工具的作用：使部署虚拟化的产品变成一个集群</span><br><span class="line"></span><br><span class="line">下载一个工具 tightVNC ,就可以连接虚拟机里面创建的虚拟机了</span><br></pre></td></tr></table></figure><p>容器与虚拟机对比<br>传统虚拟化和docker分层对比</p><p><img src="../image/study_img/image-20240902092008550.png" alt="image-20240902092008550"></p><p>容器化产品概念</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#内核的技术  (系统是在内核的基础上封装出来的)</span></span><br><span class="line">Namespace：名称空间，命名空间(作用是：资源隔离)起一个容器就是起一个进程，然后再做资源隔离</span><br><span class="line">Cgroup：资源控制、资源计算</span><br><span class="line"></span><br><span class="line">docker是调用内核接口的工具</span><br></pre></td></tr></table></figure><p>VM虚拟化和Docker特性对比</p><table><thead><tr><th>特性</th><th>Docker</th><th>VM</th></tr></thead><tbody><tr><td>启动速度</td><td>秒级</td><td>分钟级</td></tr><tr><td>硬盘使用</td><td>一般为MB</td><td>一般为GB</td></tr><tr><td>性能</td><td>接近原生单机支持上千个容器</td><td>弱于原生</td></tr><tr><td>系统支持量</td><td>单机支持上千个容器</td><td>一般几十个</td></tr><tr><td>隔离性</td><td>安全隔离</td><td>完全隔离</td></tr></tbody></table><p>容器化产品的概念</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Container Runtime：容器运行时</span></span><br><span class="line">- docker</span><br><span class="line">- CRI-O</span><br><span class="line">- containerd</span><br><span class="line"></span><br><span class="line"><span class="comment">## 内核技术</span></span><br><span class="line">Namespace：名称空间，命名空间（资源隔离）https://man7.org/linux/man-pages/man7/namespaces.7.html</span><br><span class="line"></span><br><span class="line">Cgroup：资源控制、资源计算 https://man7.org/linux/man-pages/man7/cgroups.7.html</span><br><span class="line"></span><br><span class="line">资源限制：例如设定任务指定内存</span><br><span class="line">优先级分配：比如跟任务分配的CPU时间，片数，磁盘IO，带宽大小来控制任务的优先级</span><br><span class="line">资源统计：统计CPU，内存，IO等资源使用时长，该功能比较适合用于计费</span><br><span class="line">任务控制：cgroup可以对任务进行 运行，挂起，恢复等操作</span><br></pre></td></tr></table></figure><h3 id="1、Docker的三个概念">1、<strong>Docker的三个概念</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#images(镜像)</span></span><br><span class="line">Docker镜像可以看做是一个特殊的文件系统，除了提供容器运行时所需要的程序、库、资源、配置文件以外，还包合了一些为运行时，准备的配置参数(匿名卷，环境变量，用户...),镜像是不可更改的</span><br><span class="line">Docker容器的储存方式：通过overlayFS文件系统进行储存</span><br><span class="line">upper</span><br><span class="line">lower</span><br><span class="line">merge</span><br><span class="line"></span><br><span class="line">为了环境的统一，方便统一管理</span><br><span class="line"></span><br><span class="line"><span class="comment">#Container(容器)</span></span><br><span class="line">容器的定义和镜像，几乎是一模一样，唯一区别在于容器的最上面那一层是可读可写的。</span><br><span class="line">(类似于用Docker1起的一台虚拟机)</span><br><span class="line">理解：一个容器就是一台虚拟机</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Repository(仓库)</span></span><br><span class="line">上传镜像，存放镜像</span><br><span class="line"></span><br><span class="line">仓库是Docker用来存放镜像的地方，类似于我们之前常用的代码仓库。</span><br><span class="line">通常一个仓库会包含，同一个软件，不同版本的镜像</span><br><span class="line">我们可以通过&lt;仓库名&gt;:&lt;标签&gt;格式来指定具体使用哪个版本的镜像，如果不给标签，那么默认以Latest作为默认标签</span><br><span class="line"></span><br><span class="line"><span class="comment">#docker的仓库有2种</span></span><br><span class="line">1、Harbor   图形化仓库</span><br><span class="line">2、Registry 命令行仓库</span><br></pre></td></tr></table></figure><h3 id="2、Docker的组成">2、<strong>Docker的组成</strong></h3><p>Docker是C/S结构的服务    <code>docker client</code> 和 <code>docker server</code></p><p>Docker客户端是Docker用户与Docker交互的主要方式<br>当使用Docker命令行运行命令时，Docker客户端将这些命令发送给服务端，服务端执行这些命令Docker命令使用DockerAPI<br>Docker客户端可以与多个服务端进行通讯</p><p><img src="../image/study_img/image-20240902110827668.png" alt="image-20240902110827668"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Docker的客户端：</span><br><span class="line">- 命令行 docker</span><br><span class="line">- 图形化 dashboard(UI界面)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">用户———&gt;使用docker客户端———&gt;调用DOcker的接口———&gt;连接到DOcker server——&gt;调用内核Namespace、cgroup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#稳定的版本</span></span><br><span class="line">docker 19.3</span><br><span class="line">k8 1.19</span><br><span class="line"></span><br><span class="line">为什么</span><br><span class="line">下了一个nginx容器，想让他变成web服务器</span><br></pre></td></tr></table></figure><h3 id="3、部署DOcker">3、<strong>部署DOcker</strong></h3><p>1、安装docker-ce</p><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>docker01</td><td>10.0.0.101  /  172.16.1.101</td><td></td></tr><tr><td>docker02</td><td>10.0.0.102  /  172.16.1.102</td><td></td></tr><tr><td>docker03</td><td>10.0.0.103  /  172.16.1.103</td><td></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1、卸载之前安装的DOcker</span><br><span class="line">yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br><span class="line"></span><br><span class="line">2、换源</span><br><span class="line">[root@docker01 ~]# vim /etc/yum.repos.d/docker-ce.repo </span><br><span class="line">[docker-ce-stable]</span><br><span class="line">name=Docker CE Stable - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://download.docker.com/linux/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/stable</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# sed -i <span class="string">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line">3、下载docker</span><br><span class="line">[root@docker01 ~]# yum install -y docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>如果下载的慢，把base源里面的updat关闭</p><p>[root@docker03 ~]# vim /etc/yum.repos.d/CentOS-Base.repo</p><p><img src="../image/study_img/image-20240902114920501.png" alt="image-20240902114920501"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">4、启动</span><br><span class="line">[root@docker01 ~]# systemctl start docker</span><br><span class="line">[root@docker01 ~]# systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line">5、查看docker信息</span><br><span class="line">[root@docker01 ~]# docker info</span><br><span class="line"></span><br><span class="line">Docker Root Dir: /var/lib/docker  <span class="comment">#Docker的储存目录(工作目录)</span></span><br><span class="line"></span><br><span class="line">6、启动docker就会生成一个socket文件</span><br><span class="line">[root@docker01 ~]# ll /var/run/docker.sock </span><br><span class="line">srw-rw---- 1 root docker 0 Sep  2 12:17 /var/run/docker.sock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7、加速镜像</span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">[root@docker01 ~]# <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;dns&quot;</span>: [<span class="string">&quot;8.8.8.8&quot;</span>, <span class="string">&quot;8.8.4.4&quot;</span>],</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dockerproxy.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.nju.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">备用加速：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>:[<span class="string">&quot;https://docker.1panel.live&quot;</span>, <span class="string">&quot;https://hub.rat.dev/&quot;</span>, <span class="string">&quot;https://docker.chenby.cn&quot;</span>, <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# systemctl daemon-reload</span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br><span class="line"></span><br><span class="line">8、测试拉取nginx镜像</span><br><span class="line">[root@docker02 ~]# docker pull nginx</span><br><span class="line">等待2分钟才拉取的下来</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker pull nginx:alpine     (最小的操作系统alpine)</span><br><span class="line">[root@docker01 ~]# docker pull nginx:latest</span><br><span class="line">[root@docker01 ~]# docker pull busybox</span><br><span class="line"></span><br><span class="line">9、查看拉取的镜像</span><br><span class="line">[root@docker01 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">nginx        alpine    0f0eda053dc5   2 weeks ago     43.3MB</span><br><span class="line">nginx        latest    5ef79149e0ec   2 weeks ago     188MB</span><br><span class="line">busybox      latest    87ff76f62d36   15 months ago   4.26MB</span><br><span class="line">centos       7         eeb6ee3f44bd   2 years ago     204MB</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕12、MHA高可用</title>
      <link href="/posts/74c516b4.html"/>
      <url>/posts/74c516b4.html</url>
      
        <content type="html"><![CDATA[<h2 id="MHA高可用">MHA高可用</h2><h3 id="1、MHA软件介绍"><strong>1、MHA软件介绍</strong></h3><p><font color=red>原理：当Master出现故障时，它可以自动将最新数据的Slave提升为新的Master,然后将所有其他的Slave重新指向新的Master。</font></p><p>MHA能够在较短的时间内实现自动故障检测和故障转移，通常在10-30秒以内;在复制框架中，MHA能够很好地解决复制过程中的数据一致性问题，由于不需要在现有的replication中添加额外的服务器，仅需要一个manager节点，而一个Manager能管理多套复制，所以能大大地节约服务器的数量;另外，安装简单，无性能损耗，以及不需要修改现有的复制部署也是它的优势之处。</p><p><img src="../image/study_img/image-20240827090218613.png" alt="image-20240827090218613"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">从库不更新binlog,只更新relay-log,这个可以解决的，可以配置让他更新binlog,加参数</span><br><span class="line"></span><br><span class="line">Rvs就是阿里云上的数据库，ecs是云主机</span><br><span class="line"></span><br><span class="line">Heartbeat+DRBD  也是做高可用的 心跳检测</span><br><span class="line"></span><br><span class="line">MHA的manager最好不要安装在主库上，就怕断电了，mha不能工作，安装在3台从库上可以，或者重新找一台新机器安装MHA(MHA就是一个监控软件。监控主库心跳的)</span><br></pre></td></tr></table></figure><p><strong>工作流程</strong></p><p>1)把宕机的master二进制日志保存下来。<br>2)找到binlog位置点最新的slave。<br>3)在binlog位置点最新的slave上用relay log（差异日志）修复其它slave。<br>4)将宕机的master上保存下来的二进制日志恢复到含有最新位置点的slave上。<br>5)将含有最新位置点binlog所在的slave提升为master。<br>6)将其它slave重新指向新提升的master，并开启主从复制。</p><p><img src="../image/study_img/image-20240827093920829.png" alt="image-20240827093920829"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">keepalived有局限性，他怎么知道哪台机器的数据最新？</span><br><span class="line"></span><br><span class="line">MHA做完切换，运维无感知，需要有一个通知，MHA自带一个通知工具</span><br><span class="line"></span><br><span class="line">问题：</span><br><span class="line">1、binlog的保存位置在哪       (谁被提升为主库就发缺失数据送给谁)</span><br><span class="line">2、down机的主库修复好之后，如何加入集群？</span><br><span class="line">3、down机的主库修复好之后，加入集群的角色是什么？</span><br></pre></td></tr></table></figure><h3 id="2、MHA架构图"><strong>2、MHA架构图</strong></h3><p><img src="../image/study_img/image-20240827101716633.png" alt="image-20240827101716633"></p><p><strong>MHA的工具</strong></p><p>MHA node的工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@dbe1 bin]# 11</span><br><span class="line">-rwxrwxr-x1 root root 17639 Mar 23 2018 apply_diff relay_logs      <span class="comment">#对比relay log,找到新主库</span></span><br><span class="line">-rwxrwxr-x 1 root root 4807 Mar 23 2018 filter mysqlbinlog         <span class="comment">#截取binlog</span></span><br><span class="line">-rwxrwxr-x 1 root root 8337 Mar 23 2018 purge_relay_logs           <span class="comment">#删除relay log</span></span><br><span class="line">-rwxrwxr-x 1 root root 7525 Mar 23 2018 save binary logs           <span class="comment">#保存binlog</span></span><br></pre></td></tr></table></figure><p>MHA manager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  manager里面的工具程序会自动调用，也可以手动执行</span></span><br><span class="line"></span><br><span class="line">[root@dbe1 bin]# 11</span><br><span class="line">-rwxrwxr-x 1 root root 1995 Mar 232018 masterha_check_repl          <span class="comment">#检测主从复制</span></span><br><span class="line">-rwxrwxr-x 1 root root 1779 Mar 232018 masterha_check_ssh           <span class="comment">#检测ssh免密</span></span><br><span class="line">-rwxrwxr-x 1 root root 1865 Mar 232018 masterha_check_status        <span class="comment">#检测mha的运行状态(相当于systemctl status mha)</span></span><br><span class="line">-rwxrwxr-x 1 root root 3201 Mar 232018 masterha_conf_host           <span class="comment">#mha虚拟主机配置(MHA做完切换后，会将宕机主库从配置文件中摘除)</span></span><br><span class="line">-rwxrwxr-x 1 root root 2517 Mar 232018 masterha_manager             <span class="comment">#MHA的启动命令(相当于systemctl start mha)</span></span><br><span class="line">-rwxrwxr-x 1 root root 2165 Mar 232018 masterha_master_monitor      <span class="comment">#检测主库心跳</span></span><br><span class="line">-rwxrwxr-x 1 root root 2373 Mar 232018 masterha_master_switch       <span class="comment">#切换工具</span></span><br><span class="line">-rwxrwxr-x 1 root root 5172 Mar 232018 masterha_secondary_check     <span class="comment">#检测ICP/IP连接</span></span><br><span class="line">-rwxrwxr-x 1 root root 1739 Mar 232018 masterha_stop                <span class="comment">#停止MHA的命令(相当于systemctl stop mha)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#/root/mha4mysgl-manager-0.58/samples/scripts</span></span><br><span class="line">-rwxrwxr-x 1 root root  3648 Mar 23 2018 master_ip_failover</span><br><span class="line">-rwxrwxr-x 1 root root  9870 Mar 23 2018 master_ip_online_change</span><br><span class="line">-rwxrwxr-x 1 root root 11867 Mar 23 2018 power_manager</span><br><span class="line">-rwxrwxr-x 1 root root  1360 Mar 23 2818 send_report</span><br></pre></td></tr></table></figure><p>MHA优点总结</p><p>1）Masterfailover and slave promotion can be done very quickly<br>自动故障转移快</p><p>2）Mastercrash does not result in data inconsistency<br>主库崩溃不存在数据一致性问题</p><p>3）Noneed to modify current MySQL settings (MHA works with regular MySQL)<br>不需要对当前mysql环境做重大修改</p><p>4）Noneed to increase lots of servers<br>不需要添加额外的服务器(仅一台manager就可管理上百个replication)</p><p>5）Noperformance penalty<br>性能优秀，可工作在半同步复制和异步复制，当监控mysql状态时，仅需要每隔N秒向master发送ping包(默认3秒)，所以对性能无影响。你可以理解为MHA的性能和简单的主从复制框架性能一样。</p><p>6）Works with any storage engine<br>只要replication支持的存储引擎，MHA都支持，不会局限于innodb</p><h3 id="3、部署MHA"><strong>3、部署MHA</strong></h3><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>db01</td><td>10.0.0.51  /  172.16.1.51</td><td>暂时的主库、MHA客户端</td><td>mysql 5.6、MHA node</td></tr><tr><td>db02</td><td>10.0.0.52  /  172.16.1.52</td><td>暂时的从库、MHA客户端</td><td>mysql 5.6、MHA node</td></tr><tr><td>db03</td><td>10.0.0.53  /  172.16.1.53</td><td>暂时的从库、MHA客户端</td><td>mysql 5.6、MHA node</td></tr><tr><td>db04</td><td>10.0.0.54 /  172.16.1.54</td><td>暂时的从库、MHA客户端</td><td>mysql 5.6、MHA node</td></tr><tr><td>lb01</td><td>10.0.0.5 /  172.16.1.5</td><td>MHA的管理端</td><td>MHA manager、mariadb</td></tr></tbody></table><p>1、MHA先决条件，需要先部署主从</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#传统主从复制</span></span><br><span class="line">1、主库开启binlog,主库不开</span><br><span class="line">2、主库和从库server_id不同，从库之间可以相同</span><br><span class="line">3、主库要创建主从复制用户，从库可以不创建</span><br><span class="line"></span><br><span class="line"><span class="comment">#基于MHA的主从复制</span></span><br><span class="line">1、主库、从库也要开启binlog</span><br><span class="line">2、主库、从库server_id不同，从库之间也不能相同</span><br><span class="line">3、主库、从库必须创建主从复制用户</span><br><span class="line">4、关闭只读</span><br><span class="line"></span><br><span class="line">1、主库配置文件</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=1</span><br><span class="line">lower_case_table=1</span><br><span class="line">innodb_data_file_path=ibdata1:76M;ibdata2:50M:autoextend</span><br><span class="line">binlog_format=row</span><br><span class="line"><span class="comment">#指定是否开启慢查询日志</span></span><br><span class="line">slow_query_log=1</span><br><span class="line"><span class="comment">#指定慢日志文件存放位置（默认在data）</span></span><br><span class="line">slow_query_log_file=/app/mysql-5.6.50/data/db01-slow.log</span><br><span class="line"><span class="comment">#设定慢查询的阀值(默认10s)</span></span><br><span class="line">long_query_time=0.05</span><br><span class="line"><span class="comment">#不使用索引的慢查询语句是否记录到日志</span></span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line"><span class="comment">#查询检查返回少于该参数指定行的SQL不被记录到慢查询日志  （鸡肋）</span></span><br><span class="line">min_examined_row_limit=100</span><br><span class="line">skip_name_resolve</span><br><span class="line">relay_log_purge = 0</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br><span class="line">创建用户</span><br><span class="line">grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、从库配置文件</span><br><span class="line"><span class="comment">#db02</span></span><br><span class="line">[root@db02 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=2</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">skip-name-resolve</span><br><span class="line">relay_log_purge = 0</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line"></span><br><span class="line">[root@db02 data]#  /etc/init.d/mysqld restart</span><br><span class="line">创建用户</span><br><span class="line">grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#db03</span></span><br><span class="line">[root@db03 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=3</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">skip-name-resolve</span><br><span class="line">relay_log_purge = 0</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line"></span><br><span class="line">[root@db03 data]#  /etc/init.d/mysqld restart</span><br><span class="line">创建用户</span><br><span class="line">grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#db04</span></span><br><span class="line">[root@db04 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=4</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">skip-name-resolve</span><br><span class="line">relay_log_purge = 0</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db04 data]#  /etc/init.d/mysqld restart</span><br><span class="line">创建用户</span><br><span class="line">grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#3台从库设置只读，(在命令行临时设置)，不能在配置文件设置，(mha切换的时候会重启mysql,让只读重启失效，临时设置重启会失效)</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> global read_only=1;</span><br><span class="line"></span><br><span class="line">4、#4台数据库关闭relay-log自动删除功能(临时生效)</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> global relay_log_purge = 0;</span><br><span class="line"></span><br><span class="line"><span class="comment">#临时+永久，不用重启    (永久生效)</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">relay_log_purge=0</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">relay_log_purge=0</span><br><span class="line"></span><br><span class="line">[root@db03 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">relay_log_purge=0</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">relay_log_purge=0</span><br></pre></td></tr></table></figure><p>2、安装node、manager、ssh免密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mysql5.6版本使用 0.56版本的mha</span></span><br><span class="line">wget http://test.driverzeng.com/MySQL_plugins/mha4mysql-manager-0.56-0.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line">wget http://test.driverzeng.com/MySQL_plugins/mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#mysql5.7版本使用 0.58版本的mha</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、推送node包在各台机器</span><br><span class="line">[root@db01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 5 52 53 54;<span class="keyword">do</span> scp mha4mysql-node-0.56-0.el7.centos.noarch.rpm 172.16.1.<span class="variable">$i</span>:/root;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">2、5台机器安装node</span><br><span class="line">[root@db03 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm </span><br><span class="line"></span><br><span class="line">3、(lb01) mha管理机安装manager</span><br><span class="line">[root@lb01 ~]# yum -y localinstall mha4mysql-manager-0.56-0.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# rpm -qa |grep mha</span><br><span class="line">mha4mysql-manager-0.56-0.el6.noarch</span><br><span class="line">mha4mysql-node-0.56-0.el6.noarch</span><br><span class="line"></span><br><span class="line">4、4台机器做软连接</span><br><span class="line">[root@db01 ~]# <span class="built_in">ln</span> -s /app/mysql-5.6.50/bin/mysqlbinlog  /usr/bin/mysqlbin;<span class="built_in">ln</span> -s /app/mysql-5.6.50/bin/mysql  /usr/bin/mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、5台机器做免密，自己也要给自己做免密</span><br><span class="line"><span class="comment">#生成密钥对</span></span><br><span class="line">ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment">#推送公钥</span></span><br><span class="line">[root@db01 ~]# ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.5</span><br><span class="line">[root@db01 ~]# ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.51</span><br><span class="line">[root@db01 ~]# ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.52</span><br><span class="line">[root@db01 ~]# ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.53</span><br><span class="line">[root@db01 ~]# ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.54</span><br><span class="line"></span><br><span class="line"><span class="comment">#检测是否免密成功</span></span><br><span class="line">[root@db01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 5 51 52 53 54;<span class="keyword">do</span> ssh root@172.16.1.<span class="variable">$i</span> <span class="string">&quot;ifconfig|awk &#x27;NR==2&#123;print <span class="variable">$2</span>&#125;&#x27;&quot;</span>;<span class="keyword">done</span></span><br><span class="line">输出信息就免密成功</span><br><span class="line">        inet 10.0.0.5  netmask 255.255.255.0  broadcast 10.0.0.255</span><br><span class="line">        inet 10.0.0.51  netmask 255.255.255.0  broadcast 10.0.0.255</span><br><span class="line">        inet 10.0.0.52  netmask 255.255.255.0  broadcast 10.0.0.255</span><br><span class="line">        inet 10.0.0.53  netmask 255.255.255.0  broadcast 10.0.0.255</span><br><span class="line">        inet 10.0.0.54  netmask 255.255.255.0  broadcast 10.0.0.255</span><br></pre></td></tr></table></figure><p>3、配置MHA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">1、创建MHA配置文件存放目录</span><br><span class="line">[root@lb01 ~]# <span class="built_in">mkdir</span> /etc/mha</span><br><span class="line"></span><br><span class="line">2、编写配置文件      <span class="comment">#app1是项目名</span></span><br><span class="line">[root@lb01 ~]# vim /etc/mha/app1.cnf    </span><br><span class="line">[server default]</span><br><span class="line">manager_log=/etc/mha/logs/manager.log</span><br><span class="line">manager_workdir=/etc/mha/app1</span><br><span class="line">master_binlog_dir=/app/mysql-5.6.50/data</span><br><span class="line">user=mha</span><br><span class="line">password=mha</span><br><span class="line"><span class="comment">#心跳检测间隔时间2s检测一次</span></span><br><span class="line">ping_interval=2</span><br><span class="line">repl_password=123</span><br><span class="line">repl_user=rep</span><br><span class="line">ssh_user=root</span><br><span class="line">ssh_port=22</span><br><span class="line"></span><br><span class="line">[server1]</span><br><span class="line">hostname=172.16.1.51</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server2]</span><br><span class="line"><span class="comment">#candidate_master=1</span></span><br><span class="line"><span class="comment">#check_repl_delay=0</span></span><br><span class="line">hostname=172.16.1.52</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server3]</span><br><span class="line">hostname=172.16.1.53</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server4]</span><br><span class="line">hostname=172.16.1.54</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">3、db01主库创建mha的管理用户,其他从库做了主从复制，会把这个用户复制过去</span><br><span class="line">grant all on *.* to mha@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4、创建工作目录、日志目录</span><br><span class="line">[root@lb01 ~]# <span class="built_in">mkdir</span> /etc/mha/&#123;logs,app1&#125;</span><br><span class="line">[root@lb01 ~]# ll /etc/mha/</span><br><span class="line">drwxr-xr-x 2 root root   6 Aug 27 20:20 app1</span><br><span class="line">-rw-r--r-- 1 root root 449 Aug 27 20:17 app1.cnf</span><br><span class="line">drwxr-xr-x 2 root root   6 Aug 27 20:20 logs</span><br><span class="line"></span><br><span class="line">4、检测MHA的SSH免密</span><br><span class="line">[root@lb01 ~]#  masterha_check_ssh --conf=/etc/mha/app1.cnf</span><br><span class="line"></span><br><span class="line">5、每次启动前先检测mha的主从复制</span><br><span class="line">[root@lb01 ~]#  masterha_check_repl --conf=/etc/mha/app1.cnf</span><br></pre></td></tr></table></figure><p>检测免密结果显示成功</p><p><img src="../image/study_img/image-20240827150707399.png" alt="image-20240827150707399"></p><p>检测mha的主从复制OK</p><p><img src="../image/study_img/image-20240827150324053.png" alt="image-20240827150324053"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">7、启动MHA</span><br><span class="line">[root@lb01 ~]# <span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; /dev/null &gt; /etc/mha/logs/manager.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">masterha_manager：         启动命令</span><br><span class="line">--conf=/etc/mha/app1.cnf： 指定配置文件</span><br><span class="line">--remove_dead_master_conf：做完切换后，从配置文件中摘除宕机的主库</span><br><span class="line">--ignore_last_failover：   忽略上一次切换(切换完了，不生产锁文件)</span><br><span class="line"></span><br><span class="line"><span class="comment">#MHA切换机制：</span></span><br><span class="line">1).MHA在做一次切换后，会生成一个锁文件（app1.failover.complete）在工作目录，8个小时之内，无法做第二次切换    生成锁文件的目的(下一次切换的时候会看一下这个锁文件是否存在，锁文件存在不切换，这个锁文件会存在8小时)</span><br><span class="line">2).MHA切换完成后，会自动结束MHA的进程</span><br><span class="line">[root@lb01 ~]# ll /etc/mha/app1</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug 28 11:25 app1.failover.complete</span><br><span class="line"><span class="comment">#选主机制</span></span><br><span class="line">1).在所有从库相同时，MHA会选择配置文件中server标签<span class="built_in">id</span>最小的作为主库</span><br><span class="line"></span><br><span class="line">8、启动后检查</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">显示结果就OK：</span><br><span class="line">app1 (pid:18582) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"><span class="comment">#项目(配置文件名)                         主库IP</span></span><br></pre></td></tr></table></figure><p>4、使用systemd管理MHA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1、停止mha</span><br><span class="line">[root@lb01 ~]# masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line"></span><br><span class="line">2、使用systemctl管理</span><br><span class="line">[root@lb01 ~]# vim /usr/lib/systemd/system/mha.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=MHA</span><br><span class="line">After=network.target sshd-keygen.service</span><br><span class="line">Wants=sshd-keygen.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=sample</span><br><span class="line">ExecStart=/usr/bin/masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover &gt; /etc/mha/logs/manager.log</span><br><span class="line">ExecStop=/usr/bin/masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# systemctl daemon-reload</span><br><span class="line">[root@lb01 ~]# systemctl start mha</span><br><span class="line">[root@lb01 ~]# systemctl <span class="built_in">enable</span> mha</span><br><span class="line"></span><br><span class="line">3、启动后检查</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:19243) is running(0:PING_OK), master:172.16.1.51</span><br></pre></td></tr></table></figure><h3 id="4、MHA日志分析"><strong>4、MHA日志分析</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# tailf -100 /etc/mha/logs/manager.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#GITD主从没有开启</span></span><br><span class="line">GTID failover mode = 0</span><br><span class="line">Starting Non-GTID based failover.</span><br><span class="line"></span><br><span class="line"><span class="comment"># VIP漂移的脚本没有设置</span></span><br><span class="line">master_ip_failover_script is not <span class="built_in">set</span>. Skipping invalidating dead master IP address.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有配置 Candidate masters</span></span><br><span class="line">Candidate masters from the configuration file:</span><br><span class="line">Non-candidate masters:</span><br><span class="line"></span><br><span class="line">candidate_master=1 // 设立太子，但是如果太子落后其他机器数据超过100M，就废储</span><br><span class="line">check_repl_delay=0 // 关闭对太子落后的检测</span><br><span class="line"></span><br><span class="line"><span class="comment"># change master语句</span></span><br><span class="line">All other slaves should start replication from here. Statement should be:</span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;172.16.1.54&#x27;</span>, MASTER_PORT=3306,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000003&#x27;</span>, MASTER_LOG_POS=878597, MASTER_USER=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">&#x27;xxx&#x27;</span>;</span><br></pre></td></tr></table></figure><p>MHA日志文件里面的相关工具命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">save_binary_logs</span><br><span class="line">--<span class="built_in">command</span>=save</span><br><span class="line">--start_file=mysql-bin.000001</span><br><span class="line">--start_pos=878597</span><br><span class="line">--binlog_dir=/app/mysql/data</span><br><span class="line">--output_file=/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">--handle_raw_binlog=1</span><br><span class="line">--disable_log_bin=0</span><br><span class="line">--manager_version=0.58</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pply_diff_relay_logs</span><br><span class="line">--<span class="built_in">command</span>=apply</span><br><span class="line">--slave_user=<span class="string">&#x27;mha&#x27;</span></span><br><span class="line">--slave_host=172.16.1.54</span><br><span class="line">--slave_ip=172.16.1.54</span><br><span class="line">--slave_port=3306</span><br><span class="line">--</span><br><span class="line">apply_files=/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">--workdir=/var/tmp</span><br><span class="line">--target_version=5.7.42-<span class="built_in">log</span></span><br><span class="line">--timestamp=20240827154042</span><br><span class="line">--handle_raw_binlog=1</span><br><span class="line">--disable_log_bin=0</span><br><span class="line">--manager_version=0.58</span><br><span class="line">--slave_pass=xxx</span><br></pre></td></tr></table></figure><p>MHA日志文件里面的binlog的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先将binlog保存在宕机主库的 /var/tmp/</span></span><br><span class="line">[root@db02 ~]# ll /var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.将binlog从宕机主库保存到manager所在的机器</span></span><br><span class="line">[root@mha-manager ~]# ll /etc/mha/app1/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40 /etc/mha/app1/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.将binlog从manager所在的机器发送给新主库</span></span><br><span class="line">[root@db04 ~]# ll /var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240828202522903.png" alt="image-20240828202522903"></p><p><img src="../image/study_img/image-20240827195935226.png" alt="image-20240827195935226"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mha配置文件以覆盖的形式摘除</span><br></pre></td></tr></table></figure><h3 id="5、MHA集群的恢复"><strong>5、MHA集群的恢复</strong></h3><p>1、宕掉db01主库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">1、停止mysql</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">2、db02</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">3、db03  <span class="comment">#看到主库已变成db02了</span></span><br><span class="line">root@localhost:(none) &gt;  show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.52</span><br><span class="line">                  Master_User: rep</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000008</span><br><span class="line">          Read_Master_Log_Pos: 120</span><br><span class="line">               Relay_Log_File: db03-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 283</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000008</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">            </span><br><span class="line">4、db04  <span class="comment">#看到主库已变成db02了</span></span><br><span class="line">root@localhost:(none) &gt;  show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.52</span><br><span class="line">                  Master_User: rep</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000008</span><br><span class="line">          Read_Master_Log_Pos: 120</span><br><span class="line">               Relay_Log_File: db04-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 283</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000008</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">            </span><br><span class="line">5、查看lb01MHA管理机器的配置文件，已摘除db01的server标签</span><br></pre></td></tr></table></figure><p>2、修复宕机的主库，并加入集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">1、#修复宕机的主库(db01)</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line">2、#找到最后一个change master语句，到宕机的主库执行</span><br><span class="line">[root@lb01 ~]# grep -i <span class="string">&#x27;change master to&#x27;</span> /etc/mha/logs/manager.log|<span class="built_in">tail</span> -1</span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;172.16.1.52&#x27;</span>, MASTER_PORT=3306, MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000008&#x27;</span>, MASTER_LOG_POS=120, MASTER_USER=<span class="string">&#x27;rep&#x27;</span>, MASTER_PASSWORD=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3、#db01执行change msater 语句,启动主从复制</span><br><span class="line">root@localhost:(none) &gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;172.16.1.52&#x27;</span>, MASTER_PORT=3306, MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000008&#x27;</span>, MASTER_LOG_POS=120, MASTER_USER=<span class="string">&#x27;rep&#x27;</span>, MASTER_PASSWORD=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; start slave;</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.52</span><br><span class="line">                  Master_User: rep</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000008</span><br><span class="line">          Read_Master_Log_Pos: 120</span><br><span class="line">               Relay_Log_File: db01-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 283</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000008</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">4、#MHA修改配置文件，将db01的信息加入mha配置文件</span><br><span class="line">[root@lb01 ~]# vim /etc/mha/app1.cnf </span><br><span class="line">.....</span><br><span class="line">[server1]</span><br><span class="line">hostname=172.16.1.51</span><br><span class="line">port=3306</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、#启动mha</span><br><span class="line">[root@lb01 ~]# systemctl start mha</span><br><span class="line"></span><br><span class="line">6、检查谁是主库，会报错，需要安装mysql命令</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line"></span><br><span class="line">7、安装mysql命令</span><br><span class="line">安装mysql源</span><br><span class="line">[root@lb01 ~]# rpm -ivh https://dev.mysql.com/get/mysql84-community-release-el7-1.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# vim /etc/yum.repos.d/mysql-community.repo </span><br><span class="line"><span class="comment">#就修改这个标签,其他的删除，文件里面就保留这几行</span></span><br><span class="line">[mysql56-community]</span><br><span class="line">name=MySQL 5.6 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# yum -y install mysql</span><br><span class="line"></span><br><span class="line">8、再次执行</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:27835) is running(0:PING_OK), master:172.16.1.51</span><br></pre></td></tr></table></figure><h3 id="6、写脚本恢复集群，放到mha机器">6、<strong>写脚本恢复集群，放到mha机器</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:27835) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line">2、写脚本恢复，放到mha机器</span><br><span class="line">[root@lb01 ~]# vim recover.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#脚本功能：集群恢复脚本</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&#x27;/etc/mha/app1.cnf&#x27;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line"><span class="comment">#宕机的主库是哪一台</span></span><br><span class="line">dowm_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1)</span><br><span class="line"><span class="comment">#查找change master 语句</span></span><br><span class="line">change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动  需要写脚本检查是否启动成功</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在修复主库.....&quot;</span></span><br><span class="line">ssh <span class="variable">$&#123;dowm_master&#125;</span> <span class="string">&#x27;/etc/init.d/mysqld start&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;dowm_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">           <span class="comment">#执行change master语句</span></span><br><span class="line">           mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;dowm_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;主库修复完成.....&quot;</span></span><br><span class="line">           <span class="built_in">break</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在补全MHA配置文件...&quot;</span></span><br><span class="line"><span class="comment">#覆盖配置文件</span></span><br><span class="line"><span class="comment">#cat &gt; $&#123;mha_conf&#125; &lt;&lt;-EOF  这样子写，cat里面的内容就不用顶格写</span></span><br><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[server default]</span></span><br><span class="line"><span class="string">manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">master_binlog_dir=/app/mysql-5.6.50/data</span></span><br><span class="line"><span class="string">master_ip_failover_script=/etc/mha/app1/master_ip_failover</span></span><br><span class="line"><span class="string">password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">ping_interval=2</span></span><br><span class="line"><span class="string">repl_password=123</span></span><br><span class="line"><span class="string">repl_user=rep</span></span><br><span class="line"><span class="string">ssh_port=22</span></span><br><span class="line"><span class="string">ssh_user=root</span></span><br><span class="line"><span class="string">user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server1]</span></span><br><span class="line"><span class="string">hostname=172.16.1.51</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server2]</span></span><br><span class="line"><span class="string">hostname=172.16.1.52</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server3]</span></span><br><span class="line"><span class="string">hostname=172.16.1.53</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server4]</span></span><br><span class="line"><span class="string">hostname=172.16.1.54</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#[binlog1]</span></span><br><span class="line"><span class="string">#(这个配置了，就永远不会提升为主库)</span></span><br><span class="line"><span class="string">#no_master=1 </span></span><br><span class="line"><span class="string">#hostname=172.16.1.5</span></span><br><span class="line"><span class="string">#master_binlog_dir=/data/mysql/binlog</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动mha</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在启动MHA.....&quot;</span></span><br><span class="line">systemctl start mha</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">        masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">              action <span class="string">&quot;MHA manager启动&quot;</span> /bin/true</span><br><span class="line">              <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#执行脚本</span><br><span class="line">sh -x recover.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、vip的漂移</span><br><span class="line">2、配合zabbix的自愈模式，要等切换完才可以执行脚本  </span><br><span class="line">上一次宕机的主库，和这一次的新主库，都要记录一下，再判断这个日志里面，这一次宕机的主库，是不是上一次宕机的主库  要在脚本前面判断上一次切换是否完成，就是看报告是否出来</span><br></pre></td></tr></table></figure><p><strong>测试：根据数据最新的提升为主库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#目前环境： </span></span><br><span class="line">主库：db01</span><br><span class="line">从库：db02、db03、db04</span><br><span class="line"></span><br><span class="line"><span class="comment">#需求：想让db03的数据最新，其他2个的数据落后，db03的数据最新，就会切为主库</span></span><br><span class="line"></span><br><span class="line">1、#当不知道谁是主库时，执行这条命令</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:27835) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#db01执行脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">3、#想让db03数据最新，得让其他2个库的relaylog落后</span><br><span class="line">(db02)</span><br><span class="line">root@localhost:(none) &gt; stop slave io_thread;</span><br><span class="line">(db04)</span><br><span class="line">root@localhost:(none) &gt; stop slave io_thread;</span><br><span class="line"></span><br><span class="line">检查数据是否落后</span><br><span class="line"><span class="keyword">select</span> * from prod.prod</span><br><span class="line"></span><br><span class="line">4、#停止主库db01,停止脚本</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db01 ~]# sh insert.sh ^C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、#db02、db04检查主从状态,已经变成主库</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.53</span><br><span class="line">                  </span><br><span class="line">6、#执行脚本，将宕掉的db01加入集群，查看集群状态，集群的主库变成db03</span><br><span class="line">[root@lb01 ~]#  sh recover.sh </span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:31397) is running(0:PING_OK), master:172.16.1.53</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">脚本里面的：start slave 会把sql、io线程起来</span><br></pre></td></tr></table></figure><p><strong>测试：设置储君参数(将某台数据库的数据一直落后)，选主时，该数据库被选为主库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设立太子，但是如果太子落后其他机器数据超过100M，就废储</span></span><br><span class="line">candidate_master=1 </span><br><span class="line"><span class="comment">#关闭对太子落后的检测</span></span><br><span class="line">check_repl_delay=0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#让db02数据落后，选主时，强行被选为主库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、修改mha配置文件</span><br><span class="line">[root@lb01 ~]# vim /etc/mha/app1.cnf </span><br><span class="line">.....</span><br><span class="line">[server2]</span><br><span class="line"><span class="comment">#设立太子，但是如果太子落后其他机器数据超过100M，就废储</span></span><br><span class="line">candidate_master=1</span><br><span class="line"><span class="comment">#关闭对太子落后的检测</span></span><br><span class="line">check_repl_delay=0 </span><br><span class="line">hostname=172.16.1.52</span><br><span class="line">port=3306</span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line">2、重启mha</span><br><span class="line">[root@lb01 ~]# systemctl restart mha</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:31957) is running(0:PING_OK), master:172.16.1.53</span><br><span class="line"></span><br><span class="line">3、主库db03执行写入数据脚本</span><br><span class="line">[root@db03 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">4、设置db02数据落后 </span><br><span class="line">root@localhost:(none) &gt; stop slave io_thread;</span><br><span class="line">此时，db02的数据肯定落后</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、停止db03数据库，停止脚本</span><br><span class="line">[root@db03 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">[root@db03 ~]# sh insert.sh ^C</span><br><span class="line"></span><br><span class="line">6、查看db01、db04主从状态，主库强制变成了db02</span><br><span class="line">root@localhost:(none) &gt;  show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.52</span><br></pre></td></tr></table></figure><h3 id="7、-MHA的vip漂移">7、 MHA的vip漂移</h3><p>VIP漂移的两种方式<br>1）通过keepalived的方式，管理虚拟IP的漂移<br>2）通过MHA自带脚本方式，管理虚拟IP的漂移</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MHA + keepalived方案</span></span><br><span class="line"></span><br><span class="line">1、keepalived如何可以找到最新的从库</span><br><span class="line">2、要写4个脚本，每台机器放一个，切换的时候容易出现脑裂</span><br><span class="line">3、需要等待MHA切换完成再漂移VIP</span><br><span class="line">4、多个脚本同时执行，需要去检测不同机器上slave的复制情况</span><br><span class="line">5、网上的文档就2台之间漂移，不会做4台，如果2台切换，如何保证切到的数据最新呢(做半同步可以解决)</span><br><span class="line">6、半同步阻塞数据写入，影响主库性能(这个机器不提供服务就可以解决)</span><br><span class="line">7、互相切换的2台主库升配置，(51 51升配，53 54不升配置)</span><br><span class="line"></span><br><span class="line">6、7 这2点就是在砸钱</span><br><span class="line"></span><br><span class="line">mha可以找到最新的从库替换为主库</span><br></pre></td></tr></table></figure><p><strong>配置MHA + master_ip_failover  (MHA自带脚本方式的VIP漂移)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">1、更改MHA的配置文件</span><br><span class="line">[root@lb01 ~]# vim /etc/mha/app1/master_ip_failover </span><br><span class="line">master_ip_failover_script=/etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、下载写好的将脚本放到工作目录</span><br><span class="line">[root@lb01 ~]# wget http://test.driverzeng.com/MySQL_File/master_ip_failover</span><br><span class="line"><span class="comment">#ifconfig eth1:1 172.16.1.55/24</span></span><br><span class="line"><span class="comment">#就是在脚本中添加VIP的定义</span></span><br><span class="line">my <span class="variable">$vip</span> = <span class="string">&#x27;172.16.1.55/24&#x27;</span>;</span><br><span class="line">my <span class="variable">$key</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">my <span class="variable">$ssh_start_vip</span> = <span class="string">&quot;/sbin/ifconfig eth1:<span class="variable">$key</span> <span class="variable">$vip</span>&quot;</span>;</span><br><span class="line">my <span class="variable">$ssh_stop_vip</span> = <span class="string">&quot;/sbin/ifconfig eth1:<span class="variable">$key</span> down&quot;</span>;</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# <span class="built_in">mv</span> master_ip_failover  /etc/mha/app1</span><br><span class="line"></span><br><span class="line">3、检测MHA状态</span><br><span class="line">[root@lb01 ~]#  masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:32555) is running(0:PING_OK), master:172.16.1.52</span><br><span class="line"></span><br><span class="line">3、手动在主库上绑定VIP</span><br><span class="line">[root@db02 ~]# ifconfig eth1:1 172.16.1.55/24</span><br><span class="line"></span><br><span class="line">4、给脚本执行权限</span><br><span class="line">[root@lb01 ~]# <span class="built_in">chmod</span> +x /etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line">5、重启mha</span><br><span class="line">[root@lb01 ~]# systemctl stop mha</span><br><span class="line">[root@lb01 ~]# systemctl start mha</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加脚本配置文件，服务启不来</span></span><br><span class="line">1.权限问题</span><br><span class="line">2、语法问题</span><br><span class="line">3、格式问题   dos2nuix /etc/mha/app1/master_ip_failover</span><br><span class="line">[root@lb01 ~]#  dos2unix /etc/mha/app1/master_ip_failover</span><br><span class="line">dos2unix: converting file /etc/mha/app1/master_ip_failover to Unix format ...</span><br><span class="line"></span><br><span class="line">5、重启mha</span><br><span class="line">[root@lb01 ~]# systemctl stop mha</span><br><span class="line">[root@lb01 ~]# systemctl start mha</span><br><span class="line"></span><br><span class="line">6、把添加的配置写到脚本里面，以后脚本有什么改动，就要写在脚本里</span><br><span class="line">MHA能够找到最新数据的从库</span><br></pre></td></tr></table></figure><p>VIP漂移切换测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">既然有了VIP,那么以后程序就往VIP里面写数据，现在要更改写数据的脚本</span><br><span class="line"></span><br><span class="line">1、检测目前谁是主库</span><br><span class="line">[root@lb01 ~]#  masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:51306) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line">2、先实时追踪日志</span><br><span class="line">[root@lb01 ~]# tailf  /etc/mha/logs/manager.log</span><br><span class="line"></span><br><span class="line">3、每个机器上都修改写入数据的脚本</span><br><span class="line">[root@db01 ~]# vim insert.sh </span><br><span class="line"><span class="comment">#修改为VIP</span></span><br><span class="line">master_ip=172.16.1.55</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、执行脚本</span><br><span class="line">[root@db02 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">5、停止当前的主库</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">6、可看到写入数据的程序开始报错</span><br><span class="line">ERROR 2003 (HY000): Can<span class="string">&#x27;t connect to MySQL server on &#x27;</span>172.16.1.55<span class="string">&#x27; (111)</span></span><br><span class="line"><span class="string">Warning: Using a password on the command line interface can be insecure.</span></span><br><span class="line"><span class="string">ERROR 2003 (HY000): Can&#x27;</span>t connect to MySQL server on <span class="string">&#x27;172.16.1.55&#x27;</span> (111)</span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">ERROR 2003 (HY000): Can<span class="string">&#x27;t connect to MySQL server on &#x27;</span>172.16.1.55<span class="string">&#x27; (111)</span></span><br><span class="line"><span class="string">Warning: Using a password on the command line interface can be insecure.</span></span><br><span class="line"><span class="string">ERROR 2003 (HY000): Can&#x27;</span>t connect to MySQL server on <span class="string">&#x27;172.16.1.55&#x27;</span> (111)</span><br><span class="line"></span><br><span class="line">7、看到日志开始有数据输出，开始将VIP漂移到新主库</span><br><span class="line"></span><br><span class="line">8、查看db01的写入数据脚本开始恢复数据写入，说明数据写入到新主库db02</span><br><span class="line">[root@lb01 ~]# systemctl start mha</span><br><span class="line">[root@lb01 ~]#  masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:55464) is running(0:PING_OK), master:172.16.1.52</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# ifconfig</span><br><span class="line">......</span><br><span class="line">eth1:1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.16.1.55  netmask 255.255.255.0  broadcast </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">#9、想要把宕机的db01恢复到集群作为从库，就执行恢复脚本</span></span><br></pre></td></tr></table></figure><h3 id="8、MYSQL-binlog实时同步">8、MYSQL binlog实时同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sersync + rsync</span></span><br><span class="line">1、同步到rsync服务端的哪个目录</span><br><span class="line">2、MHA凭什么去rsync服务端的backup目录下找   (在mha的配置文件里面配置)</span><br><span class="line">3、主库变成从库了，怎么办(每台从库都安装sersync,但不能全部起)</span><br><span class="line">这个方案可以实施，但是非常麻烦，就怕mysql很吃内存，就怕给rsync杀了，但是rsync很轻量级</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意，如果使用sersync,脚本里面的systemd写绝对路径</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240828105224674.png" alt="image-20240828105224674"></p><p><strong>使用mysqlbinlog同步binlog</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">1、MHA 配置binlog server,需要修改配置文件,同步是往MHA管理机同步</span><br><span class="line">[root@lb01 ~]# vim /etc/mha/app1.cnf</span><br><span class="line">....</span><br><span class="line">[binlog1]</span><br><span class="line"><span class="comment">#(当mysq和mha安装在同一个机器里面,这个配置了,就永远不会提升为主库)</span></span><br><span class="line"><span class="comment">#no_master=1 </span></span><br><span class="line">hostname=172.16.1.5</span><br><span class="line">master_binlog_dir=/data/mysql/binlog</span><br><span class="line"></span><br><span class="line">2、在脚本里面更新上这个配置</span><br><span class="line"></span><br><span class="line">2、创建binlog目录</span><br><span class="line">[root@lb01 ~]# <span class="built_in">mkdir</span> -p /data/mysql/binlog</span><br><span class="line"></span><br><span class="line">3、查看主库是谁</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:36583) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、一定要先进入目录再，实时同步binlog</span><br><span class="line">[root@lb01 ~]# <span class="built_in">cd</span> /data/mysql/binlog/</span><br><span class="line">[root@lb01 binlog]# mysqlbinlog -R --host=172.16.1.51 --user=mha --password=123 --raw --stop-never mysql-bin.000001 &amp;</span><br><span class="line">输入回车</span><br><span class="line">[1] 60923</span><br><span class="line"><span class="comment">#--host=主库IP</span></span><br><span class="line"></span><br><span class="line">5、查看172.16.1.51的binlog是否同步过来</span><br><span class="line">[root@lb01 binlog]# <span class="built_in">pwd</span></span><br><span class="line">/data/mysql/binlog</span><br><span class="line">[root@lb01 binlog]# ll</span><br><span class="line">total 12016</span><br><span class="line">-rw-rw---- 1 root root     440 Aug 29 18:20 mysql-bin.000001</span><br><span class="line">-rw-rw---- 1 root root     143 Aug 29 18:20 mysql-bin.000002</span><br><span class="line"></span><br><span class="line">6、验证是否实时同步</span><br><span class="line">172.16.1.51 db01执行脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh </span><br><span class="line">[root@lb01 binlog]# ll /data/mysql/binlog/</span><br><span class="line">total 12016</span><br><span class="line">-rw-rw---- 1 root root     440 Aug 29 18:20 mysql-bin.000001</span><br><span class="line">-rw-rw---- 1 root root     143 Aug 29 18:20 mysql-bin.000002</span><br><span class="line"><span class="comment">#查看最后一个binlog的·大小是否变化，变化则实时同步binlog,再和db01主库的binlog对比，查看大小是否一样，一样则同步成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新binlog  再到mha管理机上查看是否有新的binlog</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 flush-log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7、当db02变成从库时，就不能用上条命令去拉取binlog,所以host要改成vip，就比较方便</span><br><span class="line">[root@lb01 binlog]# <span class="built_in">kill</span> %1     </span><br><span class="line">或者killall  mysqlbinlog</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用VIP拉取binlog</span></span><br><span class="line">[root@lb01 ~]# <span class="built_in">cd</span> /data/mysql/binlog/</span><br><span class="line">[root@lb01 binlog]# mysqlbinlog -R --host=172.16.1.55 --user=mha --password=123 --raw --stop-never mysql-bin.000001 &amp;</span><br><span class="line">输入回车</span><br><span class="line">[1] 60923</span><br><span class="line"><span class="comment">#--host=VIP</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# vim /root/failover_status</span><br><span class="line">new_master=$(sed -nr <span class="string">&#x27;s#^app1.*failover (.*)\(.*\) to (.*)\(.*\) succeeded$#\2#gp&#x27;</span> /etc/mha/logs/manager.log|<span class="built_in">tail</span> -1)</span><br><span class="line">old_master=$(sed -nr <span class="string">&#x27;s#^app1.*failover (.*)\(.*\) to (.*)\(.*\) succeeded$#\1#gp&#x27;</span> /etc/mha/logs/manager.log|<span class="built_in">tail</span> -1)</span><br><span class="line"><span class="comment">#app1: MySQL Master failover 172.16.1.51(172.16.1.51:3306) to 172.16.1.52(172.16.1.52:3306) succeeded</span></span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# vim vip-recover.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">. /root/failover_status</span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&#x27;/etc/mha/app1.cnf&#x27;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line"><span class="comment">#宕机的主库是哪一台</span></span><br><span class="line">dowm_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#看看down_master和文件里面旧主库是否一致</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;dowm_master&#125;</span> == <span class="variable">$&#123;old_master&#125;</span> ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查找change master 语句</span></span><br><span class="line">change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动  需要写脚本检查是否启动成功</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在修复主库.....&quot;</span></span><br><span class="line">ssh <span class="variable">$&#123;dowm_master&#125;</span> <span class="string">&#x27;/etc/init.d/mysqld start&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;dowm_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">           <span class="comment">#执行change master语句</span></span><br><span class="line">           mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;dowm_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;主库修复完成.....&quot;</span></span><br><span class="line">           <span class="built_in">break</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在补全MHA配置文件...&quot;</span></span><br><span class="line"><span class="comment">#覆盖配置文件</span></span><br><span class="line"><span class="comment">#cat &gt; $&#123;mha_conf&#125; &lt;&lt;-EOF  这样子写，cat里面的内容就不用顶格写</span></span><br><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[server default]</span></span><br><span class="line"><span class="string">manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">master_binlog_dir=/app/mysql-5.6.50/data</span></span><br><span class="line"><span class="string">master_ip_failover_script=/etc/mha/app1/master_ip_failover</span></span><br><span class="line"><span class="string">password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">ping_interval=2</span></span><br><span class="line"><span class="string">repl_password=123</span></span><br><span class="line"><span class="string">repl_user=rep</span></span><br><span class="line"><span class="string">ssh_port=22</span></span><br><span class="line"><span class="string">ssh_user=root</span></span><br><span class="line"><span class="string">user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server1]</span></span><br><span class="line"><span class="string">hostname=172.16.1.51</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server2]</span></span><br><span class="line"><span class="string">hostname=172.16.1.52</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server3]</span></span><br><span class="line"><span class="string">hostname=172.16.1.53</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[server4]</span></span><br><span class="line"><span class="string">hostname=172.16.1.54</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[binlog1]</span></span><br><span class="line"><span class="string">#(这个配置了，就永远不会提升为主库)</span></span><br><span class="line"><span class="string">#no_master=1 </span></span><br><span class="line"><span class="string">hostname=172.16.1.5</span></span><br><span class="line"><span class="string">master_binlog_dir=/data/mysql/binlog</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动mha</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在启动MHA.....&quot;</span></span><br><span class="line">systemctl start mha</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">        masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">              action <span class="string">&quot;MHA manager启动&quot;</span> /bin/true</span><br><span class="line">              <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"> <span class="keyword">else</span> </span><br><span class="line">     <span class="built_in">continue</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="9、基于GTID的主从复制"><strong>9、基于GTID的主从复制</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停止mha</span></span><br><span class="line">[root@lb01 ~]# systemctl stop mha</span><br><span class="line">因为停主库的时候防止MHA切换</span><br><span class="line"></span><br><span class="line">因为MHA啥样的主从复制都可以结合，不需要对当前的主从复制做任何改动，现在搭建GTID的主从复制，看看MHA是否结合兼容所有的主从复制</span><br></pre></td></tr></table></figure><p><strong>什么是GTID</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GTID：事务提交做的主从复制(全局事务标识符)</span><br><span class="line">标识符是由UUID + TID组成</span><br><span class="line">UUID：主库的身份证号</span><br><span class="line">TID：事务提交号</span><br></pre></td></tr></table></figure><p>GTID特性<br>(1).支持多线程复制：事实上是针对每个database开启相应的独立线程,即每个库有一个单独的(sqlthread).<br>(2).支持启用GTID,在配置主从复制,传统的方式里,你需要找到binlog和POS点,然后change master to指向.<br>在mysql5.6里,无须再知道binlog和POS点,只需要知道master的IP/端口/账号密码即可,因为同步复制是自动的,MySQL通过内部机制GTID自动找点同步.<br>(3).基于Row复制只保存改变的列,大大节省Disk Space/Network resources和Memory usage.<br>(4).支持把Master 和Slave的相关信息记录在Table中原来是记录在文件里,记录在表里,增强可用性<br>(5).支持延迟复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1、连接进去关闭之前的主从复制</span><br><span class="line">stop slave;reset slave all;show slave status\G</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################# 传统主从复制步骤</span></span><br><span class="line"><span class="comment"># 1.修改主库配置文件</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改从库配置文件</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=2</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=3</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=4</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.在主库上创建主从复制用户</span></span><br><span class="line">grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.主库查看binlog和位置点</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+</span><br><span class="line">| File             | Position |</span><br><span class="line">+------------------+----------+</span><br><span class="line">| mysql-bin.000012 | 154      |</span><br><span class="line">+------------------+----------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.从库change master</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000012&#x27;</span>,</span><br><span class="line">master_log_pos=154;</span><br><span class="line"><span class="comment"># 6.开启主从复制</span></span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure><p>基于GTID的主从复制</p><p><em>先决条件</em><br>1）主库和从库都要开启binlog<br>2）主库和从库server-id不同<br>3）要有主从复制用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">1、连接进去关闭之前的主从复制</span><br><span class="line">stop slave;reset slave all;show slave status\G</span><br><span class="line"></span><br><span class="line">2、修改主库配置文件</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">3、修改从库配置文件</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=2</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=3</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=4</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">4、在主库上创建主从复制用户</span><br><span class="line">grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">基于GTID的主从复制不用去记位置点，他会根据事务去找位置点</span><br><span class="line"></span><br><span class="line">5、从库执行change master语句</span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_auto_position=1;</span><br><span class="line"></span><br><span class="line"><span class="comment">## ##报错：</span></span><br><span class="line">mysql&gt; change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_auto_position=1;</span><br><span class="line">ERROR 1777 (HY000): CHANGE MASTER TO MASTER_AUTO_POSITION = 1 cannot be executed because @@GLOBAL.GTID_MODE = OFF.</span><br><span class="line">(#GLOBAL.GTID_MODE = OFF GTID的模式没有开)</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%gtid%&#x27;</span>;</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line">| Variable_name                   | Value     |</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line">| binlog_gtid_simple_recovery     | ON        |</span><br><span class="line">| enforce_gtid_consistency        | OFF       |</span><br><span class="line">| gtid_executed                   | 1000      |</span><br><span class="line">| gtid_mode                       | OFF       |#GTID的模式没有开</span><br><span class="line">| gtid_next                       | AUTOMATIC |</span><br><span class="line">| gtid_owned                      |           |</span><br><span class="line">| gtid_purged                     |           |</span><br><span class="line">| simplified_binlog_gtid_recovery | OFF       |</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#########    MySQL5.6开启GTID  ######</span></span><br><span class="line">6、4台MYSQL机器 [mysqld]标签 配置文件加入这几个配置</span><br><span class="line"><span class="comment">#这个配置就在配置文件里面，不用删除，即使使用传统的也不影响</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db03 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db04 ~]# vim /etc/my.cnf</span><br><span class="line">.....</span><br><span class="line"><span class="comment">#开GTID模块</span></span><br><span class="line">gtid_mode=ON</span><br><span class="line"><span class="comment">#保证GTID数据强一致性</span></span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#从库日志的更新（1.基于GTID的主从复制 2.双主+keepalived 3.级联复制）</span></span><br><span class="line">log-slave-updates</span><br><span class="line"><span class="comment">#开启binlog</span></span><br><span class="line">log_bin=mysql-bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#########    MySQL5.7开启GTID  ######</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br></pre></td></tr></table></figure><p>[root@db02 ~]# tailf -100 /app/mysql-5.6.50/data/db02.err</p><p><img src="../image/study_img/image-20240828121147681.png" alt="image-20240828121147681"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">7、重启</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">8、连接进去从库，从库执行change master语句</span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_auto_position=1;</span><br><span class="line"></span><br><span class="line">9、开启主从复制，并查看状态</span><br><span class="line">start slave;show slave status\G</span><br><span class="line"></span><br><span class="line"> Auto_Position: 1</span><br><span class="line"> </span><br><span class="line"> 10、MHA切换主从的时候脚本里面会执行change master语句，那个脚本里面的也是执行master_auto_position=1;</span><br><span class="line"> </span><br><span class="line"> 11、主库创建一个库</span><br><span class="line"> root@localhost:(none) &gt; create database gtid;</span><br><span class="line"> root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-----------------------------------------------------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                                                                       |</span><br><span class="line">+------------------+----------+--------------+------------------+-----------------------------------------------------------------------------------------+</span><br><span class="line">| mysql-bin.000048 |   221998 |              |                  | a45796f8-61ca-11ef-808a-000c29688028:1-1058,</span><br><span class="line">df4b2d8a-54d3-11ef-ac00-000c29d088a4:1-564 |</span><br><span class="line">+------------------+----------+--------------+------------------+-----------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> 12、从库查看状态</span><br><span class="line"> *************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.51</span><br><span class="line">                  Master_User: rep</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                  .......</span><br><span class="line">Retrieved_Gtid_Set: df4b2d8a-54d3-11ef-ac00-000c29d088a4:563-564 Executed_Gtid_Set: a45796f8-61ca-11ef-808a-000c29688028:1-1058</span><br></pre></td></tr></table></figure><p>给基于GTID的主从复制绑定VIP,实现VIP漂移</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1、查看之前绑定的VIP在哪，发现在db02上面，需要解绑vip</span><br><span class="line">[root@db02 ~]# ifconfig eth1:1 down</span><br><span class="line"></span><br><span class="line">2、我想让db01作为主库，需要在主库上面绑定VIP</span><br><span class="line">[root@db01 ~]# ifconfig eth1:1 172.16.1.55/24</span><br><span class="line"></span><br><span class="line">3、先检查拉取binlog的命令是否存在，如果没有启动，就启动</span><br><span class="line">[root@lb01 binlog]# <span class="built_in">jobs</span></span><br><span class="line">[2]+  Running                 mysqlbinlog -R --host=172.16.1.55 --user=mha --password=123 --raw --stop-never mysql-bin.000001 &amp;</span><br><span class="line"></span><br><span class="line">4、MHA管理机检测repl</span><br><span class="line">[root@lb01 ~]# masterha_check_repl --conf=/etc/mha/app1.cnf</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">5、启动mha,检测当前的主库</span><br><span class="line">[root@lb01 ~]# systemctl start mha</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:76089) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line">6、测试，db01执行脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh</span><br><span class="line"></span><br><span class="line">7、实时追踪mha日志文件</span><br><span class="line">[root@lb01 ~]# tailf /etc/mha/logs/manager.log</span><br><span class="line"></span><br><span class="line">8、等待一会，停止db01数据库</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">9、写入数据的脚本开始执行错误，等待一会，脚本恢复正常写入，说明vip漂移到db02机器</span><br></pre></td></tr></table></figure><p><strong>报错解决</strong></p><p>报错1、down掉主库，vip切换了，想要将宕掉的主库加入集群，检测repl是否健康，出现报错</p><p><img src="../image/study_img/image-20240830001104977.png" alt="image-20240830001104977"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1、先检查mysqlbinlog是否运行，如果没有运行就先运行</span><br><span class="line">[root@db02 ~]# <span class="built_in">jobs</span></span><br><span class="line">[1]+  Running                 mysqlbinlog -R --host=172.16.1.55 --user=mha --password=123 --raw --stop-never mysql-bin.000001 &amp;</span><br><span class="line"></span><br><span class="line">2、检查vip是否存在在某个数据库上面，如果在，那么有vip的将作为主库，如果不存在，则给主库绑定vip</span><br><span class="line"></span><br><span class="line">3、检查主从复制是否正常，如果每个机器的主从复制都不正常，从库需要重新执行change master 语句</span><br><span class="line">stop slave;</span><br><span class="line"></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_auto_position=1;</span><br><span class="line">    </span><br><span class="line">stop slave; start slave;show slave status\G </span><br><span class="line"></span><br><span class="line">4、查看主从复制恢复正常之后，检查健康状态，如果检查状态没问题，就启动mha</span><br></pre></td></tr></table></figure><p>报错2：基于传统复制的基础上做了GTID主从复制之后，当主从出现数据不一致的现象，需要对主库进行全备，但是全备的binlog里面包含传统的主从复制binlog,导入数据时报错，SQL线程报错</p><p><img src="../image/study_img/image-20240902214618651.png" alt="image-20240902214618651"></p><p><img src="../image/study_img/image-20240902214644529.png" alt="image-20240902214644529"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解决办法：</span></span><br><span class="line"></span><br><span class="line">1、从库关闭主从复制，关闭自动查找位置点</span><br><span class="line">root@localhost:(none) &gt; STOP SLAVE;</span><br><span class="line">root@localhost:(none) &gt; change master to master_auto_position=0;</span><br><span class="line"></span><br><span class="line">2、主库打点全备，在恢复时关闭GTID参数</span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 -A -R --triggers --master-data=1 --single-transaction --set-gtid-purged=off|gzip &gt; /tmp/full.sql.gz</span><br><span class="line"></span><br><span class="line">3、主库将全备的数据发给其他从库</span><br><span class="line">[root@db02 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 51 53 54 ;<span class="keyword">do</span> scp /tmp/full.sql.gz 172.16.1.<span class="variable">$i</span>:/tmp;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">4、从库导入全备数据</span><br><span class="line">[root@db01 ~]# zcat /tmp/full.sql.gz |mysql -uroot -p123</span><br><span class="line">[root@db03 ~]# zcat /tmp/full.sql.gz |mysql -uroot -p123</span><br><span class="line">[root@db04 ~]# zcat /tmp/full.sql.gz |mysql -uroot -p123</span><br><span class="line"></span><br><span class="line">5、查看打点的位置点</span><br><span class="line">[root@db01 ~]# zcat /tmp/full.sql.gz |<span class="built_in">head</span>  -25</span><br><span class="line">CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000001&#x27;</span>, MASTER_LOG_POS=151;</span><br><span class="line"></span><br><span class="line">6、所有从库执行change master语句，重启主从复制</span><br><span class="line">change master to</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.52&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=151,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">start slave;show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.52</span><br><span class="line">                  Master_User: rep</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 151</span><br><span class="line">               Relay_Log_File: db01-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 314</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">            </span><br><span class="line"><span class="comment">#此时虽然看到变成传统的主从复制，但是只要配置文件里面写了开启GTID的·1配置，往数据库里面写数据，就会变成CTID主从复制。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.52&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_auto_position=1;</span><br><span class="line">    </span><br><span class="line">stop slave; start slave;show slave status\G </span><br></pre></td></tr></table></figure><h3 id="10、Mysql的读写分离">10、<strong>Mysql的读写分离</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">读写分离软件</span><br><span class="line">1.mysql-proxy</span><br><span class="line">2.Atlas  360写的</span><br><span class="line">3.MyCat (重量级，比较占资源)</span><br></pre></td></tr></table></figure><p>Atlas简介<br>Atlas是由 Qihoo 360公司Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项目。它在MySQL官方推出的MySQL-Proxy 0.8.2版本的基础上，修改了大量bug，添加了很多功能特性。它在MySQL官方推出的MySQL-Proxy 0.8.2版本的基础上，修改了大量bug，添加了很多功能特性。</p><p>Atlas主要功能<br>1.读写分离<br>2.从库负载均衡<br>3.IP过滤<br>4.自动分表(公司数据量比较大，表是会被逻辑拆分的，水平拆分还在垂直拆分)<br>5.DBA可平滑上下线DB<br>6.自动摘除宕机的DB</p><p>Atlas相对于官方MySQL-Proxy的优势</p><p>1.将主流程中所有Lua代码用C重写，Lua仅用于管理接口<br>2.重写网络模型、线程模型<br>3.实现了真正意义上的连接池<br>4.优化了锁机制，性能提高数十倍</p><p><img src="../image/study_img/image-20240828155022313.png" alt="image-20240828155022313"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">阿里云不能绑定VIP，但是有一个弹性公网IP</span><br><span class="line"></span><br><span class="line">vim 1.per</span><br><span class="line"><span class="comment">#!/user/bin/env prel</span></span><br><span class="line">system (<span class="string">&#x27;echo 123&#x27;</span>);</span><br><span class="line">system (<span class="string">&#x27;ifconfig&#x27;</span>);</span><br><span class="line"></span><br><span class="line">chmode +x 1.prel</span><br></pre></td></tr></table></figure><h3 id="11、安装配置Atlas（独立的机器）">11、<strong>安装配置Atlas（独立的机器）</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">1、查看当前主从信息</span><br><span class="line">[root@lb01 binlog]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:125895) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line">2、下载atlas</span><br><span class="line">[root@lb01 ~]# wget http://test.driverzeng.com/MySQL_plugins/Atlas-2.2.1.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line">3、安装atlas</span><br><span class="line">[root@lb01 ~]# rpm -ivh Atlas-2.2.1.el6.x86_64.rpm </span><br><span class="line"></span><br><span class="line">4、查看安装完的程序相关文件</span><br><span class="line">[root@lb01 ~]# ll /usr/local/mysql-proxy/</span><br><span class="line">drwxr-xr-x 2 root root  75 Aug 28 15:57 bin       <span class="comment">#程序相关命令</span></span><br><span class="line">drwxr-xr-x 2 root root  22 Aug 28 15:57 conf      <span class="comment">#程序相关配置</span></span><br><span class="line">drwxr-xr-x 3 root root 331 Aug 28 15:57 lib       <span class="comment">#程序相关创建</span></span><br><span class="line">drwxr-xr-x 2 root root   6 Dec 17  2014 <span class="built_in">log</span>       <span class="comment">#程序相关日志</span></span><br><span class="line"></span><br><span class="line">5、加密密码</span><br><span class="line">[root@lb01 ~]# <span class="built_in">cd</span> /usr/local/mysql-proxy/bin</span><br><span class="line">[root@lb01 bin]# ./encrypt 123</span><br><span class="line">3yb5jEku5h4=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、修改配置文件</span><br><span class="line">[root@lb01 ~]# vim /usr/local/mysql-proxy/conf/test.cnf </span><br><span class="line">[mysql-proxy]</span><br><span class="line"><span class="comment">#带#号的为非必需的配置项目</span></span><br><span class="line"><span class="comment">#管理接口的用户名</span></span><br><span class="line">admin-username = user</span><br><span class="line"><span class="comment">#管理接口的密码</span></span><br><span class="line">admin-password = <span class="built_in">pwd</span></span><br><span class="line"><span class="comment">#Atlas后端连接的MySQL主库的IP和端口，可设置多项，用逗号分隔(可以写VIP,也可以写主库IP)</span></span><br><span class="line">proxy-backend-addresses = 172.16.1.55:3306</span><br><span class="line"><span class="comment">#Atlas后端连接的MySQL从库的IP和端口，@后面的数字代表权重，用来作负载均衡，若省略则默认为1，可设置多项，用逗号分隔</span></span><br><span class="line">proxy-read-only-backend-addresses = 172.16.1.52:3306,172.16.1.53:3306,172.16.1.54:3306</span><br><span class="line"><span class="comment">#用户名与其对应的加密过的MySQL密码，密码使用PREFIX/bin目录下的加密程序encrypt加密，下行的user1和user2为示例，将其替换为你的MySQL的用户名和加密密码！(此处最后不要用root,rott的权限非常大,读写分离对他不起作用)</span></span><br><span class="line">pwds = mha:3yb5jEku5h4=,root:3yb5jEku5h4=</span><br><span class="line"><span class="comment">#设置Atlas的运行方式，设为true时为守护进程方式，设为false时为前台方式，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。</span></span><br><span class="line">daemon = <span class="literal">true</span></span><br><span class="line"><span class="comment">#设置Atlas的运行方式，设为true时Atlas会启动两个进程，一个为monitor，一个为worker，monitor在worker意外退出后会自动将其重启，设为false时只有worker，没有monitor，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。</span></span><br><span class="line">keepalive = <span class="literal">true</span></span><br><span class="line"><span class="comment">#工作线程数，对Atlas的性能有很大影响，可根据情况适当设置</span></span><br><span class="line">event-threads = 8</span><br><span class="line"><span class="comment">#日志级别，分为message、warning、critical、error、debug五个级别</span></span><br><span class="line">log-level = error</span><br><span class="line"><span class="comment">#日志存放的路径</span></span><br><span class="line">log-path = /usr/local/mysql-proxy/log</span><br><span class="line"><span class="comment">#SQL日志的开关，可设置为OFF、ON、REALTIME，OFF代表不记录SQL日志，ON代表记录SQL日志，REALTIME代表记录SQL日志且实时写入磁盘，默认为OFF</span></span><br><span class="line">sql-log = ON</span><br><span class="line"><span class="comment">#慢日志输出设置。当设置了该参数时，则日志只输出执行时间超过sql-log-slow（单位：ms)的日志记录。不设置该参数则输出全部日志。</span></span><br><span class="line">sql-log-slow = 10</span><br><span class="line"><span class="comment">#实例名称，用于同一台机器上多个Atlas实例间的区分</span></span><br><span class="line">instance = <span class="built_in">test</span></span><br><span class="line"><span class="comment">#Atlas监听的工作接口IP和端口</span></span><br><span class="line">proxy-address = 0.0.0.0:3306</span><br><span class="line"><span class="comment">#Atlas监听的管理接口IP和端口</span></span><br><span class="line">admin-address = 0.0.0.0:2345</span><br><span class="line"><span class="comment">#分表设置，此例中person为库名，mt为表名，id为分表字段，3为子表数量，可设置多项，以逗号分隔，若不分表则不需要设置该项</span></span><br><span class="line"><span class="comment">#tables = person.mt.id.3</span></span><br><span class="line"><span class="comment">#默认字符集，设置该项后客户端不再需要执行SET NAMES语句</span></span><br><span class="line">charset = utf8</span><br><span class="line"><span class="comment">#允许连接Atlas的客户端的IP，可以是精确IP，也可以是IP段，以逗号分隔，若不设置该项则允许所有IP连接，否则只允许列表中的IP连接</span></span><br><span class="line">client-ips = 127.0.0.1, 172.16.1</span><br><span class="line"><span class="comment">#Atlas前面挂接的LVS的物理网卡的IP(注意不是虚IP)，若有LVS且设置了client-ips则此项必须设置，否则可以不设置</span></span><br><span class="line"><span class="comment">#lvs-ips = 192.168.1.1</span></span><br><span class="line"></span><br><span class="line">7、启动</span><br><span class="line">[root@lb01 ~]# /usr/local/mysql-proxy/bin/mysql-proxyd <span class="built_in">test</span> start</span><br><span class="line">OK: MySQL-Proxy of <span class="built_in">test</span> is started</span><br><span class="line"></span><br><span class="line">8、停止</span><br><span class="line">[root@lb01 ~]# /usr/local/mysql-proxy/bin/mysql-proxyd <span class="built_in">test</span> stop</span><br><span class="line">OK: MySQL-Proxy of <span class="built_in">test</span> is stopped</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9、如果想要让实例名一样，就修改配置文件</span><br><span class="line">[root@lb01 ~]# vim /usr/local/mysql-proxy/conf/test.cnf </span><br><span class="line">42行： instance = app1</span><br><span class="line">[root@lb01 binlog]# <span class="built_in">mv</span> /usr/local/mysql-proxy/conf/&#123;<span class="built_in">test</span>,app1&#125;.cnf</span><br><span class="line"></span><br><span class="line">10、启动</span><br><span class="line">[root@lb01 binlog]# /usr/local/mysql-proxy/bin/mysql-proxyd app1 start</span><br><span class="line">OK: MySQL-Proxy of app1 is started</span><br><span class="line">[root@lb01 binlog]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:2345            0.0.0.0:*               LISTEN      127355/mysql-proxy  </span><br><span class="line">tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN      127355/mysql-proxy </span><br><span class="line"><span class="comment">#看到3306端口，2345端口起来了就ok</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">=========================记录一下</span><br><span class="line"><span class="comment">#管理接口的用户名</span></span><br><span class="line">admin-username = user</span><br><span class="line"><span class="comment">#管理接口的密码</span></span><br><span class="line">admin-password = <span class="built_in">pwd</span></span><br><span class="line"><span class="comment">#Atlas监听的管理接口IP和端口</span></span><br><span class="line">admin-address = 0.0.0.0:2345</span><br><span class="line">================================</span><br></pre></td></tr></table></figure><p>Atlas管理接口使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1、连接管理接口登录</span><br><span class="line">[root@lb01 ~]# mysql -uuser -ppwd -h127.0.0.1 -P2345</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; show databases;</span><br><span class="line">ERROR 1105 (07000): use <span class="string">&#x27;SELECT * FROM help&#x27;</span> to see the supported commands</span><br><span class="line">MySQL [(none)]&gt; <span class="keyword">select</span> * from <span class="built_in">help</span>;</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line">| <span class="built_in">command</span>                    | description                                             |</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line">| SELECT * FROM <span class="built_in">help</span>         | shows this <span class="built_in">help</span>                                         |#查看帮助</span><br><span class="line">| SELECT * FROM backends     | lists the backends and their state                      |#查看后端数据库</span><br><span class="line">| SET OFFLINE <span class="variable">$backend_id</span>    | <span class="built_in">set</span> offline 2;         | <span class="comment">#平滑下线数据库</span></span><br><span class="line">| SET ONLINE <span class="variable">$backend_id</span>     | <span class="built_in">set</span> online 2;           |#平滑上线数据库</span><br><span class="line">| ADD MASTER <span class="variable">$backend</span>        | example: <span class="string">&quot;add master 172.16.1.88:3306;&quot;</span>, ...               |#添加一个主库</span><br><span class="line">| ADD SLAVE <span class="variable">$backend</span>         | example: <span class="string">&quot;add slave 172.16.1.77:3306;&quot;</span>, ...                |#添加一个从库</span><br><span class="line">| REMOVE BACKEND <span class="variable">$backend_id</span> | example: <span class="string">&quot;remove backend 2;&quot;</span>, ...                        |#删除后端数据库</span><br><span class="line">| SELECT * FROM clients      | <span class="keyword">select</span> * from clients                                       |#查看可连接的客户端</span><br><span class="line">| ADD CLIENT <span class="variable">$client</span>         | example: <span class="string">&quot;add client 10.0.0;&quot;</span>, ...                  |#添加一个允许连接的客户端</span><br><span class="line">| REMOVE CLIENT <span class="variable">$client</span>      | example: <span class="string">&quot;remove client 10.0.0&quot;</span>, ...               |#删除可连接的客户端</span><br><span class="line">| SELECT * FROM pwds         | <span class="keyword">select</span> * from pwds;                                          |#查看在配置文件里面设置的用户和加密的密码</span><br><span class="line">| ADD PWD <span class="variable">$pwd</span>               | example: <span class="string">&quot;add pwd user:raw_password&quot;</span>, ...               |#添加一个明文的密码用户</span><br><span class="line">| ADD ENPWD <span class="variable">$pwd</span>             | example: <span class="string">&quot;add enpwd user:encrypted_password&quot;</span>, ...       |#添加一个加密后的用户密码</span><br><span class="line">| REMOVE PWD <span class="variable">$pwd</span>            | example: <span class="string">&quot;remove pwd user&quot;</span>, ...                         |#删除用户</span><br><span class="line">| SAVE CONFIG                | save the backends to config file                        |#直接保持配置文件</span><br><span class="line">| SELECT VERSION             | display the version of Atlas                            |#查看atlas版本号</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看后端数据库</span></span><br><span class="line">MySQL [(none)]&gt; SELECT * FROM backends;</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line">| backend_ndx | address          | state | <span class="built_in">type</span> |</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line">|           1 | 172.16.1.51:3306 | up    | rw   |</span><br><span class="line">|           2 | 172.16.1.52:3306 | up    | ro   |</span><br><span class="line">|           3 | 172.16.1.53:3306 | up    | ro   |</span><br><span class="line">|           4 | 172.16.1.54:3306 | up    | ro   |</span><br><span class="line">+-------------+------------------+-------+------+</span><br></pre></td></tr></table></figure><p>通过altas代理写入数据</p><p><img src="../image/study_img/image-20240830223037955.png" alt="image-20240830223037955"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">atlas作为代理，给(VIP)172.16.1.55代理，所有atlas的配置文件里面需要改成代理的vip</span><br><span class="line"></span><br><span class="line">1、修改配置文件，将vip添加</span><br><span class="line">[root@lb01 ~]# vim /usr/local/mysql-proxy/conf/app1.cnf </span><br><span class="line">12行  <span class="comment">#代表主库永远是55</span></span><br><span class="line">proxy-backend-addresses = 172.16.1.55:3306</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###这行暂时不要修改</span></span><br><span class="line"><span class="comment">#这一行，假如52变成主库，vip在52上面，就把52的ip去掉，当51变成从库，就把51的ip添加进来</span></span><br><span class="line">proxy-read-only-backend-addresses = 172.16.1.52:3306,172.16.1.53:3306,172.16.1.54:3306</span><br><span class="line"></span><br><span class="line">2、重启</span><br><span class="line">[root@lb01 ~]# /usr/local/mysql-proxy/bin/mysql-proxyd app1 restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、将写入数据的脚本里面的ip修改成代理ip</span><br><span class="line">[root@db01 ~]# vim insert.sh </span><br><span class="line">master_ip=172.16.1.5</span><br><span class="line"><span class="comment">#注意，脚本里面远程登录的用户，必须在atlas配置文件里面存在，不存在就不能写入数据</span></span><br><span class="line"></span><br><span class="line">4、检查主从状态，现在主库是51</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:125895) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line">5、执行脚本，查看是否能够写入数据，并检查数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|       28 |</span><br><span class="line">+----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#一个机器安装atlas，就要做atlas的高可用，万一atlas宕机了，主库，从库就不能写数据了，还不如每个机器都安装，所以下面会部署多台机器部署atlas</span></span><br></pre></td></tr></table></figure><h3 id="12、多台机器部署Atlas">12、<strong>多台机器部署Atlas</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1、停止lb01机器上面的atlas服务</span><br><span class="line">[root@lb01 ~]#  /usr/local/mysql-proxy/bin/mysql-proxyd app1 stop</span><br><span class="line"></span><br><span class="line">2、将atlas包、配置文件发送给其他4台数据库</span><br><span class="line">[root@lb01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 51 52 53 54;<span class="keyword">do</span> scp Atlas-2.2.1.el6.x86_64.rpm 172.16.1.<span class="variable">$&#123;i&#125;</span>:/root;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 51 52 53 54;<span class="keyword">do</span> scp /usr/local/mysql-proxy/conf/app1.cnf 172.16.1.<span class="variable">$&#123;i&#125;</span>:/usr/local/mysql-proxy/conf/;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">3、4个库安装atlas</span><br><span class="line">[root@lb01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 51 52 53 54;<span class="keyword">do</span> ssh root@172.16.1.<span class="variable">$&#123;i&#125;</span> <span class="string">&quot;rpm -ivh Atlas-2.2.1.el6.x86_64.rpm&quot;</span>;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">4、查看配置文件是否收到</span><br><span class="line">[root@db01 ~]# ll /usr/local/mysql-proxy/conf/</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 2832 Aug 31 14:30 app1.cnf</span><br><span class="line">-rw-r--r-- 1 root root 2810 Dec 17  2014 test.cnf</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# rpm -aq |grep Atlas</span><br><span class="line">Atlas-2.2.1-1.x86_64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、目前3306端口数据库在运行，所以改mysql端口不太行，所以先更改atlas端口，改成3307</span><br><span class="line">，如果有生产环境，这个端口会提前配置好，他就是3306，改数据库的端口就好</span><br><span class="line">[root@db01 ~]# vim /usr/local/mysql-proxy/conf/app1.cnf </span><br><span class="line"><span class="comment">#Atlas监听的工作接口IP和端口    45行</span></span><br><span class="line">proxy-address = 0.0.0.0:3307</span><br><span class="line"></span><br><span class="line">sed -i  <span class="string">&#x27;s#proxy-address = 0.0.0.0:3306#proxy-address = 0.0.0.0:3307#g&#x27;</span>  /usr/local/mysql-proxy/conf/app1.cnf  </span><br><span class="line"></span><br><span class="line">5、4台数据库启动atlas,并且检查端口 2345  3307端口</span><br><span class="line">/usr/local/mysql-proxy/bin/mysql-proxyd app1 start</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# netstat -lntup</span><br><span class="line"></span><br><span class="line">6、atlas需要使用systemd管理，不然没法加入开机自启动</span><br><span class="line"></span><br><span class="line">7、更改程序写数据的脚本，还得加参数-P3307,往atlas里面写数据</span><br><span class="line">[root@db01 ~]# vim insert.sh</span><br><span class="line"><span class="comment">#用vip，还是往主库的altlas里面写数据，即便是vip漂移了，还是往atlas里面写，比如说51挂了，vip漂到53，还是往55的3307里面写数据，这样就不要使用keepalived给atlas做高可用了</span></span><br><span class="line">master_ip=172.16.1.55</span><br><span class="line">mysql_cli=<span class="string">&quot;mysql -uroot -p123 -h<span class="variable">$&#123;master_ip&#125;</span> -P3307&quot;</span></span><br><span class="line"></span><br><span class="line">8、执行脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh      </span><br><span class="line"><span class="comment">#可以往里面写数据</span></span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br></pre></td></tr></table></figure><p>atlas结合MHA脚本使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">1、检查MHA是否启动</span><br><span class="line">[root@lb01 ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:125895) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line"><span class="comment">#MHA切换完了，atlas配置文件里面的从库ip也要改，有一个hma的切换脚本，啥时候漂VIP，就啥时候改atlas配置文件，而且4台atlas配置文件要一致</span></span><br><span class="line"></span><br><span class="line">2、在主从服务器上编写脚本</span><br><span class="line">[root@db01 ~]# vim atlas_mha.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">mha_log=<span class="string">&quot;/etc/mha/logs/manager.log&quot;</span></span><br><span class="line"><span class="comment">#宕机的master</span></span><br><span class="line">down_master=$(grep <span class="string">&#x27;(current master)&#x27;</span> <span class="variable">$&#123;mha_log&#125;</span>|awk -F <span class="string">&#x27;(&#x27;</span>  <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|<span class="built_in">tail</span> -1)</span><br><span class="line"><span class="comment">#down_master=$(sed -nr &#x27;s#(.*)\(.*\) \(current master\)$#\1#gp&#x27; $&#123;mha_log&#125;|tail -1)</span></span><br><span class="line"><span class="comment">#新的master</span></span><br><span class="line">new_master=$(grep <span class="string">&#x27;(new master)&#x27;</span> <span class="variable">$&#123;mha_log&#125;</span>|awk -F <span class="string">&#x27;(&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|<span class="built_in">tail</span> -1)</span><br><span class="line"><span class="comment">#new_master=$(sed -nr &#x27;s#(.*)\(.*\) \(new master\)$#\1#gp&#x27; $&#123;mha_log&#125;|tail -1)</span></span><br><span class="line"><span class="comment">#操作管理接口   #mysql -uuser -ppwd  -P2345 -h172.16.1.51</span></span><br><span class="line"><span class="comment">#atlas配置文件管理接口的用户名</span></span><br><span class="line">atlas_user=<span class="string">&#x27;user&#x27;</span></span><br><span class="line"><span class="comment">#atlas配置文件管理接口的密码</span></span><br><span class="line">atlas_password=<span class="string">&#x27;pwd&#x27;</span></span><br><span class="line"><span class="comment">##atlas配置文件管理接口的端口</span></span><br><span class="line">atlas_port=<span class="string">&#x27;2345&#x27;</span></span><br><span class="line">atlas_conn=<span class="string">&#x27;mysql -u$&#123;atlas_user&#125; -p$&#123;atlas_password&#125; -P$&#123;atlas_port&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取down_master的backend_id,51主库要做的操作是删除被提升为主库的new_master</span></span><br><span class="line"><span class="keyword">for</span> atlas_ip <span class="keyword">in</span> 51 52 53 54;<span class="keyword">do</span></span><br><span class="line">      down_master_backend_id=$(<span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&#x27;select * from backends&#x27;</span>| grep <span class="string">&quot;<span class="variable">$&#123;new_master&#125;</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">      <span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&#x27;remove backend $&#123;down_master_backend_id&#125;&#x27;</span></span><br><span class="line">      <span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&#x27;add slave $&#123;down_master&#125;:3306;save config&#x27;</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line">3、脚本结合MHA一起使用，修改MHAvip漂移的脚本  在mha机器上修改  </span><br><span class="line">[root@lb01 ~]# vim /etc/mha/app1/master_ip_failover</span><br><span class="line">sub <span class="function"><span class="title">start_vip</span></span>() &#123;</span><br><span class="line">    `ssh <span class="variable">$ssh_user</span>\@<span class="variable">$new_master_host</span> \&quot; <span class="variable">$ssh_start_vip</span> \&quot;`;</span><br><span class="line">    `/bin/sh -x \&quot;/root/atlas_mha.sh\&quot;`;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#-x 将脚本的执行过程输出到日志里面</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1、检查主从，并且检查vip在主库上面</span><br><span class="line">[root@lb01 ~]#  masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:125895) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# ip a</span><br><span class="line"></span><br><span class="line">2、执行写入数据的脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh</span><br><span class="line"></span><br><span class="line">3、先实时追踪日志</span><br><span class="line">[root@lb01 ~]# tailf  /etc/mha/logs/manager.log</span><br><span class="line"></span><br><span class="line">4、准备切换，停止主库数据库</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line"> change master to</span><br><span class="line">    master_host=<span class="string">&#x27;172.16.1.52&#x27;</span>,</span><br><span class="line">    master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">    master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">    master_auto_position=1;</span><br><span class="line"> start slave;show slave status\G</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> STOP SLAVE;RESET SLAVE ALL;change master to</span><br><span class="line">    master_host=<span class="string">&#x27;172.16.1.52&#x27;</span>,</span><br><span class="line">    master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">    master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">    master_auto_position=1;start slave;show slave status\G</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕11、mysql主从复制</title>
      <link href="/posts/106fae33.html"/>
      <url>/posts/106fae33.html</url>
      
        <content type="html"><![CDATA[<h3 id="1、-mysql主从复制">1、 mysql主从复制</h3><p><strong>为什么要做主从复制</strong><br>1、为了做高可用<br>2、为了解决MySQL的单点故障<br>3、分摊主库的压力<br>4、做备份的情况(延迟从库)</p><p><strong>Mysql主从复制原理</strong></p><p><img src="../image/study_img/image-20240823161157907.png" alt="image-20240823161157907"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">同步：IO线程拿到数据交给SQL线程，sql线程执行完成后，IO线程再去要下一条数据(类似于我给你传文件，我要等你接收完)</span><br><span class="line">异步：IO线程把数据放到缓存里,不管SQL线程是否执行完，IO线程都会去要下一条数据</span><br><span class="line"></span><br><span class="line">如果看到SQL显示NO,可能是数据的问题，可能主库和从库数据不一致</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">master.info 储存主库信息的文件</span><br><span class="line">relay-log  中继日志，也叫差异日志(主库里有，从库里没有，还需要从库执行的语句，也就是主库和从库的数据差异的)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#原理</span></span><br><span class="line">1）通过change master to语句告诉从库主库的ip，port，user，password，file，pos</span><br><span class="line">2）从库通过start slave命令开启复制必要的IO线程和SQL线程</span><br><span class="line">3）从库通过IO线程拿着change master to用户密码相关信息，连接主库，验证合法性</span><br><span class="line">4）从库连接成功后，会根据binlog的pos问主库，有没有比这个更新的</span><br><span class="line">5）主库接收到从库请求后，比较一下binlog信息，如果有就将最新数据通过dump线程给从库IO线程</span><br><span class="line">6）从库通过IO线程接收到主库发来的binlog事件，存储到TCP/IP缓存中，并返回ACK更新master.info</span><br><span class="line">7）将TCP/IP缓存中的内容存到relay-log中</span><br><span class="line">8）SQL线程读取relay-log.info，读取到上次已经执行过的relay-log位置点，继续执行后续的relay-log日志，执行完成后，更新relay-log.info</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_passwd=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=446</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#MySQL主从复制和3个线程，4个文件有关系</span></span><br><span class="line">1、#3个线程：</span><br><span class="line">      - 从库上的IO线程：(和主库建立连接，接收主库的数据)</span><br><span class="line">      - 从库上的SQL线程：(将IO线程取出的数据在数据库中执行一遍，他两之前是异步的)</span><br><span class="line">      </span><br><span class="line">      - 主库上的dump线程：(接受IO线程的请求，从binlog中取出数据返回给IO线程)</span><br><span class="line">      </span><br><span class="line">2、#4个文件</span><br><span class="line">      - 从库：master.info(存上一次主库binlog的名字和位置点)：执行start slave会把主库信息记录在master.info,方便下一次取数据</span><br><span class="line">      - 从库：relay-log.info：(记录sql语句上一回执行到中继日志的位置点，下回再执行的时候就从这个位置点往后执行)</span><br><span class="line">      - 从库：relay-log：(存储binlog中新增的数据（不是一直存在的）复制SQL线程在执行完文件中的所有事件并且不再需要它后，会自动删除每个中继日志文件)</span><br><span class="line">      </span><br><span class="line">      - 主库：bin-log(二进制日志记录主库所有对数据表发生变化的语句)</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line"><span class="comment">#问题：relay-log会一直存在吗,如果不是，会存在多久？</span></span><br><span class="line">官网给的答案：</span><br><span class="line">https://dev.mysql.com/doc/refman/5.7/en/replica-logs-relaylog.html</span><br><span class="line"></span><br><span class="line">The replication SQL thread automatically deletes each relay <span class="built_in">log</span> file after it has executed all events <span class="keyword">in</span> the file and no longer needs it. There is no explicit mechanism <span class="keyword">for</span> deleting relay logs because the replication SQL thread takes care of doing so. However, FLUSH LOGS rotates relay logs, <span class="built_in">which</span> influences when the replication SQL thread deletes them.</span><br><span class="line">(复制SQL线程在执行完文件中的所有事件并且不再需要它后，会自动删除每个中继日志文件。没有明确的机制来删除中继日志，因为复制SQL线程会负责这样做。但是，FLUSH logs会轮换中继日志，这会影响复制SQL线程何时删除它们。)</span><br><span class="line">也就是说SQL线程执行完relay-log的所有事件之后，会定期的删除relay-log，但是不知道多久删除一次，官方没有给出明确的时间</span><br><span class="line"></span><br><span class="line">涉及到3个线程 4个文件</span><br><span class="line"><span class="comment">#从：master inifo  </span></span><br><span class="line">relay.loh  </span><br><span class="line">relay：记录sql语句上一回执行到中继日志的那个位置点了</span><br></pre></td></tr></table></figure><p><strong>部署传统主从复制</strong></p><p>环境准备</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>db01</td><td>10.0.0.51  /  172.16.1.51</td><td><strong>主库</strong></td><td>mysql 5.6</td></tr><tr><td>db02</td><td>10.0.0.52  /  172.16.1.52</td><td>从库</td><td>mysql 5.6</td></tr><tr><td>db03</td><td>10.0.0.53  /  172.16.1.53</td><td>从库</td><td>mysql 5.6</td></tr><tr><td>db04</td><td>10.0.0.54 /  172.16.1.54</td><td>从库</td><td>mysql 5.6</td></tr></tbody></table><p>1、主库操作db01</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1、#主库操作</span><br><span class="line"><span class="comment">#修改配置文件</span></span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=1</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">skip-name-resolve</span><br><span class="line">[client]</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line"></span><br><span class="line">2、#重启</span><br><span class="line">[root@db04 ~]#  /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#创建一个主从复制的用户</span><br><span class="line">grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4、#查看binlog(master)的信息</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+</span><br><span class="line">| File             | Position |</span><br><span class="line">+------------------+----------+</span><br><span class="line">| mysql-bin.000016 |      327 |</span><br><span class="line">+------------------+----------+</span><br></pre></td></tr></table></figure><p>2、从库操作   先配置db02  db03</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">1、#修改配置文件</span><br><span class="line">[root@db03 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">从库binlog不需要开启</span><br><span class="line"><span class="comment">#log_bin=mysql-bin</span></span><br><span class="line"><span class="comment">#server_id不一样</span></span><br><span class="line">server_id=1</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">skip-name-resolve</span><br><span class="line">[client]</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line"></span><br><span class="line">2、#重启</span><br><span class="line">[root@db03 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#执行master语句</span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000016&#x27;</span>,</span><br><span class="line">master_log_pos=327,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">4、#开启主从复制</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line">5、#查看主从复制状态</span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000016</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">            </span><br><span class="line">           <span class="comment">#2个yes就OK</span></span><br></pre></td></tr></table></figure><p><strong>主从复制故障处理</strong></p><p>IO线程故障</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#大概率是连接出问题</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000016&#x27;</span>,</span><br><span class="line">master_log_pos=327,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">1、#检查IP是否正常(和change master的IP一样，不要写外网IP)</span><br><span class="line">ping 172.16.1.51</span><br><span class="line"></span><br><span class="line">2、#检查端口是否正常(和change master的IP一样，不要写外网IP)</span><br><span class="line">telent 172.16.1.51 3306</span><br><span class="line">端口不通：</span><br><span class="line">      - 防火墙 selinux</span><br><span class="line">      - 服务没有起</span><br><span class="line">      - 没有创建远程连接的用户</span><br><span class="line">      </span><br><span class="line">3、#检测用户名和密码  从库用rep用户连接到主库</span><br><span class="line">[root@db03 ~]# mysql -urep -p123 -h172.16.1.51</span><br><span class="line"></span><br><span class="line">4、#主库检查binglog名字和位置点是否正确(位置点可以少，不能多，多了找不到那个点)</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+-</span><br><span class="line">| File             | Position | </span><br><span class="line">+------------------+----------+-</span><br><span class="line">| mysql-bin.000016 |    32858 | </span><br><span class="line">+------------------+----------+-</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240823175441790.png" alt="image-20240823175441790"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报错原因：</span></span><br><span class="line">主库和从库的server_id相同</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240823175520693.png" alt="image-20240823175520693"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报错原因：</span></span><br><span class="line">主库和从库的UUID相同</span><br></pre></td></tr></table></figure><p>SQL线程故障</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根本原因：主库和从库数据不一致</span></span><br><span class="line"></span><br><span class="line">1、主库的数据比从库多(主库里面有一个jiaoyi表，从库没有，我在主库里面的jiaoyi表插入数据，从库SQL线程就会报错)</span><br><span class="line"></span><br><span class="line">2、从库的数据比主库多(从库已经存在一个tabl1表，当主库创建table1表时，从库QL线程就会报错)</span><br></pre></td></tr></table></figure><p>1、主库的数据比从库多  报错</p><p><img src="../image/study_img/image-20240823160331343.png" alt="image-20240823160331343"></p><p>2、从库的数据比主库多  报错</p><p><img src="../image/study_img/image-20240823180522184.png" alt="image-20240823180522184"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解决方法：</span></span><br><span class="line"></span><br><span class="line">方法1：:不推荐  临时的解决方法  </span><br><span class="line">(跳过这个报错的指针)</span><br><span class="line"><span class="comment"># 临时停止同步</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line"><span class="comment"># 将同步指针向下移动一个（可重复操作）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global sql_slave_skip_counter=1;</span><br><span class="line"><span class="comment"># 开启同步</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法2：不推荐  临时的解决方法</span><br><span class="line">(在mysql标签主添加跳过错误代码的配置)</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line"><span class="comment">#在[mysqld]标签下添加以下参数</span></span><br><span class="line">slave-skip-errors=1032,1062,1007,1146</span><br><span class="line"></span><br><span class="line"><span class="comment">#但是以上操作都是有风险存在的,导致从库数据缺失，这个数据从库里面永远没有，查不到数据，他跳过这个错误，配置文件里面写了，数据不复制,这个只是表面上看到yes,实际上没有意义，跳过相当于从库少数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据不一致的原因可能如下：</span></span><br><span class="line">1、在生产中运行已有的数据库的主库，新从库直接从当前位置点复制</span><br><span class="line">解决方法：给主库全备，导入到新从库中，保证数据的一致性</span><br><span class="line"></span><br><span class="line">2、直接在从库中操作数据库</span><br><span class="line">解决方法：从库设置不允许写入 ，从库设置为只读(读写分离)</span><br><span class="line"><span class="comment"># 在命令行临时设置</span></span><br><span class="line"><span class="built_in">set</span> global read_only=1;</span><br><span class="line"><span class="comment"># 在配置文件中永久生效</span></span><br><span class="line">read_only=1</span><br><span class="line">命令行+配置文件 不需要重启就是永久失效</span><br><span class="line"><span class="comment">#但是用root用户，对root不生效</span></span><br></pre></td></tr></table></figure><p>3、</p><p><img src="../image/study_img/image-20240826150832618.png" alt="image-20240826150832618"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解决办法</span></span><br><span class="line">1、主库停止主从复制</span><br><span class="line">root@localhost:(none) &gt; stop slave;</span><br><span class="line"></span><br><span class="line">2、在主库上查看当前位置点</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000016 |  5235939 |              |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line">3、从库打点全备，到从库，</span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A -R --triggers --master-data=1 --single-transaction|gzip &gt; /tmp/full.sql.gz</span><br><span class="line">[root@db01 ~]# scp /tmp/full.sql.gz 172.16.1.52:/tmp</span><br><span class="line"></span><br><span class="line">4、从库再从当前位置点开始复制</span><br><span class="line">[root@db02 ~]# zcat /tmp/full.sql.gz |mysql -uroot -p123</span><br><span class="line">[root@db02 ~]# mysql -uroot -p123</span><br><span class="line"></span><br><span class="line">5、#从库执行change mater 语句</span><br><span class="line">change master to</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000016&#x27;</span>,</span><br><span class="line">master_log_pos=5235939,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、#从库开启主从复制</span><br><span class="line">root@localhost:(none) &gt; start slave;</span><br><span class="line">查看数据是否同步</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><p><strong>生产环境中，如何添加一台从库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新从库环境初始化  (db04)</span></span><br><span class="line">目前db01主库已经有一些数据了，假设db01是生产环境的主库，还有数据在网里面写入</span><br><span class="line">运行脚本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">配置文件和旧环境大部分保持一致</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start; mysqladmin -uroot -p password <span class="string">&#x27;123&#x27;</span></span><br><span class="line"></span><br><span class="line">1、#主库打点全备(热备 不锁表)</span><br><span class="line">[root@db01 ~]#  mysqldump -uroot -p123 -A -R --triggers --master-data=1 --single-transaction|gzip &gt; /tmp/full.sql.gz</span><br><span class="line"></span><br><span class="line">但是zcat的文件里面有loca table 为什么锁表呢？</span><br><span class="line">它是用这个文件往里恢复数据的时候锁表，文件显示的是恢复过程，备份的时候不锁表的，不是备份的过程，是在恢复的时候锁住</span><br><span class="line"></span><br><span class="line">2、#从库恢复主库全备数据</span><br><span class="line">[root@db01 ~]# scp /tmp/full.sql.gz 172.16.1.54:/tmp</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# zcat /tmp/full.sql.gz |mysql -uroot -p123</span><br><span class="line"></span><br><span class="line">3、#从查看数据少了，查看点位，直接从打点的位置开始复制</span><br><span class="line">[root@db01 ~]# zcat /tmp/full.sql.gz |<span class="built_in">head</span> -25</span><br><span class="line">CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000016&#x27;</span>, MASTER_LOG_POS=984578;</span><br><span class="line"></span><br><span class="line">5、#从库执行change mater 语句</span><br><span class="line">change master to</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000016&#x27;</span>,</span><br><span class="line">master_log_pos=984578,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">6、#从库开启主从复制</span><br><span class="line">root@localhost:(none) &gt; start slave;</span><br><span class="line">查看数据是否同步</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h3 id="2、延时复制">2、延时复制</h3><p><strong>传统主从复制的缺陷</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、传统主从复制无法备份</span><br><span class="line">2、传统主从复制无法过滤复制</span><br><span class="line">3、传统主从复制速度相对来说比较慢</span><br><span class="line">4、传统主从复制是异步复制，从库数据延迟(每台从库数据不是百分百一致，每台从库的数据不一致，但这个是不可避免的，在生产中一定有延迟)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant replication slave on prod.* to slave@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">ERROR 1221 (HY000): Incorrect usage of DB GRANT and GLOBAL PRIVILEGES</span><br><span class="line"><span class="comment">#replication 这是一个全局的权限</span></span><br></pre></td></tr></table></figure><p><strong>延时从库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#企业一般会延时3~6小时</span></span><br><span class="line">1、做延时从库的服务器无法在生产中提供服务(这个机器就是一个备机)</span><br><span class="line">2、备份</span><br><span class="line">3、恢复数据速度更快</span><br><span class="line">4、延时从库不影响高可用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">延时从库的原理：在SQL线程做手脚，IO线程继续拿数据，SQL线程在指定时间后，延时执行</span><br><span class="line"></span><br><span class="line">(怎么做，才能让他延迟3~6小时？)</span><br><span class="line"><span class="comment">#会设置SQL线程在指定的时间后再执行</span></span><br></pre></td></tr></table></figure><p>延时从库的原理</p><p><img src="../image/study_img/image-20240826144421626.png" alt="image-20240826144421626"></p><p><strong>配置延时从库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#命令：重置主从复制 :他会把所有相关文件重置</span></span><br><span class="line">需要修改某些参数的时候才用(比如说位置点写错了，密码写错了)</span><br><span class="line">mysql&gt; change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,master_user=<span class="string">&#x27;rep&#x27;</span>,master_password=<span class="string">&#x27;123&#x27;</span>,master_log_file=<span class="string">&#x27;mysql-bin.000003&#x27;</span>,master_log_pos=154;</span><br><span class="line"></span><br><span class="line">reset slave;     会保留之前chang masetr的信息</span><br><span class="line"></span><br><span class="line">reset slave all;  (完全重置主从，保留任何信息，取消从库身份的时候)</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止主从复制</span></span><br><span class="line">stop slave;  </span><br><span class="line"></span><br><span class="line"><span class="comment">#就是在SQL-Delay加延迟时间</span></span><br><span class="line"><span class="comment">#将db04变成延时从库</span></span><br><span class="line"></span><br><span class="line">1、#停止主从复制</span><br><span class="line">root@localhost:(none) &gt; stop slave;</span><br><span class="line"></span><br><span class="line">2、#重置主从信息</span><br><span class="line">root@localhost:(none) &gt; reset salve;</span><br><span class="line"></span><br><span class="line">3、#配置SQL线程延迟复制时间   180 3min</span><br><span class="line">root@localhost:(none) &gt; chang master to master_delay=180;</span><br><span class="line"></span><br><span class="line">4、#开启主从复制，并查看状态</span><br><span class="line">root@localhost:(none) &gt; start slave;</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: </span><br><span class="line">               Master_Host: 172.16.1.51</span><br><span class="line">               ......</span><br><span class="line">               SQL_Delay: 180</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置延时从库，导致数据不一致，当让数据一致的解决办法</span></span><br><span class="line">1、#从库操作</span><br><span class="line">root@localhost:(none) &gt; stop slave;</span><br><span class="line">root@localhost:(none) &gt; reset slave;</span><br><span class="line">root@localhost:(none) &gt; change master to master_delay=0;</span><br><span class="line"></span><br><span class="line">2、主库操作</span><br><span class="line">[root@db01 ~]#  mysqldump -A -uroot -p123 &gt; /tmp/full.sql</span><br><span class="line">[root@db01 ~]# scp /tmp/full.sql.gz 172.16.1.52:/tmp</span><br><span class="line"></span><br><span class="line">3、从库恢复数据</span><br><span class="line">root@localhost:world &gt; <span class="built_in">source</span> /tmp/full.sql;</span><br><span class="line"></span><br><span class="line">4、主库查看位置点</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000016 |  5366820 |              |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line">5、#从库执行change mater 语句</span><br><span class="line">change master to</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000016&#x27;</span>,</span><br><span class="line">master_log_pos=5366820,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">root@localhost:world &gt; start slave;</span><br><span class="line">root@localhost:world &gt; show slave status\G</span><br></pre></td></tr></table></figure><p><strong>延时从库恢复案例</strong></p><p>总数据量级500G，正常备份去恢复需要1.5-2小时<br>1）配置延时3600秒<br>mysql&gt;CHANGE MASTER TO MASTER_DELAY = 3600;</p><p>2）主库<br>drop database db;</p><p>3）怎么利用延时从库，恢复数据？</p><p>1、模拟数据准备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">1、#主库db01执行写入数据的脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">2、先保证其他从库的数据是一致的，主从同步没问题</span><br><span class="line"></span><br><span class="line">3、主库创建一个库，写入数据</span><br><span class="line">root@localhost:(none) &gt; create database asm;</span><br><span class="line">root@localhost:(none) &gt; flush logs;</span><br><span class="line">root@localhost:(none) &gt; use asm</span><br><span class="line">root@localhost:(none) &gt; create table asm(<span class="built_in">id</span> int);</span><br><span class="line">root@localhost:(none) &gt; insert into asm values(1),(2),(3);</span><br><span class="line">root@localhost:(none) &gt; update asm <span class="built_in">set</span> <span class="built_in">id</span>=10 <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line"></span><br><span class="line">4、主库打点全备</span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction  &gt; /tmp/full.sql.gz</span><br><span class="line">[root@db01 ~]# scp /tmp/full.sql.gz 172.16.1.52:/tmp</span><br><span class="line"></span><br><span class="line">5、从库从库位置点</span><br><span class="line">[root@db02 ~]# <span class="built_in">head</span> -25 /tmp/full.sql.gz </span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000017&#x27;</span>, MASTER_LOG_POS=99930;</span><br><span class="line">[root@db02 ~]#  mysql -uroot -p123 &lt; /tmp/full.sql.gz </span><br><span class="line"></span><br><span class="line">6、让从库db02变成一个延时从库</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from asm.asm;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line">root@localhost:world &gt; stop slave;</span><br><span class="line">root@localhost:world &gt; reset slave all;</span><br><span class="line"></span><br><span class="line">7、从库执行change mater 语句</span><br><span class="line">change master to</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000017&#x27;</span>,</span><br><span class="line">master_log_pos=99930,</span><br><span class="line">master_port=3306,</span><br><span class="line">master_delay=180;</span><br><span class="line"></span><br><span class="line">root@localhost:world &gt; start slave;</span><br><span class="line">root@localhost:world &gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">           Slave_IO_Running: Yes</span><br><span class="line">          Slave_SQL_Running: Yes</span><br><span class="line">          .........</span><br><span class="line">          SQL_Delay: 180</span><br><span class="line">          SQL_Remaining_Delay: 0</span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">8、主库里面再写点数据，从库里面查看现在数据还没有写过来，把主库的库删除</span><br><span class="line">root@localhost:asm &gt; insert into asm values(4),(5),(6);</span><br><span class="line">root@localhost:asm &gt; <span class="keyword">select</span> * from asm.asm;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">|    5 |</span><br><span class="line">|    6 |</span><br><span class="line">+------+      </span><br><span class="line">root@localhost:(none) &gt; drop database asm;</span><br></pre></td></tr></table></figure><p>2、恢复数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">(企业中的盘)SAS  Flash(最接近内存性能的盘) </span><br><span class="line">SATA(电脑的盘)</span><br><span class="line">mysq1&gt; change master to master_delay=0;  取消延时复制</span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复思路    用db02做延时从库</span></span><br><span class="line">1、#停止db02延时从库的SQL线程</span><br><span class="line">root@localhost:(none) &gt; stop slave SQL_thread;</span><br><span class="line"></span><br><span class="line">2、#准备新环境</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">配置文件和旧环境大部分保持一致</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start; mysqladmin -uroot -p password <span class="string">&#x27;123&#x27;</span></span><br><span class="line"></span><br><span class="line">3、#延时从库做全备  (从库没有开binlog  不用打点全备)</span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 -A -R --triggers &gt; /tmp/full_new.sql</span><br><span class="line"></span><br><span class="line">4、#截取删库之前relay-log.info数据  (查看从库执行到哪个位置点)</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /app/mysql-5.6.50/data/relay-log.info </span><br><span class="line">7</span><br><span class="line">./db02-relay-bin.000002  <span class="comment">#结束位置点的文件</span></span><br><span class="line">171031  <span class="comment">#开始位置点</span></span><br><span class="line">mysql-bin.000017</span><br><span class="line">270678</span><br><span class="line">180</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">开始位置点：171031  </span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/db02-relay-bin.000002 | grep -iC 10 drop</span><br><span class="line">结束位置点：194850</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqlbinlog --start-position=171031 --stop-position=194850  /app/mysql-5.6.50/data/db02-relay-bin.000002 &gt; /tmp/inc1.sql</span><br><span class="line"></span><br><span class="line">5、截取删库之后的数据 需要停止数据写入</span><br><span class="line">[root@db01 ~]# sh insert.sh ^C</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     3442 |</span><br><span class="line">+----------+  <span class="comment">#记录停库前数据最后写入的状态</span></span><br><span class="line"></span><br><span class="line">6、截取删库之前的位置点~停库的位置点数据</span><br><span class="line">[root@db02 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/db02-relay-bin.000002 | grep -iC 10 drop</span><br><span class="line">开始位置点：194939 </span><br><span class="line"></span><br><span class="line">[root@db02 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">-rw-rw---- 1 mysql mysql   489751 Aug 26 17:21 db02-relay-bin.000002</span><br><span class="line">结束位置点：489751</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqlbinlog --start-position=194939 --stop-position=489751  /app/mysql-5.6.50/data/db02-relay-bin.000002 &gt; /tmp/inc2.sql</span><br><span class="line"></span><br><span class="line">7、准备新环境<span class="string">&#x27;db03&#x27;</span></span><br><span class="line">[root@db03 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db03 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">配置文件和旧环境大部分保持一致</span><br><span class="line">[root@db03 ~]# vim /etc/my.cnf</span><br><span class="line">[root@db03 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db03 ~]# /etc/init.d/mysqld start; mysqladmin -uroot -p password <span class="string">&#x27;123&#x27;</span></span><br><span class="line"></span><br><span class="line">7、将延时从库的全备导入新环境</span><br><span class="line">[root@db02 ~]# scp /tmp/full_new.sql  172.16.1.53:/tmp</span><br><span class="line">[root@db03 ~]#  mysql -uroot -p123 &lt; /tmp/full_new.sql </span><br><span class="line"></span><br><span class="line">查看新环境的数据状态</span><br><span class="line">[root@db03 ~]#  mysql -uroot -p123</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     1731 |</span><br><span class="line">+----------+  <span class="comment">#可以看到数据还不全</span></span><br><span class="line"></span><br><span class="line">8、恢复延迟查看截取的第一段，第二段新增数据到新环境</span><br><span class="line">[root@db02 ~]# scp /tmp/inc1.sql   172.16.1.53:/tmp</span><br><span class="line">[root@db02 ~]# scp /tmp/inc2.sql   172.16.1.53:/tmp</span><br><span class="line">[root@db03 ~]#  mysql -uroot -p123 &lt; /tmp/inc1.sql</span><br><span class="line">[root@db03 ~]#  mysql -uroot -p123 &lt; /tmp/inc2.sql</span><br><span class="line"></span><br><span class="line">9、新环境db03查看数据是否恢复</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     3442 |</span><br><span class="line">+----------+</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from asm.asm;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">|    5 |</span><br><span class="line">|    6 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">10、应用割接</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>取消延时从库的步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将db02延时从库取消配置</span></span><br><span class="line">root@localhost:(none) &gt; stop slave;</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; change master to master_delay=0;</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; start slave;</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line"><span class="comment">#查看线程可能有报错</span></span><br><span class="line">主库打点全备</span><br><span class="line">[root@db01 ~]#  mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction  &gt; /tmp/full.sql.gz</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# scp /tmp/full.sql.gz 172.16.1.52:/tmp </span><br><span class="line">[root@db01 ~]# <span class="built_in">head</span> -25 /tmp/full.sql.gz</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000017&#x27;</span>, MASTER_LOG_POS=589398;</span><br><span class="line"></span><br><span class="line">、从库恢复数据</span><br><span class="line">root@localhost:world &gt; <span class="built_in">source</span> /tmp/full.sql;</span><br><span class="line"></span><br><span class="line">、主库查看位置点</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000017 |  589398  |              |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">、#从库执行change mater 语句</span><br><span class="line">root@localhost:(none) &gt; stop slave;</span><br><span class="line"></span><br><span class="line">change master to</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000017&#x27;</span>,</span><br><span class="line">master_log_pos=589398,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">root@localhost:world &gt; start slave;</span><br><span class="line">root@localhost:world &gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.16.1.51</span><br><span class="line">                  Master_User: rep</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000017</span><br><span class="line">          Read_Master_Log_Pos: 589398</span><br><span class="line">               Relay_Log_File: db02-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 283</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000017</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h3 id="3、半同步复制">3、<strong>半同步复制</strong></h3><p>半同步复制出现的原因：为了保证主库和从库的数据一致性</p><p>从库的IO线程在没有接收到ACK之前，会阻塞主库写入操作<br>半同步缺点：阻塞主库写入数据，影响主库性能，降低用户体验<br>半同步优点：主库和从库数据保证了一致性，不会丢数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">从MYSQL5.5开始，支持半自动复制。之前版本的MySQL Replication都是异步（asynchronous）的，主库在执行完一些事务后，是不会管备库的进度的。如果备库不幸落后，而更不幸的是主库此时又出现Crash（例如宕机），这时备库中的数据就是不完整的。简而言之，在主库发生故障的时候，我们无法使用备库来继续提供数据一致的服务了。</span><br><span class="line"></span><br><span class="line">半同步复制（Semi synchronous Replication）则一定程度上保证提交的事务已经传给了至少一个备库。</span><br><span class="line">出发点是保证主从数据一致性问题，安全的考虑。</span><br><span class="line">5.5 出现概念，但是不建议使用，性能太差</span><br><span class="line">5.6出现group commit 组提交功能，来提升开启半同步复制的性能</span><br><span class="line">5.7更加完善了，在group commit基础上出现了MGR</span><br><span class="line">5.7的增强半同步复制的新特性：after commit； after <span class="built_in">sync</span>；</span><br><span class="line"></span><br><span class="line"><span class="comment">#什么情况下代表数据写完了，而且完整</span></span><br><span class="line">TCP缓存会返回一个ACK给IO线程</span><br><span class="line"></span><br><span class="line"><span class="comment">#半同步复制(在IO线程做手脚)</span></span><br><span class="line">IO线程取出数据后，IO线程不返回ACK，IO线程就不去给Dump线程要数据</span><br><span class="line">只要从库IO线程没有接到ACK之前，会阻塞主库写入操作(为了数据的一致性，影响主库性能导致用户的体验下降)</span><br><span class="line"><span class="comment">#开不开半同步取决于公司，但几乎很少开</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240826181704110.png" alt="image-20240826181704110"></p><p>半同步的插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/lib/plugin/</span><br><span class="line">-rwxr-xr-x 1 mysql mysql 515584 Aug  7 19:52 semisync_master.so</span><br><span class="line">-rwxr-xr-x 1 mysql mysql 276296 Aug  7 19:52 semisync_slave.so</span><br><span class="line"></span><br><span class="line">为什么不是自动安装这两个插件？</span><br><span class="line">1、不是每个公司都有开半同步</span><br><span class="line">2、先做主从之后才能开半同步</span><br></pre></td></tr></table></figure><p><strong>半同步复制的配置</strong></p><p>1、db01主库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">1、主库查看是否支持半同步</span><br><span class="line">root@localhost:(none) &gt; show global variables like <span class="string">&#x27;have_dynamic_loading&#x27;</span>;</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| Variable_name        | Value |</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| have_dynamic_loading | YES   |</span><br><span class="line">+----------------------+-------+</span><br><span class="line"></span><br><span class="line">2、主库需要安装半同步插件</span><br><span class="line">root@localhost:(none) &gt; install plugin rpl_semi_sync_master soname<span class="string">&#x27;semisync_master.so&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3、启动插件+设置超时时间(临时的) </span><br><span class="line">root@localhost:(none) &gt; SET GLOBAL rpl_semi_sync_master_enabled = 1;</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> global rpl_semi_sync_master_timeout = 1000;</span><br><span class="line"></span><br><span class="line">4、#永久启动写在配置文件里面+超时时间  设置超时 1000ms=1s</span><br><span class="line">超过10s还没有写完数据，会停止半同步，恢复成异步复制(如果想要永久失效就写在配置文件里面)</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">....</span><br><span class="line">rpl_semi_sync_master_enabled=1</span><br><span class="line">rpl_semi_sync_master_timeout = 1000</span><br><span class="line"></span><br><span class="line">5、检查</span><br><span class="line">root@localhost:(none) &gt; show variables like<span class="string">&#x27;rpl%&#x27;</span>;</span><br><span class="line">root@localhost:(none) &gt; show variables like<span class="string">&#x27;rpl%&#x27;</span>;</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line">| Variable_name                      | Value    |</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line">| rpl_semi_sync_master_enabled       | ON       |#开启</span><br><span class="line">| rpl_semi_sync_master_timeout       | 1000     |#超时时间</span><br><span class="line">| rpl_semi_sync_master_trace_level   | 32       |#路由的级别</span><br><span class="line">| rpl_semi_sync_master_wait_no_slave | ON       |</span><br><span class="line">| rpl_stop_slave_timeout             | 31536000 |#停止从库的超时时间</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; show global status like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Rpl_semi_sync_master_clients               | 0     |#0代表客户端还没有</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_times              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | 0     |</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | 0     |</span><br><span class="line">+--------------------------------------------+-------+</span><br></pre></td></tr></table></figure><p>2、db02从库配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#从库配置</span></span><br><span class="line">1、安装插件</span><br><span class="line">root@localhost:world &gt; INSTALL PLUGIN rpl_semi_sync_slave SONAME<span class="string">&#x27;semisync_slave.so&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3、启动插件(临时启动)</span><br><span class="line">root@localhost:world &gt; SET GLOBAL rpl_semi_sync_slave_enabled = 1;</span><br><span class="line">永久生效</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">....</span><br><span class="line">rpl_semi_sync_slave_enabled = 1</span><br><span class="line"></span><br><span class="line">4、重启IO线程</span><br><span class="line">root@localhost:world &gt; stop slave io_thread;</span><br><span class="line">root@localhost:world &gt; start slave io_thread;</span><br><span class="line"></span><br><span class="line">5、到主库查看是否有从库变成半同步</span><br><span class="line">root@localhost:(none) &gt; show global status like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Rpl_semi_sync_master_clients               | 1     |#有一个客户端</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_times              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | 0     |</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | 0     |</span><br><span class="line">+--------------------------------------------+-------+</span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、主库创建一个库</span><br><span class="line">root@localhost:(none) &gt; create database abc111;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)   <span class="comment">#配置之后，主库建库时间变快</span></span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; create database abc112;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; create database abc113;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; create database abc114;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">2、查看状态，会记录平均等待时间  （ms为单位）</span><br><span class="line">root@localhost:(none) &gt; show global status like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Rpl_semi_sync_master_clients               | 1     |</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | 4199  |</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | 16799 |</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | 4     |</span><br><span class="line">| Rpl_semi_sync_master_no_times              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | 0     |</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | 4286  |#平均等待时间 </span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | 17144 |</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | 4     |#一共4条语句</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | 4     |#成功执行4条语句</span><br><span class="line">+--------------------------------------------+-------+</span><br></pre></td></tr></table></figure><p>关闭半同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:world &gt; SET GLOBAL rpl_semi_sync_slave_enabled = 0;</span><br><span class="line">配置文件取消</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">....</span><br><span class="line"><span class="comment">#rpl_semi_sync_slave_enabled = 1</span></span><br></pre></td></tr></table></figure><h3 id="4、mysql的过滤复制">4、<strong>mysql的过滤复制</strong></h3><p>每个从库只想复制一个库</p><p><img src="../image/study_img/image-20240826200642230.png" alt="image-20240826200642230"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">方法：</span><br><span class="line">可以在主库配置：配置白名单或者黑名单</span><br><span class="line">可以在从库配置：配置白名单或者黑名单</span><br></pre></td></tr></table></figure><p><strong>方法一：主库配置(一般不用)</strong></p><ul><li>binlog-do-db：白名单：只记录白名单中列出的库的二进制日志</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">规范的sql语句先use一个库，再写数据</span><br><span class="line"><span class="comment">#在binlog做手脚：binlog只记录prod库的数据，其他的不记录</span></span><br><span class="line"></span><br><span class="line">1、#只复制单库</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-do-db=prod</span><br><span class="line"></span><br><span class="line">2、#重启</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#重启之后，从库的主从复制需要重启</span><br><span class="line">root@localhost:world &gt; stop slave;start slave;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#主库查看状态：只复制prod这个库的二进制日志</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000018 |      120 | prod         |#从库只复制prod这个库的二进制日志</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#复制多个库</span></span><br><span class="line">1、#配置文件写库名字，有几个库就写几行</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-do-db=prod</span><br><span class="line">binlog-do-db=world</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#重启</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#重启之后，从库的主从复制需要重启</span><br><span class="line">root@localhost:world &gt; stop slave;start slave;</span><br><span class="line"></span><br><span class="line">4、#主库查看状态：只复制prod和world这2个库的二进制日志</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000019 |      120 | prod,world   |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">1、#主库往prod库里面写数据</span><br><span class="line">root@localhost:(none) &gt; use prod</span><br><span class="line">root@localhost:prod &gt; insert into prod values(77777);</span><br><span class="line"></span><br><span class="line">2、#从库查看</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from prod.prod;</span><br><span class="line">+-------+</span><br><span class="line">| 77777 |</span><br><span class="line">+-------+</span><br></pre></td></tr></table></figure><ul><li>binlog-ignore-db：黑名单：不记录黑名单列出的库的二进制日志</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在binlog做手脚：binlog不记录abc库的数据，其他的都记录</span></span><br><span class="line"></span><br><span class="line">1、#不复制单库</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-ignore-db=abc</span><br><span class="line"></span><br><span class="line">2、#重启</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#重启之后，从库的主从复制需要重启</span><br><span class="line">root@localhost:world &gt; stop slave;start slave;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#主库查看状态：只复制prod这个库的二进制日志</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">root@localhost:prod &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | </span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| mysql-bin.000020 |      120 |              | abc              | </span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line"><span class="comment">#从库不复制abc这个库的二进制日志</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#不复制多个库</span></span><br><span class="line">1、#配置文件写库名字，有几个库就写几行</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-ignore-db=abc</span><br><span class="line">binlog-ignore-db=aaa</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#重启</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#重启之后，从库的主从复制需要重启</span><br><span class="line">root@localhost:world &gt; stop slave;start slave;</span><br><span class="line"></span><br><span class="line">4、#主库查看状态：只复制prod和world这2个库的二进制日志</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | </span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| mysql-bin.000020 |      120 |              | abc,aaa          | </span><br><span class="line">+------------------+----------+--------------+------------------+</span><br></pre></td></tr></table></figure><p><strong>方法二：从库配置(常用)</strong></p><p>白名单：只执行白名单中列出的库或者表的中继日志</p><ul><li>replicate-do-db=prod    (库里所有表都复制)</li><li>replicate-do-table=prod.prod     (库里的某一张表复制)</li><li>replicate-wild-do-table=prod.p*    (库里以p开头的表都复制)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">binlog不记录指定的库，其他的都记录</span><br><span class="line"></span><br><span class="line">表里面SQL线程只执行 Replicat_Do_DB指定的库的SQL语句</span><br><span class="line"></span><br><span class="line">1、#从库配置文件配置</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">replicate-do-db=prod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#从库重启</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#从库查看状态：只复制prod和world这2个库的二进制日志</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">.....</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: prod   <span class="comment">#只复制prod库</span></span><br></pre></td></tr></table></figure><p>黑名单：不执行黑名单中列出的库或者表的中继日志</p><ul><li>replicate-ignore-db=abc    (库里所有表不复制)</li><li>replicate-ignore-table=abc.abc    (库里的某一张表不复制)</li><li>replicate-wild-ignore-table=abc.a*      (库里以p开头的表都不复制)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">SQL线程不执行 Replicat_Ignore_DB指定的库的SQL语句</span><br><span class="line"></span><br><span class="line">1、#从库配置文件配置</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">replicate-ignore-db=abc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#从库重启</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、#从库查看状态：只复制prod和world这2个库的二进制日志</span><br><span class="line">root@localhost:(none) &gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">.....</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: abc   <span class="comment">#不复制abc库</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕10、MySQL数据备份和恢复</title>
      <link href="/posts/42021c83.html"/>
      <url>/posts/42021c83.html</url>
      
        <content type="html"><![CDATA[<h3 id="mysql日志管理">mysql日志管理</h3><p><strong>Mysql日志管理</strong></p><p><img src="../image/study_img/image-20240820084820991.png" alt="image-20240820084820991"></p><p>1、错误日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：MySql启动报错的错误信息，为了排查</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认是否开启：开启</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#储存位置：</span></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">-rw-rw---- 1 mysql mysql   179797 Aug 20 10:31 db01.err</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%err%&#x27;</span>;</span><br><span class="line">+---------------------+--------------+</span><br><span class="line">| Variable_name       | Value        |</span><br><span class="line">+---------------------+--------------+</span><br><span class="line">| log_error           | ./db01.err   | </span><br><span class="line">+---------------------+--------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#名字：hostname.err</span></span><br><span class="line">./db01.err </span><br><span class="line"></span><br><span class="line"><span class="comment">#设置mysql错误日志的位置，但是需要提前创建这个日志文件并且授权</span></span><br><span class="line">1、创建出错误日志文件,并授权</span><br><span class="line">[root@db01 ~]# <span class="built_in">touch</span> /opt/mysql_error.txt</span><br><span class="line">[root@db01 ~]# <span class="built_in">chown</span> mysql.mysql /opt/mysql_error.txt</span><br><span class="line"></span><br><span class="line">2、修改mysql配置文件</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line"><span class="comment">#在[mysqld]标签随便添加一行写入：</span></span><br><span class="line">log_error=/opt/mysql_error.txt  <span class="comment">#后面写上你要存放的路径</span></span><br><span class="line"></span><br><span class="line">3、重启</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br></pre></td></tr></table></figure><p>2、常规日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：记录常规操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认是否开启：否</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#储存位置：</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%general_log%&#x27;</span>;</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| Variable_name    | Value                           |</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| general_log      | OFF                             |</span><br><span class="line">| general_log_file | /app/mysql-5.6.50/data/db01.<span class="built_in">log</span> |</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#名字：hostname.log</span></span><br><span class="line">db01.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改方式：</span></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">general_log=1</span><br><span class="line">general_log_file=/app/mysql/data/db01.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>3、二进制日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：只记录对数据发生变化的语句</span></span><br><span class="line">记录已提交的DML语句，并拆分为多个事件(event)来进行记录 记录所有DDL,DML,DCL</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认是否开启：否</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#储存位置：</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line">+---------------------------------+----------------------------------------+</span><br><span class="line">| Variable_name                   | Value                                  |</span><br><span class="line">+---------------------------------+----------------------------------------+</span><br><span class="line">| log_bin                         | ON                                     |</span><br><span class="line">| log_bin_basename                | /app/mysql-5.6.50/data/mysql-bin       |</span><br><span class="line">| log_bin_index                   | /app/mysql-5.6.50/data/mysql-bin.index |</span><br><span class="line">| log_bin_trust_function_creators | OFF                                    |</span><br><span class="line">| log_bin_use_v1_row_events       | OFF                                    |</span><br><span class="line">| sql_log_bin                     | ON                                     |</span><br><span class="line">+---------------------------------+----------------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改方法 MySQL5.6</span></span><br><span class="line">修改mysql配置文件</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line"><span class="comment">#在空行随便添加一个</span></span><br><span class="line">[mysqld]</span><br><span class="line">.....</span><br><span class="line">log_bin=mysql_bin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改方法 MySQL5.7  (需要和server_id配合使用)</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">.....</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br></pre></td></tr></table></figure><p><strong>二进制的3种工作模式</strong></p><p>1、statement        语句模式(mysql5.6的默认模式)<br>2、row                  行级模式(mysql5.7的默认模式)<br>3、mixed              混合模式</p><ul><li>statement      语句模式(mysql5.6的默认模式)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前mysql5.6默认模式</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%binlog_format%&#x27;</span>;</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| Variable_name | Value     |</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| binlog_format | STATEMENT |</span><br><span class="line">+---------------+-----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前mysql5.7默认模式</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%binlog_format%&#x27;</span>;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| binlog_format | ROW   |</span><br><span class="line">+---------------+-------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#语句模式的每一条语句都很清晰</span></span><br><span class="line">优点：简单易读，占用磁盘空间小</span><br><span class="line">缺点：不易读</span><br></pre></td></tr></table></figure><ul><li>row                 行级模式(mysql5.7的默认模式   企业常用的模式)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">优点：严谨记录原数据和数据的变化过程，不容易丢数据</span><br><span class="line">缺点：占用磁盘空间大，不易读</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.6开启行级模式</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">.....</span><br><span class="line">binlog_format=row</span><br></pre></td></tr></table></figure><ul><li>mixed              混合模式(上面2种模式的混合     不常用)</li></ul><p><strong>二进制日志的查看方式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#二进制日志查看方式</span></span><br><span class="line">[root@db01 ~]# mysqlbinlog /app/mysql-5.6.50/data/mysql-bin.000010 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db04 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.7.44/data/mysql-bin.000001 </span><br><span class="line"><span class="built_in">base64</span>加密算命去给他解码</span><br><span class="line">decode-rows:转码</span><br><span class="line">incode  编码</span><br><span class="line"></span><br><span class="line"><span class="comment">#只看和某个binlog库相关的数据   -d+库名</span></span><br><span class="line">[root@db04 ~]# mysqlbinlog --base64-output=decode-rows -vvv -d binlog /app/mysql-5.7.44/data/mysql-bin.000001 </span><br><span class="line"></span><br><span class="line">mysql5.6:一般新数据库at 120位置点之后就是写入的数据</span><br><span class="line">mysql5.7:一般新数据库at 154位置点之后就是写入的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#mysqlbinlog用的什么工作模式，怎么解析数据的？  面试问题</span></span><br><span class="line">行级模式</span><br><span class="line">mysqlbinlog --base64-output=decode-rows -vvv    就可以解析出来</span><br></pre></td></tr></table></figure><p><strong>二进制日志的操作</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启方式 </span></span><br><span class="line"><span class="comment">#注意:在mysql5.7中开启binlog必须要加上server-id。</span></span><br><span class="line">[root@db01 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">.....</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">server_id=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前有哪些binlog  以及binlog的大小</span></span><br><span class="line">物理方法</span><br><span class="line">[root@db04 ~]# ll /app/mysql-5.7.44/data/</span><br><span class="line">-rw-r----- 1 mysql mysql      688 Aug 20 14:26 mysql-bin.000001</span><br><span class="line"></span><br><span class="line">mysql命令行查看</span><br><span class="line">root@localhost:(none) &gt; show binary logs;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前最新的binlog和位置点</span></span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看指定binlog中的所有事件，不适合看行级模式</span></span><br><span class="line">root@localhost:(none) &gt; show binlog events <span class="keyword">in</span>  <span class="string">&#x27;mysql-bin.000012&#x27;</span>;</span><br></pre></td></tr></table></figure><p>事件介绍<br>1）在binlog中最小的记录单元为event<br>2）一个事务会被拆分成多个事件（event）</p><p><strong>事件的特性(binlog的特性)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1）每个event都有一个开始位置（start position）和结束位置（stop position）。</span><br><span class="line">2）所谓的位置就是event对整个二进制的文件的相对位置（文件大小）</span><br><span class="line">3）对于一个二进制日志中，前120个position是文件格式信息预留空间（MySQL5.6）。</span><br><span class="line">   对于一个二进制日志中，前154个position是文件格式信息预留空间（MySQL5.7）</span><br><span class="line">4）MySQL第一个记录的事件，都是从120开始的</span><br></pre></td></tr></table></figure><p><strong>利用二进制日志恢复数据    （MySQL 5.6）</strong></p><p>1、模拟数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">1、#刷新的binlog,并且从120开始</span><br><span class="line">root@localhost:(none) &gt; flush logs;</span><br><span class="line">root@localhost:(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000012 |      120 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line">2、#创建binlog库 表 </span><br><span class="line">root@localhost:(none) &gt; create database binlog;</span><br><span class="line">root@localhost:(none) &gt; use binlog;</span><br><span class="line">root@localhost:binlog &gt; create table binlog_table(<span class="built_in">id</span> int);</span><br><span class="line"></span><br><span class="line">3、#插入数据</span><br><span class="line">root@localhost:binlog &gt; insert into binlog_table values(1);</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">4、#再插入数据</span><br><span class="line">root@localhost:binlog &gt; insert into binlog_table values(2);</span><br><span class="line">root@localhost:binlog &gt; insert into binlog_table values(3);</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">5、#删除一条数据</span><br><span class="line">root@localhost:binlog &gt; delete from binlog_table <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line">root@localhost:binlog:18: &gt;<span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">| 2    |</span><br><span class="line">| 3    |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">6、#修改一条数据</span><br><span class="line">root@localhost:binlog &gt; update binlog_table <span class="built_in">set</span> <span class="built_in">id</span>=22 <span class="built_in">where</span> <span class="built_in">id</span>=2;</span><br><span class="line">root@localhost:binlog &gt; <span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   22 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">7、#删表</span><br><span class="line">root@localhost:binlog &gt; drop table binlog_table;</span><br><span class="line"></span><br><span class="line">8、#删库</span><br><span class="line">root@localhost:binlog &gt; drop database binlog;</span><br></pre></td></tr></table></figure><p>2、使用bin log 恢复数据到delete之前</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">恢复到： </span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">你要知道你在这个状态之后执行了什么：执行了delete</span><br><span class="line"></span><br><span class="line">1、#准备一个新环境 db02</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">配置文件和旧环境大部分保持一致</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=1</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line">2、#把旧环境的数据库进行全备</span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A &gt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line">3、#新环境db02创建一个可以远程连接的用户(如果数据量比较大，可以创建用户远程恢复)</span><br><span class="line">root@localhost:(none) &gt; grant all on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | %         |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#db01将全备恢复到新环境</span><br><span class="line">[root@db01 ~]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/full.sql </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、#旧环境截取binlog</span><br><span class="line">因为一开始刷新的binlog,所以起始位置点从120开始 mysql-bin.000012</span><br><span class="line">起始位置点：120</span><br><span class="line">结束位置点: <span class="built_in">id</span>为1 2 3 之后，执行了delete   </span><br><span class="line">[root@db01 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000012 | grep -iC 10 delete</span><br><span class="line"><span class="comment"># at 937</span></span><br><span class="line"><span class="comment">#240820 11:18:12 server id 1  end_log_pos 1011 CRC32 0x9073f227         Query   thread_id=2     exec_time=0     error_code=0</span></span><br><span class="line">SET TIMESTAMP=1724123892/*!*/;</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line">......</span><br><span class="line">COMMIT/*!*/;</span><br><span class="line"></span><br><span class="line">查到结束位置点就是：937 (上下10行 begin 前面的at 937)</span><br><span class="line"></span><br><span class="line"><span class="comment">#截取</span></span><br><span class="line">[root@db01 ~]# mysqlbinlog --start-position=120 --stop-position=937 /app/mysql-5.6.50/data/mysql-bin.000012 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br><span class="line">6、#恢复截取的数据到新环境</span><br><span class="line">[root@db01 ~]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/binlog.sql </span><br><span class="line"></span><br><span class="line">7、#db02新环境查看数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from binlog.binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">8、#全备完了，用户如果还在往旧数据库写数据，需要恢复</span><br><span class="line"></span><br><span class="line">9、#应用割接</span><br><span class="line">      - 开发改代码</span><br><span class="line">      - 运维导出新环境的数据到旧环境</span><br></pre></td></tr></table></figure><p><strong>存在问题</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、生产中不会刷新binlog</span><br><span class="line"></span><br><span class="line">2、生产中肯定会一直提供服务，实时都在写入数据</span><br><span class="line"></span><br><span class="line">3、生产中截取数据时，可能会截取到其他库的数据</span><br><span class="line">加上-d  只截取和binlog相关的库</span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows -vvv -d binlog</span><br><span class="line">/app/mysql/data/mysql-bin.000030</span><br><span class="line"></span><br><span class="line">120~937位置点中包含binlog库的数据</span><br><span class="line">[root@db01 data]# mysqlbinlog --start-position=120 --stop-position=937 -d binlog /app/mysql/data/mysql-bin.000030 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#所以不能单独使用binlog截取数据，可以每天凌晨一点在定时任务里面做一次全备</span></span><br><span class="line"><span class="comment">#binlog只能用来当成是增量数据的备份，一定要配合mysqldum逻辑备份的全备一起使用，单独使用非常累</span></span><br></pre></td></tr></table></figure><p><strong>binlog的刷新和删除</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#binlog刷新</span></span><br><span class="line">1、重启mysql数据库</span><br><span class="line">2、执行flush logs;</span><br><span class="line">3、mysqladmin -uroot -p123 flush-log</span><br><span class="line">4、当binlog大小到达1G,会自动刷新</span><br><span class="line"></span><br><span class="line"><span class="comment">#binlog要定期清理和删除</span></span><br><span class="line">1、根据时间删除</span><br><span class="line"><span class="comment">#临时生效</span></span><br><span class="line">root@localhost:(none) &gt; SET GLOBAL expire_logs_days = 7;</span><br><span class="line"><span class="comment">#永久生效</span></span><br><span class="line">[root@db01 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">expire_logs_days = 7</span><br><span class="line"></span><br><span class="line">2、根据时间删除</span><br><span class="line">root@localhost:(none) &gt; PURGE BINARY LOGS BEFORE now() - INTERVAL 3 day;</span><br><span class="line"></span><br><span class="line">3、根据文件名删除(常用)</span><br><span class="line">root@localhost:(none) &gt; PURGE BINARY LOGS TO <span class="string">&#x27;mysql-bin.000020&#x27;</span>;</span><br><span class="line">20  会把20之前的全部删除</span><br></pre></td></tr></table></figure><p>4、慢查询日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">只要会开启他就行了 他是记录执行比较慢的SQL语句</span><br><span class="line"></span><br><span class="line"><span class="comment"># 作用：记录执行的比较慢的SQL语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认是否开启：否</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储位置：/app/mysql/data/</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%slow%&#x27;</span>;</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Variable_name             | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| log_slow_admin_statements | OFF                                  |</span><br><span class="line">| log_slow_slave_statements | OFF                                  |</span><br><span class="line">| slow_launch_time          | 2                                    |</span><br><span class="line">| slow_query_log            | OFF                                  |</span><br><span class="line">| slow_query_log_file       | /app/mysql-5.6.50/data/db01-slow.log |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 名字：hostname-slow.log</span></span><br><span class="line">db01-slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改方式</span></span><br><span class="line"><span class="comment">## 修改配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#指定是否开启慢查询日志</span></span><br><span class="line">slow_query_log=1</span><br><span class="line"><span class="comment">#指定慢日志文件存放位置（默认在data）</span></span><br><span class="line">slow_query_log_file=/app/mysql-5.6.50/data/db01-slow.log</span><br><span class="line"><span class="comment">#设定慢查询的阀值(默认10s)</span></span><br><span class="line">long_query_time=0.05</span><br><span class="line"><span class="comment">#不使用索引的慢查询语句是否记录到日志</span></span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line"><span class="comment">#查询检查返回少于该参数指定行的SQL不被记录到慢查询日志  （鸡肋）</span></span><br><span class="line">min_examined_row_limit=100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 模拟慢查询</span></span><br><span class="line"><span class="comment">#进入world库</span></span><br><span class="line">mysql&gt; use world</span><br><span class="line"><span class="comment">#查看表</span></span><br><span class="line">mysql&gt; show tables</span><br><span class="line"><span class="comment">#将city表中所有内容加到t1表中</span></span><br><span class="line">mysql&gt; create table t1 <span class="keyword">select</span> * from city;</span><br><span class="line"><span class="comment">#查看t1的表结构</span></span><br><span class="line">mysql&gt; desc t1;</span><br><span class="line"><span class="comment">#将t1表所有内容插入到t1表中（多插入几次）</span></span><br><span class="line">mysql&gt; insert into t1 <span class="keyword">select</span> * from t1;</span><br><span class="line">mysql&gt; insert into t1 <span class="keyword">select</span> * from t1;</span><br><span class="line">mysql&gt; insert into t1 <span class="keyword">select</span> * from t1;</span><br><span class="line">mysql&gt; insert into t1 <span class="keyword">select</span> * from t1;</span><br><span class="line"><span class="comment">#删除t1表中id&gt;2000的数据</span></span><br><span class="line">mysql&gt; delete from t1 <span class="built_in">where</span> <span class="built_in">id</span>&gt;2000;</span><br><span class="line"><span class="comment">#查看慢日志</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /application/mysql/data/mysql-db01</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# mysqldumpslow /app/mysql-5.6.50/data/db01-slow.log</span><br><span class="line">-s：指定排序顺序</span><br><span class="line">      c：Count 执行次数</span><br><span class="line">      t：Time 执行时间 总时间</span><br><span class="line">      r：Rows 结果行数 总行数</span><br><span class="line">      l：Lock 锁表时间 总锁表时间</span><br><span class="line">      </span><br><span class="line">      at：平均时间</span><br><span class="line">      ar：平均行数</span><br><span class="line">      al：平均锁表时间</span><br></pre></td></tr></table></figure><p><strong>使用percona公司提供的pt-query-digest工具分析慢查询日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">https://www.percona.com/  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、下载并安装</span><br><span class="line">[root@db01 ~]# yum install -y https://downloads.percona.com/downloads/percona-toolkit/3.6.0/binary/redhat/7/x86_64/percona-toolkit-3.6.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">2、这条命令就可以分析慢查询日志</span><br><span class="line">[root@db01 ~]# pt-query-digest /app/mysql-5.6.50/data/db01-slow.log </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">可视化界面：</span><br><span class="line">Anemometer基于pt-query-digest将MySQL慢查询可视化</span><br><span class="line">httpss://www.percona.com/downloads/percona-toolkit/LATEST/ 慢日志分析工具下载</span><br><span class="line">httpss://github.com/box/Anemometer 可视化代码下载</span><br></pre></td></tr></table></figure><p><strong>在恢复数据时，数据库在实时写入数据，怎么恢复</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#往数据库一直写数据的脚本</span></span><br><span class="line">[root@db01 ~]# vim insert.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">master_ip=$(hostname -I|awk  <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">mysql_cli=<span class="string">&quot;mysql -uroot -p123 -h<span class="variable">$&#123;master_ip&#125;</span>&quot;</span></span><br><span class="line"><span class="variable">$&#123;mysql_cli&#125;</span> -e <span class="string">&#x27;drop database if exists prod;&#x27;</span></span><br><span class="line"><span class="variable">$&#123;mysql_cli&#125;</span> -e <span class="string">&#x27;create database if not exists prod;&#x27;</span></span><br><span class="line"><span class="variable">$&#123;mysql_cli&#125;</span> -e <span class="string">&#x27;create table if not exists prod.prod(id int primary key auto_increment);&#x27;</span></span><br><span class="line">num=1</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"> <span class="variable">$&#123;mysql_cli&#125;</span> -e <span class="string">&quot;insert into prod.prod values(<span class="subst">$((num++)</span>));commit;&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>1、模拟写数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、#运行脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh</span><br><span class="line"></span><br><span class="line">2、#创建binlog库 表 </span><br><span class="line">root@localhost:(none) &gt; create database binlog;</span><br><span class="line">root@localhost:(none) &gt; use binlog;</span><br><span class="line">root@localhost:binlog &gt; create table binlog_table(<span class="built_in">id</span> int);</span><br><span class="line"></span><br><span class="line">3、#插入数据</span><br><span class="line">root@localhost:binlog &gt; insert into binlog_table values(1);</span><br><span class="line"></span><br><span class="line">4、#再插入数据</span><br><span class="line">root@localhost:binlog &gt; insert into binlog_table values(2);</span><br><span class="line">root@localhost:binlog &gt; insert into binlog_table values(3);</span><br><span class="line"></span><br><span class="line">5、#删除一条数据</span><br><span class="line">root@localhost:binlog &gt; delete from binlog_table <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line"></span><br><span class="line">6、#修改一条数据</span><br><span class="line">root@localhost:binlog &gt; update binlog_table <span class="built_in">set</span> <span class="built_in">id</span>=22 <span class="built_in">where</span> <span class="built_in">id</span>=2;</span><br><span class="line"></span><br><span class="line">7、#删表</span><br><span class="line">root@localhost:binlog &gt; drop table binlog_table;</span><br><span class="line"></span><br><span class="line">8、#删库</span><br><span class="line">root@localhost:binlog &gt; drop database binlog;</span><br></pre></td></tr></table></figure><p>2、恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">恢复到： </span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">你要知道你在这个状态之后执行了什么：执行了delete</span><br><span class="line">如果旧环境还能提供服务就暂时不停止库，一会再停止</span><br><span class="line"></span><br><span class="line">1、#准备一个新环境 db02</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">配置文件和旧环境大部分保持一致</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=1</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#旧环境截取binlog数据的位置点</span><br><span class="line">[root@db01 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015|grep -iC 10  <span class="string">&#x27;create database binlog&#x27;</span></span><br><span class="line">开始位置：11999</span><br><span class="line">[root@db01 ~]#  mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015|grep -iC 10 <span class="string">&#x27;delete from `binlog`&#x27;</span></span><br><span class="line">结束位置点：30114</span><br><span class="line"></span><br><span class="line">只恢复binlog库数据的截取</span><br><span class="line">[root@db01 ~]# mysqlbinlog --start-position=11999 --stop-position=30114 -d binlog /app/mysql-5.6.50/data/mysql-bin.000015 &gt; /tmp/binlog.sql </span><br><span class="line"></span><br><span class="line">3、#新环境db02创建一个可以远程连接的用户(如果数据量比较大，可以创建用户远程恢复)</span><br><span class="line">root@localhost:(none) &gt; grant all on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4、#db01将截取的数据恢复到新环境</span><br><span class="line">[root@db01 ~]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/binlog.sql </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、#新环境查看数据</span><br><span class="line">root@localhost:(none) &gt; show databases;</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from binlog.binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">6、#应用割接   运维导出新环境binlog的数据到旧环境</span><br><span class="line">[root@db02 ~]# mysqldump -B binlog &gt; /tmp/binlog2.sql</span><br><span class="line">[root@db02 ~]# scp /tmp/binlog2.sql 172.16.1.51:/tmp</span><br><span class="line"></span><br><span class="line">7、#挂维护页，停止连接数据库的程序tomcat php，不能停止数据库，因为导入数据需要使用mysql客户端的命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">8、#新环境关闭binlog的记录，防止binlog被污染,再恢复数据</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line">root@localhost:binlog &gt; <span class="built_in">source</span> /tmp/binlog2.sql;</span><br><span class="line"></span><br><span class="line">9、#开启binlog的记录</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line">root@localhost:binlog &gt; <span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">10、#取消维护页，开启连接数据库的服务</span><br></pre></td></tr></table></figure><h3 id="MySQL数据备份和恢复">MySQL数据备份和恢复</h3><p><strong>备份的原因</strong><br>运维工作的核心简单概括就两件事:<br>1）第一个是保护公司的数据.<br>2）第二个是让网站能7*24小时提供服务(用户体验)。</p><p><strong>备份的类型</strong><br>冷备份(停服务做备份)：(mysqldump做不了)<br>这些备份在用户不能访问数据时进行，因此无法读取或修改数据。这些脱机备份会阻止执行任何使用数据的活动。这些类型的备份不会干扰正常运行的系统的性能。但是，对于某些应用程序，会无法接受必须在一段较长的时间里锁定或完全阻止用户访问数据。</p><p>温备份(不停服务做备份，但是备份过程中会锁表)：<br>这些备份在读取数据时进行，但在多数情况下，在进行备份时不能修改数据本身。这种中途备份类型的优点是不必完全锁定最终用户。但是，其不足之处在于无法在进行备份时修改数据集，这可能使这种类型的备份不适用于某些应用程序。在备份过程中无法修改数据可能产生性能问题。</p><p>热备份(不停服务做备份，也不锁表)：<br>这些动态备份在读取或修改数据的过程中进行，很少中断或者不中断传输或处理数据的功能。使用热备份时，系统仍可供读取和修改数据的操作访问。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">恢复数据的时候一定要跟开发确认好</span><br><span class="line"></span><br><span class="line">逻辑备份 物理备份可以一起用，哪种速度快，可以考虑使用</span><br></pre></td></tr></table></figure><p><strong>备份的工具</strong></p><p>1、mysqldump (逻辑)<br>mysql原生自带很好用的逻辑备份工具</p><p>2、mysqlbinlog (逻辑)<br>实现binlog备份的原生态命令</p><p>3、xtrabackup (物理)<br>precona公司开发的性能很高的物理备份工具</p><p><strong>备份的方式</strong></p><ul><li>逻辑备份</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">基于SQL语句的备份</span><br><span class="line">1）binlog</span><br><span class="line">2）into outfile</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">secure-file-priv=/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个是恢复表里面的真实数据</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from world.city into outfile <span class="string">&#x27;/tmp/world_city.data&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3）mysqldump</span><br><span class="line">4）replication(主从复制)</span><br><span class="line">5) mysqlbinlog</span><br></pre></td></tr></table></figure><ul><li><p>物理备份</p><p>基于数据文件的备份<br>1）Xtrabackup（percona公司写的)</p></li></ul><p><strong>备份策略</strong></p><ul><li>全备：备份所有数据</li><li>增备：每次基于上一次备份后新增的数据</li><li>差异备份：(每次都基于全备)</li></ul><p><img src="../image/study_img/image-20240821103326915.png" alt="image-20240821103326915"></p><p><strong>mysqldump逻辑备份工具</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端命令选项</span></span><br><span class="line">-u：指定用户</span><br><span class="line">-p：指定密码</span><br><span class="line">-h：指定主机</span><br><span class="line">-P：指定端口</span><br><span class="line">-S：指定socket文件</span><br></pre></td></tr></table></figure><p><strong>备份命令的选项</strong></p><p>1、全备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-A  /  --all-databases :备份mysql的所有库和所有表</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 -A &gt; /tmp/full.sql  </span><br></pre></td></tr></table></figure><p>2、库级备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-B    /   --databases  ：指定库做备份</span><br><span class="line"></span><br><span class="line"><span class="comment">#mysqldupm -uroot -p123 -B 库名  库名 库名  库名...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定单个库做备份    (备份出来的文件有建库语句)</span></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 -B world &gt; /tmp/world.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复方式</span></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 &lt; /tmp/world.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定多个库做备份</span></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 -B world student &gt; /tmp/world_stu.sql</span><br></pre></td></tr></table></figure><p>3、表级备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#不加选项，直接写库名字</span></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 world &gt; /tmp/world1.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复方式(恢复时需要指定一个库)</span></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 <span class="built_in">test</span> &lt; /tmp/world1.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysqldump -uroot -p123 库名 表名 表名 表名 表名...</span></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 linux8 city &gt; /tmp/linux8_city.sql</span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 linux8 prod &gt; /tmp/linux8_prod.sql</span><br></pre></td></tr></table></figure><p>4、打点备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打点备份(备份位置点和名字) </span></span><br><span class="line">好处：这次全备就记录到这个位置点了，新增的数据就是这个点之后的，想截取binlog，开始位置点就看这个点，结束位置点去binlog里面截取</span><br><span class="line"></span><br><span class="line">--master-data=[0|1|2] ：(温备选项)  </span><br><span class="line"></span><br><span class="line">his option will turn --lock-all-tables on(使用这个选项时，会打开 --lock--all-tables选项，会锁表)</span><br><span class="line">unless --single-transaction is specified too(除非加入 --single-transaction这个选项，就不会被锁表(快照)) </span><br><span class="line"></span><br><span class="line">0：关闭这个选项，跟不写这个选项一样，没有change master的记录</span><br><span class="line">1：If equal to 1, will <span class="built_in">print</span> it as a CHANGE MASTER <span class="built_in">command</span>; </span><br><span class="line">    <span class="comment">#打印chenge master语句</span></span><br><span class="line">2：<span class="keyword">if</span> equal to 2, that <span class="built_in">command</span> will be prefixed with a comment symbol.</span><br><span class="line">    <span class="comment">#chenge master将会被注释掉(主从复制可以用 2比较常用)  文件的22行记录</span></span><br></pre></td></tr></table></figure><p>5、快照备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#快照备份</span></span><br><span class="line">--single--transaction：(热备选项) 不锁表，不影响用户持续写入数据</span><br><span class="line"></span><br><span class="line">加入这个选项，在备份的时候就相当于拍了快照，就备份到目前的指定位置，后面用户写入的数据我不备份，只有快照我不知道备份到哪里，需要配合打点备份使用，用户写入的数据就是这个点之后的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#全备且热备的命令</span></span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A --master-data=2 --single-transaction &gt; /tmp/full.sgl</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /tmp/full.sgl</span><br><span class="line">22行：</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000015&#x27;</span>, MASTER_LOG_POS=105700;</span><br><span class="line">记录这次全备，备份到mysql-bin.000015，位置点是：10500，这个点之后的数据就是新增数据</span><br></pre></td></tr></table></figure><p>6、备份函数和存储过程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-R： 函数和储存过程是开发写程序的时候写的(如果有就备份，如果没有就不备份，但是加上这个选项也没有任何影响)</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -p123 -A -R --master-data=2 --single-transaction &gt; /tmp/full.sgl</span><br></pre></td></tr></table></figure><p>7、备份触发器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--triggers:  备份触发器 (如果开发写了就备份，如果没有就不备份,加上这个选项也没有任何影响)</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction &gt; /tmp/full.sgl</span><br><span class="line"></span><br><span class="line"><span class="comment">#压缩</span></span><br><span class="line">mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction |gzip &gt; /tmp/full.sgl</span><br><span class="line"></span><br><span class="line"><span class="comment">#完整的备份语句</span></span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction|gzip &gt; /tmp/full_$(<span class="built_in">date</span> +%F).sql.gz</span><br></pre></td></tr></table></figure><p>8、刷新binlog备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-F：做备份的同时，每备份一个库，刷新一个新的binlog出来(不常用)</span><br><span class="line">出来的是没有用的binlog,小文件就会多，会导致inode被沾满</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 -B table1 table2 table3 -F &gt; /tmp/test_binlog.sql</span><br><span class="line">会刷新3个binlog出来</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#认识，但不用的选项</span></span><br><span class="line">-d:仅备份表结构</span><br><span class="line">-t:仅备份数据</span><br></pre></td></tr></table></figure><p><strong>完整的热备语句</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">任何场景的备份命令：</span><br><span class="line">压缩，并且记录备份时间戳,写脚本也适用</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction|gzip &gt; /tmp/full_$(<span class="built_in">date</span> +%F).sql.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-rw-r--r--  1 root root 252419 Aug 22 00:55 full_2024-08-22.sql.gz</span><br><span class="line"><span class="comment">#解压，恢复数据不需要解压的</span></span><br><span class="line">[root@db01 ~]# gzip -d /tmp/full_2024-08-22.sql.gz </span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复数据</span></span><br><span class="line">[root@db01 ~]# zcat /tmp/full_2024-08-22.sql.gz |mysql -uroot -p123</span><br></pre></td></tr></table></figure><p><font color = red> 注意：</font><br>1）mysqldump在备份和恢复时都需要MySQL实例启动为前提<br>2）一般数据量级100G以内，大约15-30分钟可以恢复（PB、EB就需要考虑别的方式）<br>3）mysqldump是以覆盖的形式恢复数据的</p><p><strong>企业故障恢复案例1</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">背景：</span><br><span class="line">正在运行的网站系统，MySQL数据库，数据量25G，日业务增量10-15M。</span><br><span class="line"></span><br><span class="line">备份策略：</span><br><span class="line">每天23：00，计划任务调用mysqldump执行全备脚本</span><br><span class="line"></span><br><span class="line">故障时间点：</span><br><span class="line">上午10点开发人员误删除一个核心业务表，如何恢复？</span><br><span class="line"></span><br><span class="line"><span class="comment">#23~10点的增量数据要截取</span></span><br><span class="line"><span class="comment">#删表语句后面新增的数据也要截取</span></span><br><span class="line"></span><br><span class="line">思路：</span><br><span class="line">1）停业务避免数据的二次伤害</span><br><span class="line">2）找一个临时的库，恢复前一天的全备</span><br><span class="line">3）截取前一天23：00到第二天10点误删除之间的binlog，恢复到临时库</span><br><span class="line">4）测试可用性和完整性</span><br><span class="line">5）开启业务前的两种方式</span><br><span class="line">    a.直接使用临时库顶替原生产库，前端应用割接到新库</span><br><span class="line">    b.将误删除的表单独导出，然后导入到原生产环境</span><br><span class="line">6）开启业务</span><br></pre></td></tr></table></figure><p>1、故障模拟演练</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">1、#先执行写入数据的脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">2、#创建库创表</span><br><span class="line">root@localhost:(none) &gt; create database hexin;</span><br><span class="line">root@localhost:(none) &gt; use hexin;</span><br><span class="line">root@localhost:hexin &gt; create table hexin(<span class="built_in">id</span> int);</span><br><span class="line"></span><br><span class="line">3、#运行那么久了，往里面写点数据</span><br><span class="line">root@localhost:hexin &gt; insert into hexin values(1),(2),(3),(4);</span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">4、#假设现在到晚上23点了，任务计划自动做全备</span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction|gzip &gt; /tmp/full_$(<span class="built_in">date</span> +%F).sql.gz</span><br><span class="line"></span><br><span class="line">5、#模拟新增数据</span><br><span class="line">root@localhost:hexin &gt; update hexin <span class="built_in">set</span> <span class="built_in">id</span>=10 <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">root@localhost:hexin &gt; delete from hexin <span class="built_in">where</span> <span class="built_in">id</span>=3;</span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">6、#上午10点开发人员误删除一个核心业务表</span><br><span class="line">root@localhost:hexin &gt; drop table hexin;</span><br><span class="line"></span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">ERROR 1146 (42S02): Table <span class="string">&#x27;hexin.hexin&#x27;</span> doesn<span class="string">&#x27;t exist</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">如果网站不能提供服务了就停止数据库，如果网站还能使用，就可以不停止数据库</span></span><br></pre></td></tr></table></figure><p>2、恢复(不停库)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">+------+   <span class="comment">#恢复到这里</span></span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、#准备新环境  db02</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">配置文件和旧环境大部分保持一致</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=1</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#新环境创建一个远程连接的用户</span><br><span class="line">root@localhost:(none) &gt; grant all on *.* to root@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#将头一天的全备恢复到新环境</span><br><span class="line">[root@db01 ~]# zcat /tmp/full_2024-08-22.sql.gz |mysql -uroot -p123 -h172.16.1.52</span><br><span class="line">新环境查看</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from hexin.hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">3、#截取binlog新增数据</span><br><span class="line">[root@db01 ~]# zcat /tmp/full_2024-08-22.sql.gz |<span class="built_in">head</span> -25</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000015&#x27;</span>, MASTER_LOG_POS=527709;</span><br><span class="line">在全备里面   <span class="string">&#x27;mysql-bin.000015   </span></span><br><span class="line"><span class="string">开始位置点：527709</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">结束位置点：上午10点开发人员误删除一个核心业务表</span></span><br><span class="line"><span class="string">drop table hexin这个语句之前就是结束位置点</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015 |grep -iC 10 &#x27;</span>drop table `hexin`<span class="string">&#x27;</span></span><br><span class="line"><span class="string">结束位置点：584459</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqlbinlog --start-position=527709 --stop-position=584459 /app/mysql-5.6.50/data/mysql-bin.000015 &gt; /tmp/inc1.sql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4、#将第一段的数据恢复到新环境</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/inc1.sql </span></span><br><span class="line"><span class="string">新环境查看</span></span><br><span class="line"><span class="string">root@localhost:(none) &gt; select * from hexin.hexin;</span></span><br><span class="line"><span class="string">+------+</span></span><br><span class="line"><span class="string">| id   |</span></span><br><span class="line"><span class="string">+------+</span></span><br><span class="line"><span class="string">|   10 |</span></span><br><span class="line"><span class="string">|    2 |</span></span><br><span class="line"><span class="string">|    4 |</span></span><br><span class="line"><span class="string">+------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5、#挂维护页，停止连接数据库的程序</span></span><br><span class="line"><span class="string">这个时候可以停止脚本执行</span></span><br><span class="line"><span class="string">查看总的数据</span></span><br><span class="line"><span class="string">root@localhost:hexin &gt; select count(*) from prod.prod;</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">| count(*) |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">|     4366 |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">6、#截取删表之后的新增数据</span></span><br><span class="line"><span class="string">开始位置点：上午10点开发人员误删除一个核心业务表</span></span><br><span class="line"><span class="string">drop table hexin这个语句位置点，的后面一个位置点</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015 |grep -iC 10 &#x27;</span>drop table `hexin`<span class="string">&#x27;</span></span><br><span class="line"><span class="string">SET @@session.pseudo_thread_id=2475/*!*/;</span></span><br><span class="line"><span class="string">DROP TABLE `hexin` /* generated by server */</span></span><br><span class="line"><span class="string">/*!*/;</span></span><br><span class="line"><span class="string"># at 584579</span></span><br><span class="line"><span class="string">#240822  1:54:12 server id 1</span></span><br><span class="line"><span class="string">开束位置点：584579</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">结束位置点：(需要停止连接数据库的服务才好找，不要往数据库里面写数据)</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015|tail</span></span><br><span class="line"><span class="string"># at 940180                     结束位置点</span></span><br><span class="line"><span class="string">240822  2:26:40 server id 1  &#x27;</span>end_log_pos 940211<span class="string">&#x27; CRC32 0xd479131d       Xid = 26217</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">或者直接看文件大小就可以，结束位置点和binlog文件停止写入的大小一样</span></span><br><span class="line"><span class="string">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span></span><br><span class="line"><span class="string">-rw-rw---- 1 mysql mysql   940211 Aug 22 02:26 mysql-bin.000015</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">结束位置点：940211    (end_log_pos 940211)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqlbinlog --start-position=584579 --stop-position=940211 /app/mysql-5.6.50/data/mysql-bin.000015 &gt; /tmp/inc2.sql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">7、#将第二段的新增数据恢复到新环境</span></span><br><span class="line"><span class="string">[root@db01 ~]#  mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/inc2.sql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">新环境查看总的数据，和旧环境的数据一样</span></span><br><span class="line"><span class="string">root@localhost:(none) &gt; select count(*) from prod.prod;</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">| count(*) |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">|     4366 |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">1 row in set (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">root@localhost:(none) &gt; select * from hexin.hexin;</span></span><br><span class="line"><span class="string">+------+</span></span><br><span class="line"><span class="string">| id   |</span></span><br><span class="line"><span class="string">+------+</span></span><br><span class="line"><span class="string">|   10 |</span></span><br><span class="line"><span class="string">|    2 |</span></span><br><span class="line"><span class="string">|    4 |</span></span><br><span class="line"><span class="string">+------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">8、#应用割接</span></span><br><span class="line"><span class="string">        - 运维：新环境全备，导入旧环境</span></span><br><span class="line"><span class="string">        - 开发：修改连接数据库的代码</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">9、#取消护页，开启连接数据库的程序</span></span><br></pre></td></tr></table></figure><p><strong>企业故障恢复案例2</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">背景：</span><br><span class="line">正在运行的网站系统，MySQL数据库，数据量25G，日业务增量10-15M。</span><br><span class="line"></span><br><span class="line">备份策略：</span><br><span class="line">每天23：00，计划任务调用mysqldump执行全备脚本</span><br><span class="line"></span><br><span class="line">故障时间点：</span><br><span class="line">上午10点开发人员误删除一个核心业务表之前，<span class="string">&#x27;还误修改了一条数据,误将1改成10了&#x27;</span>，如何恢复？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最终要恢复的数据是：</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#截取思路</span></span><br><span class="line">1、截取全备~update之前</span><br><span class="line">2、update之后~(drop table hexin)上午10点开发人员误删除一个核心业务表之前</span><br><span class="line">3、(drop table hexin)之后~停库</span><br></pre></td></tr></table></figure><p>1、故障模拟演练</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">1、#先执行写入数据的脚本</span><br><span class="line">[root@db01 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">2、#创建库创表</span><br><span class="line">root@localhost:(none) &gt; create database hexin;</span><br><span class="line">root@localhost:(none) &gt; use hexin;</span><br><span class="line">root@localhost:hexin &gt; create table hexin(<span class="built_in">id</span> int);</span><br><span class="line"></span><br><span class="line">3、#运行那么久了，往里面写点数据</span><br><span class="line">root@localhost:hexin &gt; insert into hexin values(1),(2),(3),(4);</span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">4、#假设现在到晚上23点了，任务计划自动做全备</span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -A -R --triggers --master-data=2 --single-transaction|gzip &gt; /tmp/full_$(<span class="built_in">date</span> +%F).sql.gz</span><br><span class="line"></span><br><span class="line">5、#模拟新增数据</span><br><span class="line">root@localhost:hexin &gt; update hexin <span class="built_in">set</span> <span class="built_in">id</span>=10 <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">root@localhost:hexin &gt; delete from hexin <span class="built_in">where</span> <span class="built_in">id</span>=3;</span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|   10 |</span><br><span class="line">|    2 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">6、#上午10点开发人员误删除一个核心业务表</span><br><span class="line">root@localhost:hexin &gt; drop table hexin;</span><br><span class="line"></span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> * from hexin;</span><br><span class="line">ERROR 1146 (42S02): Table <span class="string">&#x27;hexin.hexin&#x27;</span> doesn<span class="string">&#x27;t exist</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">如果网站不能提供服务了就停止数据库，如果网站还能使用，就可以不停止数据库</span></span><br></pre></td></tr></table></figure><p>2、恢复(不停库)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">+------+   <span class="comment">#恢复到这里</span></span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、#准备新环境  db02</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">配置文件和旧环境大部分保持一致</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip-name-resolve</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server_id=1</span><br><span class="line">lower_case_table=1</span><br><span class="line"><span class="comment">#innodb_data_file_path=ibdata1:12M;ibdata2:50M:autoextend</span></span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#新环境创建一个远程连接的用户</span><br><span class="line">root@localhost:(none) &gt; grant all on *.* to root@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;   <span class="comment">#当全备恢复过来，这个用户就不在了，我们后面用远程用户导数据，是没有刷新表或者重启mysql，如果一旦做了重启或者刷新，这个用户就不能用了</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#将头一天的全备恢复到新环境</span><br><span class="line">[root@db01 ~]# zcat /tmp/full_2024-08-22.sql.gz |mysql -uroot -p123 -h172.16.1.52</span><br><span class="line">新环境查看</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from hexin.hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#截取思路</span></span><br><span class="line">1、截取全备~update之前</span><br><span class="line">2、update之后~(drop table hexin)上午10点开发人员误删除一个核心业务表之前</span><br><span class="line">3、(drop table hexin)之后~停库</span><br><span class="line"></span><br><span class="line">3、#截取全备~update之前</span><br><span class="line">[root@db01 ~]# zcat /tmp/full_2024-08-22.sql.gz |<span class="built_in">head</span> -25</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000015&#x27;</span>, MASTER_LOG_POS=969876;</span><br><span class="line">开始位置点：969876</span><br><span class="line"></span><br><span class="line">[root@db01 ~]#  mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015 |grep -iC 10 <span class="string">&#x27;update `hexin`&#x27;</span></span><br><span class="line">结束位置点：971995</span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position=969876 --stop-position=971995 /app/mysql-5.6.50/data/mysql-bin.000015 &gt; /tmp/inc1.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#截取update之后~上午10点开发人员误删除一个核心业务表</span><br><span class="line">[root@db01 ~]#  mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015 |grep -iC 10 <span class="string">&#x27;update `hexin`&#x27;</span></span><br><span class="line">开始位置点：972090</span><br><span class="line"></span><br><span class="line">[root@db01 ~]#  mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015 |grep -iC 10 <span class="string">&#x27;drop table `hexin`&#x27;</span></span><br><span class="line">结束位置点：979382</span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position=972090 --stop-position=979382 /app/mysql-5.6.50/data/mysql-bin.000015 &gt; /tmp/inc2.sql</span><br><span class="line"></span><br><span class="line">5、#挂维护页，停止连接数据库的程序</span><br><span class="line">这个时候可以停止脚本执行</span><br><span class="line">查看总的数据</span><br><span class="line">root@localhost:hexin &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     2115 |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line">6、#截取(drop table hexin)之后~停库(停止连接数据库的程序)</span><br><span class="line">[root@db01 ~]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql-5.6.50/data/mysql-bin.000015 |grep -iC 10 <span class="string">&#x27;drop table `hexin`&#x27;</span></span><br><span class="line">开始位置点：979502</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">-rw-rw---- 1 mysql mysql  1334948 Aug 22 04:25 mysql-bin.000015</span><br><span class="line">结束位置点：1334948</span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position=979502 --stop-position=1334948 /app/mysql-5.6.50/data/mysql-bin.000015 &gt; /tmp/inc3.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7、#将数据恢复到新环境</span><br><span class="line">mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/inc1.sql</span><br><span class="line">mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/inc2.sql</span><br><span class="line">mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/inc3.sql</span><br><span class="line"></span><br><span class="line">新环境查看总的数据，和旧环境的数据一样</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     2115 |</span><br><span class="line">+----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from hexin.hexin;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    4 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">8、#应用割接</span><br><span class="line">        - 运维：新环境全备，导入旧环境</span><br><span class="line">        - 开发：修改连接数据库的代码</span><br><span class="line">        </span><br><span class="line">9、#取消护页，开启连接数据库的程序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果在就服务器里面恢复，先截取使用数据，把所有需要的数据截取准备好，停服务，按顺序一条一条往里面恢复</span><br></pre></td></tr></table></figure><h3 id="mysql物理备份">mysql物理备份</h3><p><strong>安装xtrabackup</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1、下载2.4版本的xtrabckup   db02</span><br><span class="line">[root@db02 ~]# wget https://downloads.percona.com/downloads/Percona-XtraBackup-2.4/Percona-XtraBackup-2.4.29/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.29-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">2、安装</span><br><span class="line">[root@db02 ~]# yum localinstall -y percona-xtrabackup-24-2.4.29-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">3、可以tabl出这两个命令就安装成功</span><br><span class="line"><span class="comment">#(热备的命令,专门innodb储存引擎做备份的)</span></span><br><span class="line">[root@db02 ~]# innobackupex </span><br><span class="line"></span><br><span class="line"><span class="comment">#(老版本的命令,他也可以做innodb的存储引擎,要锁表,相当于温备了,可以备任何储存引擎,属于温备)</span></span><br><span class="line">[root@db02 ~]# xtrabackup  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、配置文件加上socket路径，mysql用户需要有进入这个目录的权限</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">....</span><br><span class="line"><span class="comment">#二进制安装的mysql默认在tmp下</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"><span class="comment">#客户端需要指定socket文件，不然备份的时候会报错</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">5、准备新环境  db02</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -fr /app/mysql/data</span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line">6、#先给root用户配置一个密码</span><br><span class="line">[root@db02 ~]# mysqladmin -u root -p password 123</span><br><span class="line">Enter password: <span class="comment">#直接回车</span></span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">创建一个用户</span><br><span class="line">root@localhost:(none) &gt; grant all on *.* to root@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>; </span><br></pre></td></tr></table></figure><p><strong>Xtrabackup介绍</strong><br>1）对于非innodb表（比如myisam）是直接锁表cp数据文件，属于一种温备。<br>2）对于innodb的表（支持事务），不锁表，cp数据页最终以数据文件方式保存下来，并且把redo和undo一并备走，属于热备方式。<br>3）备份/恢复时读取配置文件/etc/my.cnf</p><p><strong>全备</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">热备：备份的时候，可以写数据</span><br><span class="line">温备：备份的时候，只能读，不能写</span><br><span class="line"></span><br><span class="line">1、#修改配置文件</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">....</span><br><span class="line"><span class="comment">#二进制安装的mysql默认在tmp下</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line"><span class="comment">#客户端需要指定socket文件，不然备份的时候会报错</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#(热备)全备的命令</span><br><span class="line">root无密码 (backup不需要提前创建，会自动创建的)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root /backup</span><br><span class="line">root有密码</span><br><span class="line">[root@db02 ~]# innobackupex --user=root  --password=<span class="string">&#x27;123&#x27;</span> /backup</span><br><span class="line">请注意备份结果是否完成</span><br><span class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1625997) to (1625997) was copied.</span><br><span class="line">240822 15:16:57 completed OK!</span><br><span class="line"></span><br><span class="line"><span class="comment">#(锁表温备)全备的命令   如果公司不是inodb的储存引擎。就用温备</span></span><br><span class="line">[root@db02 ~]# xtrabackup --user-root --password=123 --backup --target-dir=/tmp/full_$(<span class="built_in">date</span> +%F)</span><br><span class="line">请注意备份结果是否完成</span><br><span class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (1625997) to (1625997) was copied.</span><br><span class="line">240822 15:15:52 completed OK!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#查看备份文件</span><br><span class="line">[root@db02 ~]# ll /backup/2024-08-22_15-16-55/</span><br><span class="line">total 12316</span><br><span class="line">-rw-r----- 1 root root      481 Aug 22 15:16 backup-my.cnf   <span class="comment">#mysql的配置文件</span></span><br><span class="line">-rw-r----- 1 root root 12582912 Aug 22 15:16 ibdata1         <span class="comment">#共享表空间,undo在里面</span></span><br><span class="line">drwxr-x--- 2 root root     4096 Aug 22 15:16 mysql</span><br><span class="line">drwxr-x--- 2 root root     4096 Aug 22 15:16 performance_schema</span><br><span class="line">drwxr-x--- 2 root root       20 Aug 22 15:16 <span class="built_in">test</span></span><br><span class="line">-rw-r----- 1 root root       21 Aug 22 15:16 xtrabackup_binlog_info  <span class="comment">#记录打点备份 备份到的位置点</span></span><br><span class="line">-rw-r----- 1 root root      135 Aug 22 15:16 xtrabackup_checkpoints <span class="comment">#form_lsn  to_lsn  查看增量备份是否衔接</span></span><br><span class="line">-rw-r----- 1 root root      465 Aug 22 15:16 xtrabackup_info    <span class="comment">#这次备份的信息</span></span><br><span class="line">-rw-r----- 1 root root     2560 Aug 22 15:16 xtrabackup_logfile   <span class="comment">#redo</span></span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/2024-08-22_15-16-55/xtrabackup_checkpoints</span><br><span class="line">backup_type = full-backuped   <span class="comment">#备份类型=全备</span></span><br><span class="line">from_lsn = 0                  <span class="comment">#日志版本号起点：lsn:日志版本号  从0号日志版本号开始备份</span></span><br><span class="line">to_lsn = 1625997              <span class="comment">#日志版本号备份到的点位   备份结束位置：1625997</span></span><br><span class="line">last_lsn = 1625997            <span class="comment">#最新的日志版本号   如果有用户往里面写入数据，这个数据就会比to_lsn大</span></span><br><span class="line">compact = 0</span><br><span class="line">recover_binlog_info = 0       <span class="comment">#是否覆盖二进制的log信息  0：关闭</span></span><br><span class="line">flushed_lsn = 1625997         <span class="comment">#备份完成后获取到的最新lsn</span></span><br><span class="line">增备的from_lsn 一定是上一次增备的to_lsn,要检查是否衔接上，没有连接上，做的增备数据就不对</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个文件里面的就好比打点备份  想截binlog 开始位置点就在这里面看</span></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/2024-08-22_16-05-44/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000004        24251</span><br></pre></td></tr></table></figure><p><strong>全备恢复</strong></p><p>恢复全备的条件：<br>1、被恢复的目录必须是空的(data目录是空的)<br>2、被恢复的数据实例是关闭的(需要停库)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#全备恢复之前：需要手动模拟CSR的恢复过程，把redo中的数据 重做，undo中的数据  回滚</span></span><br><span class="line">因为表空间里面的数据是不全的，有一部分在redo,如果只做redo,redo里面存在一下没有提交的数据，undo也要做一遍</span><br><span class="line"></span><br><span class="line">1、#先删除一个prod库,再恢复数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     1077 |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; drop database prod;</span><br><span class="line"></span><br><span class="line">2、#因为是物理备份，做redo undo之前需要停止数据库</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">3、#模拟CSR恢复过程：把redo中的数据 重做，undo中的数据  回滚，这个命令不需要连接服务端，所以恢复数据的时候可以停库</span><br><span class="line">这个重做要小心谨慎，这个是一次性的，做完了这次备份就不能用了，后面有增量数据，就不能从这个的基础上做增量备份了</span><br><span class="line">innobackupex --apply-log +全备的路径</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log /backup/2024-08-22_16-05-44/</span><br><span class="line"></span><br><span class="line">4、#模拟完成，查看目录，多了好几个东西</span><br><span class="line">[root@db02 ~]# ll /backup/2024-08-22_16-05-44/</span><br><span class="line"></span><br><span class="line">5、#恢复  清空data目录</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">恢复数据</span><br><span class="line">innobackupex --copy-bak +全备的路径</span><br><span class="line">[root@db02 ~]# innobackupex --copy-back /backup/2024-08-22_16-54-47/</span><br><span class="line">授权</span><br><span class="line">[root@db02 ~]# <span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/data</span><br><span class="line">启动</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line">查看数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|       53 |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line">----------------------不用这种方法：这个方法是底层原理---------------------</span><br><span class="line">5、#恢复  清空data目录</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data</span><br><span class="line">恢复数据</span><br><span class="line">[root@db02 ~]# <span class="built_in">mv</span> /backup/2024-08-22_16-05-44/ /app/mysql-5.6.50/data</span><br><span class="line">授权</span><br><span class="line">[root@db02 ~]# <span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/data</span><br><span class="line">启动</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line">查看数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|       53 |</span><br><span class="line">+----------+</span><br><span class="line">----------------------------------------------------------</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1、执行脚本</span><br><span class="line">[root@db02 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">2、等待一会 做全备</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=<span class="string">&#x27;123&#x27;</span> /backup</span><br><span class="line"></span><br><span class="line">3、查看数据里面是否有数据，并删除数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|      211 |</span><br><span class="line">+----------+</span><br><span class="line">root@localhost:(none) &gt; drop database prod;</span><br><span class="line"></span><br><span class="line">4、等待一会，停止脚本，进行数据的恢复</span><br><span class="line">[root@db02 ~]# sh insert.sh ^C</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">模拟CSR</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log /backup/2024-08-22_17-09-10/</span><br><span class="line">模拟完成，查看目录，多了好几个东西</span><br><span class="line">[root@db02 ~]# ll /backup/2024-08-22_17-09-10/</span><br><span class="line">[root@db02 ~]# innobackupex --copy-back /backup/2024-08-22_17-09-10/</span><br><span class="line">[root@db02 ~]# <span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line">查看数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|      113 |</span><br><span class="line">+----------+</span><br></pre></td></tr></table></figure><p><strong>增量备份和恢复</strong></p><p>备份方式<br>1）基于上一次备份进行增量<br>2）增量备份无法单独恢复，必须基于全备进行恢复<br>3）所有增量必须要按顺序合并到全备当中</p><p>1、备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">1、执行脚本</span><br><span class="line">[root@db02 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">2、全备  等待一会 做全备不带时间戳，并查看位置点</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp /backup/full_$(<span class="built_in">date</span> +%F)</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_checkpoints </span><br><span class="line">backup_type = full-backuped</span><br><span class="line">from_lsn = 0</span><br><span class="line">to_lsn = 3252565</span><br><span class="line">last_lsn = 3260144</span><br><span class="line"></span><br><span class="line">3、第一次增量备份</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/full_2024-08-22 /backup/inc1_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc1_2024-08-22-17/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3252565   <span class="comment">#要和全备的to_lsn一样</span></span><br><span class="line">to_lsn = 3473250</span><br><span class="line">last_lsn = 3477650</span><br><span class="line"></span><br><span class="line">4、第二次增备</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/inc1_2024-08-22-17 /backup/inc2_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc2_2024-08-22-17/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3473250   <span class="comment">#要和inc1的to_lsn一样</span></span><br><span class="line">to_lsn = 3540803</span><br><span class="line">last_lsn = 3554601</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、第三次增备</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/inc2_2024-08-22-17 /backup/inc3_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc3_2024-08-22-18/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3540803   <span class="comment">#要和inc2的to_lsn一样</span></span><br><span class="line">to_lsn = 3576288</span><br><span class="line">last_lsn = 3590568</span><br><span class="line"></span><br><span class="line">6、第四次增备</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/inc3_2024-08-22-18 /backup/inc4_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-18/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3576288</span><br><span class="line">to_lsn = 3625448</span><br><span class="line">last_lsn = 3626012</span><br><span class="line"></span><br><span class="line">第四次增量备份之后的数据只能去binlog里面去查找</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# ll /backup</span><br><span class="line">drwxr-x--- 8 root root  268 Aug 22 17:42 full_2024-08-22</span><br><span class="line">drwxr-x--- 7 root root  267 Aug 22 17:53 inc1_2024-08-22-17</span><br><span class="line">drwxr-x--- 7 root root  267 Aug 22 17:58 inc2_2024-08-22-17</span><br><span class="line">drwxr-x--- 7 root root  267 Aug 22 18:00 inc3_2024-08-22-18</span><br><span class="line">drwxr-x--- 7 root root  267 Aug 22 18:02 inc4_2024-08-22-18</span><br><span class="line"></span><br><span class="line">当前系统时间-1h</span><br><span class="line"><span class="built_in">date</span> +%F-%H -d <span class="string">&#x27;-1hour&#x27;</span></span><br><span class="line"><span class="built_in">date</span> +%F-%H -d <span class="string">&#x27;-1day&#x27;</span></span><br><span class="line"><span class="built_in">date</span> +%F-%H -d <span class="string">&#x27;-1minute&#x27;</span></span><br></pre></td></tr></table></figure><p>2、恢复</p><p>1）full+inc1+inc2+inc3+inc4<br>2）需要将inc1和inc2按顺序合并到full中<br>3）分步骤进行–apply-log</p><p><img src="../image/study_img/image-20240822114534116.png" alt="image-20240822114534116"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">1、#先查看里面有多少数据，再删除prod库</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     2181 |</span><br><span class="line">+----------+</span><br><span class="line">root@localhost:(none) &gt; drop database prod;</span><br><span class="line">脚本开始报错无法写入数据，停止脚本即可</span><br><span class="line">[root@db02 ~]# sh insert.sh ^C</span><br><span class="line"></span><br><span class="line">2、#停止数据库</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">3、#挪走data目录</span><br><span class="line">[root@db02 ~]# <span class="built_in">mv</span> /app/mysql-5.6.50/data /tmp/</span><br><span class="line"></span><br><span class="line">4、#第一步：在全备中apply-log时，只应用redo，不应用undo    把增备按照顺序合并到全备</span><br><span class="line">全备模拟CSR只做redo，不做undo,因为一条数据写进来，没有提交全备做完了，但在下一个增备里面提交了，如果这个时候把undo做了，数据就回滚了</span><br><span class="line">innobackupex --apply-log --redo-noly /backup/全备</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_checkpoints</span><br><span class="line">backup_type = log-applied  <span class="comment">#状态变了</span></span><br><span class="line">from_lsn = 0</span><br><span class="line">to_lsn = 3252565</span><br><span class="line">last_lsn = 3260144</span><br><span class="line"><span class="comment">#查看全备的位置点有无变化并记录下来</span></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001       </span><br><span class="line"></span><br><span class="line">5、#第二步：合并inc1合并到full中，并且apply-log，只应用redo，不应用undo</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only --incremental-dir=/backup/inc1_2024-08-22-17 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc1_2024-08-22-17/xtrabackup_checkpoints</span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3252565</span><br><span class="line">to_lsn = 3473250</span><br><span class="line">last_lsn = 3477650</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001  </span><br><span class="line"></span><br><span class="line">6、#第三步：合并inc2合并到full中，只做redo，不做undo</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only --incremental-dir=/backup/inc2_2024-08-22-17 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc2_2024-08-22-17/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3473250</span><br><span class="line">to_lsn = 3540803</span><br><span class="line">last_lsn = 3554601</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001  </span><br><span class="line"></span><br><span class="line">7、#第四步：合并inc3合并到full中，只做redo，不做undo</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only --incremental-dir=/backup/inc3_2024-08-22-18 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc3_2024-08-22-18/xtrabackup_checkpoints</span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3540803</span><br><span class="line">to_lsn = 3576288</span><br><span class="line">last_lsn = 3590568</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001  </span><br><span class="line"></span><br><span class="line">8、#第五步：合并inc4（最后一次）合并到full中，redo和undo都做</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --incremental-dir=/backup/inc4_2024-08-22-18 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-18/xtrabackup_checkpoints</span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 3576288</span><br><span class="line">to_lsn = 3625448</span><br><span class="line">last_lsn = 3626012</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001  </span><br><span class="line"></span><br><span class="line">9、#将全备--apply-log，redo和undo都应用</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">10、#恢复数据</span><br><span class="line">[root@db02 ~]# innobackupex --copy-back /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">11、#授权  启动</span><br><span class="line">[root@db02 ~]# <span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line">12、#连接进去查看一下数据是否对得上</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     1517 |</span><br><span class="line">+----------+  <span class="comment">#可以看到数据少了，还有一部分数据，在binlog里面</span></span><br><span class="line"></span><br><span class="line">13、#截取binlog</span><br><span class="line">合并完了，这个binlog的位置点也会合并</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        282633</span><br><span class="line">开始位置点：282633</span><br><span class="line"></span><br><span class="line">由于之前的data目录被挪到tmp了</span><br><span class="line">[root@db02 ~]# mysqlbinlog --base64-output=decode-rows /tmp/data/mysql-bin.000001 |grep  -iC 10 <span class="string">&#x27;drop database&#x27;</span></span><br><span class="line">结束位置点：407253</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqlbinlog --start-position=282633 --stop-position=407253 /tmp/data/mysql-bin.000001 &gt; /tmp/inc5.sql</span><br><span class="line"></span><br><span class="line">14、#进入数据库</span><br><span class="line">关闭binlog,防止binlog被污染，让binlog从120开始</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"></span><br><span class="line">导入数据</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">source</span> /tmp/inc5.sql</span><br><span class="line"></span><br><span class="line">开启binlog</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line"></span><br><span class="line">查看数据，已经恢复</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     2187 |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">增量备份挺麻烦的 所以企业里面都是做差异备份</span><br><span class="line">但是差异备份比较占磁盘空间</span><br></pre></td></tr></table></figure><p><strong>企业级增量恢复实战</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">背景：</span><br><span class="line">某大型网站，mysql数据库，数据量500G，每日更新量100M-200M</span><br><span class="line"></span><br><span class="line">备份策略：</span><br><span class="line">xtrabackup，每周六0:00进行全备，周一到周五及周日00:00进行增量备份。</span><br><span class="line"></span><br><span class="line">故障场景：</span><br><span class="line">周三下午2点出现数据库意外删除表操作。</span><br><span class="line">如何恢复？？？</span><br><span class="line"></span><br><span class="line"><span class="comment">#全备+增备+binlog</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240822201507914.png" alt="image-20240822201507914"></p><p>1、模拟备份删数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">1、#执行写数据的脚本</span><br><span class="line">[root@db02 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">2、#等待一会，全备 (周六)</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /backup/*</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp /backup/full_$(<span class="built_in">date</span> +%F)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_checkpoints </span><br><span class="line">backup_type = full-backuped</span><br><span class="line">from_lsn = 0</span><br><span class="line">to_lsn = 4215962</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#等待一会，增备inc1 (周日)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/full_2024-08-22/ /backup/inc1_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc1_2024-08-22-20/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4215962</span><br><span class="line">to_lsn = 4333233</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#等待一会，增备inc2 (周一)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/inc1_2024-08-22-20/ /backup/inc2_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc2_2024-08-22-20/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4333233</span><br><span class="line">to_lsn = 4395658</span><br><span class="line"></span><br><span class="line">5、#等待一会，增备inc3 (周二)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/inc2_2024-08-22-20/ /backup/inc3_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc3_2024-08-22-20/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4395658</span><br><span class="line">to_lsn = 4411035</span><br><span class="line"></span><br><span class="line">6、#等待一会，增备inc4 (周三)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/inc3_2024-08-22-20/ /backup/inc4_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-20/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4411035</span><br><span class="line">to_lsn = 4455757</span><br><span class="line"></span><br><span class="line">7、#周三下午2点出现数据库意外删除表操作，先查看数据，再删表</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     1199 |</span><br><span class="line">+----------+</span><br><span class="line">root@localhost:(none) &gt; drop table prod.prod;</span><br><span class="line">停止脚本运行</span><br><span class="line">[root@db02 ~]# sh insert.sh ^C</span><br></pre></td></tr></table></figure><p>2、恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">1、#停止数据库</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">3、#挪走data目录</span><br><span class="line">[root@db02 ~]# <span class="built_in">mv</span> /app/mysql-5.6.50/data /tmp/</span><br><span class="line"></span><br><span class="line">2、#第一步：在全备中apply-log时，只应用redo，不应用undo</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_checkpoints </span><br><span class="line">backup_type = log-applied</span><br><span class="line">from_lsn = 0</span><br><span class="line">to_lsn = 4215962</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        55527</span><br><span class="line"></span><br><span class="line">3、#第二步：合并inc1合并到full中，并且apply-log，只应用redo，不应用undo  (周日和周六合并)</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only --incremental-dir=/backup/inc1_2024-08-22-20 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc1_2024-08-22-20/xtrabackup_checkpoints</span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4215962</span><br><span class="line">to_lsn = 4333233</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc1_2024-08-22-20/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        112629</span><br><span class="line"></span><br><span class="line">4、#第三步：合并inc2合并到full中，只做redo，不做undo    (周一和周六合并)</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only --incremental-dir=/backup/inc2_2024-08-22-20 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc2_2024-08-22-20/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4333233</span><br><span class="line">to_lsn = 4395658</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc2_2024-08-22-20/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        144249</span><br><span class="line"></span><br><span class="line">5、#第四步：合并inc3合并到full中，只做redo，不做undo    (周二和周六合并)</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only --incremental-dir=/backup/inc3_2024-08-22-20 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc3_2024-08-22-20/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4395658</span><br><span class="line">to_lsn = 4411035</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc3_2024-08-22-20/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        163965</span><br><span class="line"></span><br><span class="line">6、#第五步：合并inc4（最后一次）合并到full中，redo和undo都做   (周三和周六合并)</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --incremental-dir=/backup/inc4_2024-08-22-20 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-20/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4411035</span><br><span class="line">to_lsn = 4455757</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-20/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        186099</span><br><span class="line"></span><br><span class="line">7、#将全备--apply-log，redo和undo都应用</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">8、#恢复数据</span><br><span class="line">[root@db02 ~]# innobackupex --copy-back /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">9、#授权  启动</span><br><span class="line">[root@db02 ~]# <span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line">10、#连接进去查看一下数据是否对得上</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|      998 |</span><br><span class="line">+----------+  <span class="comment">#可以看到数据少了，还有一部分数据，在binlog里面</span></span><br><span class="line"></span><br><span class="line">11、#截取binlog</span><br><span class="line">合并完了，这个binlog的位置点也会合并</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        186099</span><br><span class="line">开始位置点：186099</span><br><span class="line">由于之前的data目录被挪到tmp了</span><br><span class="line">[root@db02 ~]# mysqlbinlog --base64-output=decode-rows /tmp/data/mysql-bin.000001 |grep  -iC 10 <span class="string">&#x27;drop table&#x27;</span></span><br><span class="line">结束位置点：223640</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqlbinlog --start-position=186099 --stop-position=223640 /tmp/data/mysql-bin.000001 &gt; /tmp/inc5.sql</span><br><span class="line"></span><br><span class="line">12、#进入数据库</span><br><span class="line">关闭binlog,防止binlog被污染，让binlog从120开始</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"></span><br><span class="line">导入数据</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">source</span> /tmp/inc5.sql</span><br><span class="line"></span><br><span class="line">开启binlog</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line"></span><br><span class="line">查看数据，已经恢复</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     1199 |</span><br><span class="line">+----------+</span><br></pre></td></tr></table></figure><p><strong>xtrabackupex进行差异备份</strong></p><p><img src="../image/study_img/image-20240822212220010.png" alt="image-20240822212220010"></p><p><img src="../image/study_img/image-20240822214839115.png" alt="image-20240822214839115"></p><p>1、模拟备份删数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">1、#执行写数据的脚本</span><br><span class="line">[root@db02 ~]# sh insert.sh </span><br><span class="line"></span><br><span class="line">2、#等待一会，全备 (周六)</span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -rf /backup/*</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp /backup/full_$(<span class="built_in">date</span> +%F)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_checkpoints </span><br><span class="line">backup_type = full-backuped</span><br><span class="line">from_lsn = 0</span><br><span class="line">to_lsn = 4915321</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#等待一会，差异备inc1 (周日)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/full_2024-08-22/ /backup/inc1_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc1_2024-08-22-21/xtrabackup_checkpoints</span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4915321</span><br><span class="line">to_lsn = 4987544</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#等待一会，差异备inc2 (周一)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/full_2024-08-22/ /backup/inc2_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc2_2024-08-22-21/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = </span><br><span class="line">to_lsn = </span><br><span class="line"></span><br><span class="line">5、#等待一会，差异备inc3 (周二)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/full_2024-08-22/ /backup/inc3_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc3_2024-08-22-21/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = </span><br><span class="line">to_lsn = </span><br><span class="line"></span><br><span class="line">6、#等待一会，差异备inc4 (周三)</span><br><span class="line">[root@db02 ~]# innobackupex --user=root --password=123 --no-timestamp --incremental --incremental-basedir=/backup/full_2024-08-22/ /backup/inc4_$(<span class="built_in">date</span> +%F-%H)</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-21/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = </span><br><span class="line">to_lsn = </span><br><span class="line"></span><br><span class="line">7、#周三下午2点出现数据库意外删除表操作，先查看数据，再删表</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|      497 |</span><br><span class="line">+----------+</span><br><span class="line">root@localhost:(none) &gt; drop table prod.prod;</span><br><span class="line">停止脚本运行</span><br><span class="line">[root@db02 ~]# sh insert.sh ^C</span><br></pre></td></tr></table></figure><p>2、恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">1、#停止数据库</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">3、#挪走data目录</span><br><span class="line">[root@db02 ~]# <span class="built_in">mv</span> /app/mysql-5.6.50/data /tmp/</span><br><span class="line"></span><br><span class="line">2、#第一步：在全备中apply-log时，只应用redo，不应用undo</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --redo-only /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_checkpoints </span><br><span class="line">backup_type = log-applied</span><br><span class="line">from_lsn = 0</span><br><span class="line">to_lsn = 4915321</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        9399</span><br><span class="line"></span><br><span class="line">3、#第二步：合并inc4（最后一次的差异备份）到full中，redo和undo都做   (周三和周六合并)</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log --incremental-dir=/backup/inc4_2024-08-22-21 /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-21/xtrabackup_checkpoints </span><br><span class="line">backup_type = incremental</span><br><span class="line">from_lsn = 4915321</span><br><span class="line">to_lsn = 5067923</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/inc4_2024-08-22-21/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001         85473</span><br><span class="line"></span><br><span class="line">4、#将全备--apply-log，redo和undo都应用</span><br><span class="line">[root@db02 ~]# innobackupex --apply-log /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">5、#恢复数据</span><br><span class="line">[root@db02 ~]# innobackupex --copy-back /backup/full_2024-08-22/</span><br><span class="line"></span><br><span class="line">6、#授权  启动</span><br><span class="line">[root@db02 ~]# <span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line">7、#连接进去查看一下数据是否对得上</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|      457 |</span><br><span class="line">+----------+  <span class="comment">#可以看到数据少了，还有一部分数据，在binlog里面</span></span><br><span class="line"></span><br><span class="line">8、#截取binlog</span><br><span class="line">合并完了，这个binlog的位置点也会合并</span><br><span class="line">[root@db02 ~]# <span class="built_in">cat</span> /backup/full_2024-08-22/xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000001        85473</span><br><span class="line">开始位置点：85473</span><br><span class="line">由于之前的data目录被挪到tmp了</span><br><span class="line">[root@db02 ~]# mysqlbinlog --base64-output=decode-rows /tmp/data/mysql-bin.000001 |grep  -iC 10 <span class="string">&#x27;drop table&#x27;</span></span><br><span class="line">结束位置点：93068</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysqlbinlog --start-position=85473 --stop-position=93068 /tmp/data/mysql-bin.000001 &gt; /tmp/inc5.sql</span><br><span class="line"></span><br><span class="line">9、#进入数据库</span><br><span class="line">关闭binlog,防止binlog被污染，让binlog从120开始</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"></span><br><span class="line">导入数据</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">source</span> /tmp/inc5.sql</span><br><span class="line"></span><br><span class="line">开启binlog</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line"></span><br><span class="line">查看数据，已经恢复</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> count(*) from prod.prod;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|      497 |</span><br><span class="line">+----------+  <span class="comment">#差异备份恢复完成</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕9、Mysql存储引擎和DTL</title>
      <link href="/posts/23751c6b.html"/>
      <url>/posts/23751c6b.html</url>
      
        <content type="html"><![CDATA[<h3 id="mysql存储引擎-DTL">mysql存储引擎&amp;DTL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.idb 结尾的文件叫表空间</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MySQL引擎功能：</span><br><span class="line">除了可以提供基本的存取功能，还有更多功能事务功能、锁定、备份和恢复、优化以及特殊功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MySQL 提供以下存储引擎:</span><br><span class="line"><span class="string">&#x27;01）InnoDB&#x27;</span>    <span class="comment">#主流的</span></span><br><span class="line"><span class="string">&#x27;02）MyISAM&#x27;</span></span><br><span class="line">03）MEMORY</span><br><span class="line">04）ARCHIVE</span><br><span class="line">05）FEDERATED</span><br><span class="line">06）EXAMPLE</span><br><span class="line">07）BLACKHOLE</span><br><span class="line">08）MERGE</span><br><span class="line">09）NDBCLUSTER</span><br><span class="line">10）CSV</span><br><span class="line"></span><br><span class="line">数据定义语言，建库建表</span><br></pre></td></tr></table></figure><p>mysql自带的存储引擎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看mysql自带的存储引擎</span></span><br><span class="line">root@localhost:(none) &gt; show engines;</span><br><span class="line">+--------------------+</span><br><span class="line">| Engine             |</span><br><span class="line">+--------------------+</span><br><span class="line">| FEDERATED          |</span><br><span class="line">| MRG_MYISAM         |</span><br><span class="line">| MyISAM             |#</span><br><span class="line">| BLACKHOLE          |</span><br><span class="line">| CSV                |</span><br><span class="line">| MEMORY             |</span><br><span class="line">| ARCHIVE            |</span><br><span class="line">| InnoDB             | <span class="comment">#</span></span><br><span class="line">| PERFORMANCE_SCHEMA |</span><br><span class="line">+--------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看mysql数据库中哪些表使用的存储引擎是InnoDB</span></span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from information_schema.tables  <span class="built_in">where</span> ENGINE=<span class="string">&#x27;InnoDB&#x27;</span>\G;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数据库中哪些表是myisam</span></span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from information_schema.tables <span class="built_in">where</span> engine=<span class="string">&#x27;myisam&#x27;</span>\G</span><br></pre></td></tr></table></figure><p><strong>InnoDB和myisam的区别</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#面试问题InnoDB和myisam的区别</span></span><br><span class="line">mysiam的物理文件有3个，Inodb的物理文件有2个</span><br><span class="line">Inodb是行级锁，mysiam是表级锁</span><br><span class="line">inodb支持事务，redo和undo是实现CSR过程的2个事务日志，所以有CSR自动故障恢复；</span><br><span class="line">mysiam不支持事务，没有redo和undo，没有CSR自动故障恢复</span><br><span class="line">Inodb是行级锁，支持MVCC高版本并发控制；mysiam不支持，因为mysiam是表级锁(改一行，整个表都锁了)</span><br><span class="line">高版本并发控制类似于行级锁，你改这行数据的时候，其他行的数据别人也是可以改的，因为有共享锁+排他锁+乐观锁构成</span><br><span class="line">Inodb支持热备，mysiam不支持</span><br><span class="line">(热备是按照事务的提交做的备份)</span><br></pre></td></tr></table></figure><p>1、物理区别：最底层的数据文件不同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mysiam数据文件  frm=fotmat 结构</span></span><br><span class="line"><span class="comment">#myisam的数据文件由3个组成</span></span><br><span class="line">1、查看mysql的安装目录下的所有user文件</span><br><span class="line">[root@db01 ~]# <span class="built_in">cd</span> /app/mysql-5.6.50/data/mysql</span><br><span class="line"></span><br><span class="line">2、查看所有user的文件</span><br><span class="line">[root@db01 mysql]# ll user*</span><br><span class="line">-rw-rw---- 1 mysql mysql 10684 Aug  7 23:30 user.frm</span><br><span class="line">-rw-rw---- 1 mysql mysql   664 Aug 13 15:27 user.MYD</span><br><span class="line">-rw-rw---- 1 mysql mysql  2048 Aug 13 22:01 user.MYI</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#InoDd的数据文件由2个组成</span></span><br><span class="line">进入随意一个库文件</span><br><span class="line">[root@db01 student]# <span class="built_in">cd</span> /app/mysql-5.6.50/data/student</span><br><span class="line">[root@db01 student]# ll</span><br><span class="line">-rw-rw---- 1 mysql mysql   8726 Aug 13 03:17 stu1.frm</span><br><span class="line">-rw-rw---- 1 mysql mysql  98304 Aug 15 20:52 stu1.ibd</span><br></pre></td></tr></table></figure><p>2、逻辑区别</p><p><img src="../image/study_img/image-20240816090213485.png" alt="image-20240816090213485"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mvcc叫多版本进化控制</span><br><span class="line"></span><br><span class="line">锁定粒度：在修改一行数据中，别的用户过来是不可以修改的</span><br><span class="line"></span><br><span class="line">把改的数据放到缓存里，先搞一个消息队列，把改的头像放到缓存里面，等上一个人修改完成后，再把你的头像放到数据库中，所以改头像要刷新一会才看到新改的头像</span><br><span class="line"></span><br><span class="line">冷备：把服务停掉，做备份</span><br><span class="line">热备：不停服务器，做备份</span><br><span class="line">温备：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#innodb核心特性</span></span><br><span class="line">重点:</span><br><span class="line">MVCC</span><br><span class="line">事务</span><br><span class="line">行级锁</span><br><span class="line">热备份</span><br><span class="line">Crash Safe Recovery（自动故障恢复）</span><br><span class="line"></span><br><span class="line">mysiam没有事务 就没有事务日志redo undo</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看默认的存储引擎的3种方法：</span></span><br><span class="line">1、#使用 SELECT 确认会话存储引擎</span><br><span class="line">root@localhost:(none) &gt; SELECT @@default_storage_engine;</span><br><span class="line">+--------------------------+</span><br><span class="line">| @@default_storage_engine |</span><br><span class="line">+--------------------------+</span><br><span class="line">| InnoDB                   |</span><br><span class="line">+--------------------------+</span><br><span class="line"></span><br><span class="line">2、#使用 show 确认每个表的存储引擎</span><br><span class="line">root@localhost:(none) &gt; show create table world.city;</span><br><span class="line">建表语句最后一行显示存储引擎</span><br><span class="line">ENGINE=InnoDB AUTO_INCREMENT=4080 DEFAULT CHARSET=latin1</span><br><span class="line"></span><br><span class="line">3、#使用  informattion_schema 确认每个表的存储引擎</span><br><span class="line"><span class="keyword">select</span> table_name, engine from information_schema.tables <span class="built_in">where</span> table_name=<span class="string">&#x27;city&#x27;</span> and table_schema=<span class="string">&#x27;world&#x27;</span>\G</span><br><span class="line"></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">table_name: city</span><br><span class="line">    engine: InnoDB</span><br></pre></td></tr></table></figure><p>存储引擎的设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#.存储引擎的设置     #不要去瞎改，使用默认的就行</span></span><br><span class="line">1）#在配置文件的[mysqld]标签下添加 (永久生效)</span><br><span class="line">[mysqld]</span><br><span class="line">default-storage-engine=InnoDB  <span class="comment">#这行配置就改你需要的存储引擎</span></span><br><span class="line">注意：改了配置文件需要重启</span><br><span class="line"></span><br><span class="line">2）#在MySQL命令行中临时设置(临时生效)</span><br><span class="line">SET @@storage_engine=InnoDB</span><br><span class="line"></span><br><span class="line">3）#建表的时候指定存储引擎</span><br><span class="line">create table t (i int) engine = InnoDB;</span><br></pre></td></tr></table></figure><p><strong>企业案例1</strong></p><p>项目背景：<br>公司原有的架构：一个展示型的网站，LAMT，MySQL5.1.77版本（MYISAM），50M数据量。</p><p>小问题不断：<br>1、表级锁：对表中任意一行数据修改类操作时，整个表都会锁定，对其他行的操作都不能同时进行。<br>2、myisam不支持故障自动恢复（CSR）：当断电时有可能会出现数据损坏或丢失的问题。</p><p>如何解决：<br>1、建议将现有的myisam引擎替换为Innodb，将版本替换为5.7<br>1）如果使用MYISAM会产生”小问题”，性能安全不能得到保证，使用innodb可以解决这个问题。<br>2）5.7版本对于innodb引擎支持不够完善，5.7版本对innodb支持非常完善了。</p><p>2、实施过程和注意要素：但是这个代码上面有很大的改动，开发改好代码才做升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">升级的时候不能影响到用户</span><br><span class="line"></span><br><span class="line"><span class="comment">#不停库的操作</span></span><br><span class="line">1、准备一个新环境，来一台新机器，因为有问题的机器不能动</span><br><span class="line"></span><br><span class="line">2、在新环境中二进制安装一个mysql5.7.44，如果是容器的话就docker起一个</span><br><span class="line"></span><br><span class="line">3、给当前正在提供服务的生产库，进行一个全备（打点全备，记录当前备份的位置点）</span><br><span class="line">为什么做全备：因为在生产的数据库虽然不用了，但里面有很多系统表，mysql的user表,创建的用户，给开发开的用户，开发写的程序连接数据库的用户都在里面，包括要求的授权，脱敏的授权，如果再去一个一个创建就比较麻烦，如果要保证这些都还在，就要做全备</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysql]   <span class="comment">#这个标签所有客户端都识别</span></span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d &gt; &quot;</span></span><br><span class="line">[root@db02 ~]# mysqldump -uroot -p123 -A --triggers -R --master-data=2 &gt;/tmp/full.sql</span><br><span class="line">-A         导出所有数据库。</span><br><span class="line">--triggers 确保触发器也被导出</span><br><span class="line">-R         导出存储过程和函数。</span><br><span class="line">--master-data=2 导出的SQL文件中包含CHANGE MASTER TO语句，这些语句包含了二进制日志的位置信息，这对于设置复制环境非常有用。=2 的意思是，这些语句会被注释掉，使得它们默认不会被执行，但你可以根据需要取消注释它们。</span><br><span class="line"></span><br><span class="line">4、将全备恢复到新环境</span><br><span class="line">[root@db01 ~]# mysql -uroot -p123 &lt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line">5、从新环境备份出程序库的所有表数据(做一个单库的备份)</span><br><span class="line">mysqldump -uroot -p123 -B 程序库 &gt; /tmp/程序库.sql</span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -B student &gt; /tmp/student.sql</span><br><span class="line"></span><br><span class="line">6、修改表的存储引擎</span><br><span class="line">[root@db01 ~]# sed -i <span class="string">&#x27;s#ENGINE=MYISAM#ENGINE=INNODB#g&#x27;</span> /tmp/student.sql</span><br><span class="line"></span><br><span class="line">7、将修改后的程序库数据到新环境</span><br><span class="line"><span class="comment">#新环境没开bin_log的导入方法</span></span><br><span class="line">[root@db01 student]# mysqldump -uroot -p123 &lt; /tmp/student.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#新环境开bin_log的导入方法：需要加入数据库</span></span><br><span class="line">1）关闭bin_log的记录</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"></span><br><span class="line">2）导入数据</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">source</span> /tmp/student.sql</span><br><span class="line"></span><br><span class="line">3）开启bin_log的记录</span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#停库操作</span></span><br><span class="line">8、先挂维护页，旧环境停止连接数据库的服务、数据库</span><br><span class="line">[root@db02 ~]# systemctl stop tomcat;systemctl stop php-fpm;systemctl stop mysql</span><br><span class="line"></span><br><span class="line">9、从bin_log中截取增量数据</span><br><span class="line"></span><br><span class="line">10、启动新环境数据库</span><br><span class="line"></span><br><span class="line">11、恢复截取的增量数据到新环境</span><br><span class="line"></span><br><span class="line">12、测试环境连接新库，测试所有功能</span><br><span class="line">    </span><br><span class="line">13、应用割接到新数据库(改程序代码连接到数据库的信息,如果是云主机就改云主机的ip,物理机修改网卡的ip很麻烦,改程序代码连接到数据库)</span><br><span class="line"></span><br><span class="line">14、启动连接数据库的服务</span><br><span class="line"></span><br><span class="line">15、取消维护页</span><br><span class="line"></span><br><span class="line">项目结果：</span><br><span class="line">解决了<span class="string">&#x27;小问题&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>mysql中的表空间</strong></p><p>在mysql中表空间有2种<br>1、共享表空间(需要做切割)，所有表都能共享这里的数据<br>–  用来存储系统数据的<br>–  存undo<br>–  临时表(类似于连表查询出来的表)<br>2、独立表空间(inodb看到的idb文件)<br>–  存储用户真实数据<br>–  每一张inodb存储引擎的表都有一个自己独立表空间</p><ul><li>共享表空间：用来存储系统数据、存undo、存临时表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看共享表空间</span></span><br><span class="line"><span class="comment">#物理查看</span></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">-rw-rw---- 1 mysql mysql       56 Aug  7 23:44 auto.cnf  <span class="comment">#UUID文件</span></span><br><span class="line">-rw-rw---- 1 mysql mysql 79691776 Aug 15 20:56 ibdata1   <span class="comment">#共享表空间</span></span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Aug 15 20:56 ib_logfile0</span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Aug  7 23:30 ib_logfile1</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看共享表空间的配置</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%path%&#x27;</span>;</span><br><span class="line">+----------------------------------+------------------------+</span><br><span class="line">| Variable_name                    | Value                  |</span><br><span class="line">+----------------------------------+------------------------+</span><br><span class="line">| innodb_data_file_path            | ibdata1:12M:autoextend |</span><br><span class="line">+----------------------------------+------------------------+</span><br><span class="line">这个表空间默认大写只能存储12M数据   autoextend自动扩展：如果说共享表空间越来越大，存储系统数据的、存undo、临时表的速度越来越慢，所以共享表空间要做切割</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#共享表空间的切割</span></span><br><span class="line">1、编辑配置文件</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">innodb_data_file_path=ibdata1:50M;ibdata2:50M:autoextend  <span class="comment">#后面再切的话改ibdata3 ibdata4就行了</span></span><br><span class="line"></span><br><span class="line">2、重启数据库失败</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br><span class="line">Shutting down MySQL.... SUCCESS! </span><br><span class="line">Starting MySQL.... ERROR! The server quit without updating PID file (/app/mysql-5.6.50/data/db01.pid).</span><br><span class="line"></span><br><span class="line">3、查看日志</span><br><span class="line">[root@db01 ~]# tailf -200 /app/mysql-5.6.50/data/db01.err </span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240816162945793.png" alt="image-20240816162945793"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分析：</span></span><br><span class="line">mysql里面最小的数据单位是页，一页16K</span><br><span class="line">报错显示idbdata1的大小是4864页,而我在配置文件配置的是3200页</span><br><span class="line">(4864*16)/1024=76M                (3200*16)/1024=50M</span><br><span class="line">原本ibdata1共享表空间的大小为76M，但是配置文件中只给了50M不够</span><br><span class="line"></span><br><span class="line">4、所以我在改的时候一定要看一下ibdata1共享表空间多大，改成一模一样的大小就好,后面的无所谓，因为后面的还没有生成</span><br><span class="line">[root@db01 ~]# <span class="built_in">du</span> -sh /app/mysql-5.6.50/data/ibdata1</span><br><span class="line">76M     /app/mysql-5.6.50/data/ibdata1</span><br><span class="line">表示ibdata1 文件占用了大约 76M 的磁盘空间</span><br><span class="line"></span><br><span class="line">5、重新修改配置文件，再启动</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">innodb_data_file_path=ibdata1:76M;ibdata2:50M:autoextend</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">6、切割完成查看多出ibdata2，以后就往ibdata2保存系统数据，undo、临时表，ibdata1就固定在76M了</span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">-rw-rw---- 1 mysql mysql 79691776 Aug 16 11:07 ibdata1</span><br><span class="line">-rw-rw---- 1 mysql mysql 52428800 Aug 16 11:07 ibdata2  <span class="comment">#会新增这个</span></span><br></pre></td></tr></table></figure><ul><li>独立表空间：存储用户真实数据、每一张inodb存储引擎的表都有一个自己独立表空间</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">所有的idb文件，就是每一张表的独立表空间</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看独立表空间</span></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/student/stu*</span><br><span class="line">-rw-rw---- 1 mysql mysql   8726 Aug 13 03:17 stu1.frm</span><br><span class="line">-rw-rw---- 1 mysql mysql  98304 Aug 15 20:52 stu1.ibd    <span class="comment">#独立表空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看独立表空间是否开启，默认是开启的</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%per_table%&#x27;</span>;</span><br><span class="line">+-----------------------+-------+</span><br><span class="line">| Variable_name         | Value |</span><br><span class="line">+-----------------------+-------+</span><br><span class="line">| innodb_file_per_table | ON    |</span><br><span class="line">+-----------------------+-------+</span><br></pre></td></tr></table></figure><p>5.7版本中默认会将undo和临时表独立出来，5.6版本也可以独立，只不过需要在初始化的时候进行配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#5.7的临时表</span></span><br><span class="line">[root@db03 ~]# ll /app/mysql-5.7.44/data/</span><br><span class="line">-rw-r----- 1 mysql mysql 12582912 Aug  9 05:40 ibtmp1</span><br></pre></td></tr></table></figure><p><strong>企业案例2</strong></p><p>在没有备份数据的情况下，突然断电导致表结构损坏，打不开数据库。</p><p>环境准备：</p><table><thead><tr><th>主机名</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>db01</td><td>10.0.0.51  /  172.16.1.51</td><td>新环境</td></tr><tr><td>bdb02</td><td>10.0.0.52  /  172.16.1.52</td><td>旧环境：表结构损坏的数据库</td></tr></tbody></table><p>模拟数据损坏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模拟表结构损坏</span></span><br><span class="line">准备数据库的备份文件传递到其他机器</span><br><span class="line">[root@db01 ~]# <span class="built_in">cd</span> /app/mysql-5.6.50/data/</span><br><span class="line">[root@db01 data]# tar zcf world.tgz world</span><br><span class="line">[root@db01 data]# scp world.tgz 172.16.1.52:/root</span><br><span class="line"></span><br><span class="line">bdb02操作：</span><br><span class="line">1、将库文件解压到mysql的data目录</span><br><span class="line">[root@db02 ~]# tar xf world.tgz -C /app/mysql-5.6.50/data/</span><br><span class="line"></span><br><span class="line">2、重启mysql</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">3、连接数据库，查看库是否导入成功</span><br><span class="line">[root@db02 ~]# mysql</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| world              |</span><br><span class="line"></span><br><span class="line">4、查看表里面的数据，报错</span><br><span class="line">mysql&gt; use world</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+-----------------+</span><br><span class="line">| Tables_in_world |</span><br><span class="line">+-----------------+</span><br><span class="line">| city            |</span><br><span class="line">| country         |</span><br><span class="line">| countrylanguage |</span><br><span class="line">| score           |</span><br><span class="line">+-----------------+</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from city;</span><br><span class="line">ERROR 1146 (42S02): Table <span class="string">&#x27;world.city&#x27;</span> doesn<span class="string">&#x27;t exist</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; select * from country;</span></span><br><span class="line"><span class="string">ERROR 1146 (42S02): Table &#x27;</span>world.country<span class="string">&#x27; doesn&#x27;</span>t exist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如下恢复的操作需要准备新环境，但是想保留2个机器之前的数据，建议给db01、db02拍摄快照</span></span><br></pre></td></tr></table></figure><p>恢复思路</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">1、#先停止db02连接mysql的所有服务，停止mysql数据库，准备新环境</span><br><span class="line">由于我把db01当作新环境，并且拍摄了快照，我可以把之前的数据文件清理掉</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db01 ~]# <span class="built_in">rm</span> -rf /app/mysql-5.6.50/data/</span><br><span class="line"></span><br><span class="line">重新初始化，就可以当作新环境的数据库</span><br><span class="line">[root@db01 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">新环境OK,启动mysql</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.6.50/data/db01.err&#x27;</span>.</span><br><span class="line">.. SUCCESS! </span><br><span class="line"></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">total 229028</span><br><span class="line">-rw-rw---- 1 mysql mysql       56 Aug 17 02:16 auto.cnf</span><br><span class="line">-rw-rw---- 1 mysql mysql     1995 Aug 17 02:16 db01.err</span><br><span class="line">-rw-rw---- 1 mysql mysql        5 Aug 17 02:16 db01.pid</span><br><span class="line">-rw-rw---- 1 mysql mysql 79691776 Aug 17 02:16 ibdata1</span><br><span class="line">-rw-rw---- 1 mysql mysql 52428800 Aug 17 02:15 ibdata2</span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Aug 17 02:16 ib_logfile0</span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Aug 17 02:15 ib_logfile1</span><br><span class="line">drwx------ 2 mysql mysql     4096 Aug 17 02:15 mysql</span><br><span class="line">-rw-rw---- 1 mysql mysql    69408 Aug 17 02:15 mysql-bin.000001</span><br><span class="line">-rw-rw---- 1 mysql mysql  1640526 Aug 17 02:15 mysql-bin.000002</span><br><span class="line">-rw-rw---- 1 mysql mysql      120 Aug 17 02:16 mysql-bin.000003</span><br><span class="line">-rw-rw---- 1 mysql mysql       57 Aug 17 02:16 mysql-bin.index</span><br><span class="line">drwx------ 2 mysql mysql     4096 Aug 17 02:15 performance_schema</span><br><span class="line">drwx------ 2 mysql mysql        6 Aug 17 02:15 <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">2、#旧环境的表结构(字段，数据类型，约束)已经损坏，需要找开发要表结构（就是建表语句）</span><br><span class="line"><span class="comment">#删掉外键创建语句:  CONSTRAINT `city_ibfk_1` FOREIGN KEY (`CountryCode`) REFERENCES `country` (`Code`)</span></span><br><span class="line"></span><br><span class="line"> CREATE TABLE world.city (</span><br><span class="line">  `ID` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `Name` char(35) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `CountryCode` char(3) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `District` char(20) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `Population` int(11) NOT NULL DEFAULT <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  PRIMARY KEY (`ID`),</span><br><span class="line">  KEY `CountryCode` (`CountryCode`),</span><br><span class="line">  KEY `Population` (`Population`),</span><br><span class="line">  KEY `inx_aa` (`CountryCode`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4080 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#登陆新环境的数据库，创建库、表</span><br><span class="line">[root@db01 ~]# mysql </span><br><span class="line">root@localhost:(none) &gt; create database world;</span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; CREATE TABLE world.city (</span><br><span class="line">  `ID` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `Name` char(35) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `CountryCode` char(3) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `District` char(20) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `Population` int(11) NOT NULL DEFAULT <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  PRIMARY KEY (`ID`),</span><br><span class="line">  KEY `CountryCode` (`CountryCode`),</span><br><span class="line">  KEY `Population` (`Population`),</span><br><span class="line">  KEY `inx_aa` (`CountryCode`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4080 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">查看表结构完整，但是没数据</span><br><span class="line">root@localhost:(none) &gt; desc world.city;</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field       | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO   |     |         |                |</span><br><span class="line">| CountryCode | char(3)  | NO   | MUL |         |                |</span><br><span class="line">| District    | char(20) | NO   |     |         |                |</span><br><span class="line">| Population  | int(11)  | NO   | MUL | 0       |                |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from world.city;</span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">那么数据在哪里呢，数据在独立表空间</span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/world/</span><br><span class="line">total 16</span><br><span class="line">-rw-rw---- 1 mysql mysql 8710  Aug 17 02:24 city.frm</span><br><span class="line">-rw-rw---- 1 mysql mysql 147456 Aug 17 02:24 city.idb <span class="comment">#独立表空间</span></span><br><span class="line">-rw-rw---- 1 mysql mysql   61 Aug 17 02:22 db.opt</span><br><span class="line"></span><br><span class="line">4、#删除新环境的独立表空间</span><br><span class="line">root@localhost:(none) &gt; alter table world.city discard tablespace;</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/world/</span><br><span class="line">total 16</span><br><span class="line">-rw-rw---- 1 mysql mysql 8710 Aug 17 02:24 city.frm</span><br><span class="line">-rw-rw---- 1 mysql mysql   61 Aug 17 02:22 db.opt</span><br><span class="line"><span class="comment">#独立表空间被删除</span></span><br><span class="line"></span><br><span class="line">5、#从旧环境db02将city表的表空间复制过来</span><br><span class="line">[root@db02 ~]# <span class="built_in">cd</span> /app/mysql-5.6.50/data/world/</span><br><span class="line">[root@db02 world]# scp city.ibd 172.16.1.51:/app/mysql-5.6.50/data/world/</span><br><span class="line"></span><br><span class="line">6、#新环境db01给独立表空间授权</span><br><span class="line">[root@db01 ~]# <span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/data/world</span><br><span class="line"></span><br><span class="line">7、#新环境db01导入表空间</span><br><span class="line">root@localhost:(none) &gt; alter table world.city import tablespace;</span><br><span class="line"></span><br><span class="line">8、#查询数据</span><br><span class="line">root@localhost:(none) &gt; <span class="keyword">select</span> * from world.city;</span><br><span class="line"></span><br><span class="line">9、#程序还在旧数据库上，测试没问题之后，就用于割接</span><br><span class="line">   - 方法一：开发修改代码连接数据库的IP，开发改完代码要走代码上线的流程，审批，测试，..发布</span><br><span class="line">   - 方法二：运维导出新环境的数据，恢复到旧环境</span><br><span class="line"></span><br><span class="line">10、#启动连接数据库的服务</span><br></pre></td></tr></table></figure><h3 id="Innodb核心特性——事务"><strong>Innodb核心特性——事务</strong></h3><p><strong>什么是事务</strong><br>主要针对DML语句（update，delete，insert）</p><p>一组数据操作执行步骤，这些步骤被视为一个工作单元:<br>1）用于对多个语句进行分组<br>2）可以在多个客户机并发访问同一个表中的数据时使用</p><p>**事物的生命周期：**所有步骤都成功或都失败<br>1）如果所有步骤正常，则执行<br>2）如果步骤出现错误或不完整，则取消</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#成功的事物</span></span><br><span class="line"><span class="comment">#开启事物</span></span><br><span class="line">begin：</span><br><span class="line">然后执行DML语句</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交事物</span></span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line"><span class="comment">#失败的事物</span></span><br><span class="line"><span class="comment">#开启事物</span></span><br><span class="line">begin：</span><br><span class="line">然后执行DML语句</span><br><span class="line"></span><br><span class="line"><span class="comment">#回滚事物</span></span><br><span class="line">rollback     </span><br><span class="line"></span><br><span class="line">执行commit或者rollback,事物不会直接写在磁盘里，是先写在日志里面，写入日志比较快，日志优先写</span><br></pre></td></tr></table></figure><p>事物的通俗理解：伴随着“交易”出现的数据库概念。我们理解的“交易”是什么？<br>1）物与物的交换（古代）<br>2）货币现金与实物的交换（现代1）<br>3）虚拟货币与实物的交换（现代2）<br>4）虚拟货币与虚拟实物交换（现代3）</p><p><strong>事物的特性</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A：原子性：开启一个事物，要么操作全部成功，事物才会结束，如果失败一次，就回滚</span><br><span class="line">C：一致性：事物开启之前和事物执行结束后，数据状态保存一致</span><br><span class="line">I：隔离性：事物与事物之间是隔离的(和锁有关系，锁又和隔离级别有关系)</span><br><span class="line">D：持久性：事物操作完成后要持久化</span><br></pre></td></tr></table></figure><p>事物流程举例</p><p><img src="../image/study_img/image-20240816121313252.png" alt="image-20240816121313252"></p><p><strong>事物的流程控制语句 (DTL ：Databases Transaction Language)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">DTL也叫TCL(Transaction Control Language)</span><br><span class="line"></span><br><span class="line"><span class="comment">#模拟操作事物(银行取钱)</span></span><br><span class="line">1、#创建一个交易表，并插入数据(一开始两个人的初始余额是500)</span><br><span class="line">root@localhost:student &gt; create table jiaoyi(money int,name varchar(10));</span><br><span class="line">root@localhost:student &gt; insert into  jiaoyi values(500,<span class="string">&#x27;zhang3&#x27;</span>),(500,<span class="string">&#x27;lisi&#x27;</span>);</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from jiaoyi;</span><br><span class="line">+-------+--------+</span><br><span class="line">| money | name   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|   500 | zhang3 |</span><br><span class="line">|   500 | lisi   |</span><br><span class="line">+-------+--------+</span><br><span class="line"></span><br><span class="line">2、#开启事物</span><br><span class="line">root@localhost:student &gt; start transaction;  <span class="comment">#或者begin：都可以显示开启一个新事物</span></span><br><span class="line"></span><br><span class="line">3、#进行交易，zhang3给lisi转账300</span><br><span class="line">root@localhost:student &gt; update jiaoyi <span class="built_in">set</span> money=800 <span class="built_in">where</span> name=<span class="string">&#x27;lisi&#x27;</span>;</span><br><span class="line">root@localhost:student &gt; update jiaoyi <span class="built_in">set</span> money=200 <span class="built_in">where</span> name=<span class="string">&#x27;zhang3&#x27;</span>;</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from jiaoyi;</span><br><span class="line">+-------+--------+</span><br><span class="line">| money | name   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|   200 | zhang3 |</span><br><span class="line">|   800 | lisi   |</span><br><span class="line">+-------+--------+</span><br><span class="line"></span><br><span class="line">4、#开启一个新终端B，查看数据，没有变化，因为事物还没有结束</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from jiaoyi;</span><br><span class="line">+-------+--------+</span><br><span class="line">| money | name   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|   500 | zhang3 |</span><br><span class="line">|   500 | lisi   |</span><br><span class="line">+-------+--------+</span><br><span class="line"></span><br><span class="line">5、#结束事物</span><br><span class="line">A终端结束事物</span><br><span class="line">root@localhost:student &gt; commit;</span><br><span class="line"></span><br><span class="line">B终端查看数据</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from jiaoyi;</span><br><span class="line">+-------+--------+</span><br><span class="line">| money | name   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|   200 | zhang3 |</span><br><span class="line">|   800 | lisi   |</span><br><span class="line">+-------+--------+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">现在的这个表对于mysql来说，就是一行，现在看到的格式化的表，是存储引擎做的格式化，如果想让mysql认为是两行数据，表里面必须要加主键</span><br><span class="line">1、#给表增加主键，初始化余额</span><br><span class="line">root@localhost:student &gt; alter table jiaoyi add <span class="built_in">id</span> int primary key auto_increment first;</span><br><span class="line">root@localhost:student &gt; update jiaoyi <span class="built_in">set</span> money=500 <span class="built_in">where</span> <span class="built_in">id</span>=2;</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from jiaoyi;</span><br><span class="line">+----+-------+--------+</span><br><span class="line">| <span class="built_in">id</span> | money | name   |</span><br><span class="line">+----+-------+--------+</span><br><span class="line">|  1 |   500 | zhang3 |</span><br><span class="line">|  2 |   500 | lisi   |</span><br><span class="line">+----+-------+--------+</span><br><span class="line"></span><br><span class="line">2、#A终端开启一个事物，进行交易，zhang3给lisi转账300</span><br><span class="line">root@localhost:student &gt; begin;</span><br><span class="line">root@localhost:student &gt; update jiaoyi <span class="built_in">set</span> money=800 <span class="built_in">where</span> <span class="built_in">id</span>=2;#这个时候条件必须用<span class="built_in">id</span>,如果用name,对于MySQL来说，不能识别为一行</span><br><span class="line">root@localhost:student &gt; update jiaoyi <span class="built_in">set</span> money=200 <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from jiaoyi;</span><br><span class="line">+----+-------+--------+</span><br><span class="line">| <span class="built_in">id</span> | money | name   |</span><br><span class="line">+----+-------+--------+</span><br><span class="line">|  1 |   200 | zhang3 |</span><br><span class="line">|  2 |   800 | lisi   |</span><br><span class="line">+----+-------+--------+</span><br><span class="line"></span><br><span class="line">3、#B终端开启一个事物，有人往zhang3的账号转1000元</span><br><span class="line">root@localhost:student &gt; begin;</span><br><span class="line">root@localhost:student &gt; update jiaoyi <span class="built_in">set</span> money=1000 <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line">不同的行，事物与事物之间不影响</span><br><span class="line">如果是同一行，都在操作事物，就要等先开启的事物完成操作之后，后开启的事物才进行操作</span><br><span class="line"></span><br><span class="line">4、AB终端结束事物</span><br><span class="line">root@localhost:student &gt; commit;</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from jiaoyi;</span><br><span class="line">+----+-------+--------+</span><br><span class="line">| <span class="built_in">id</span> | money | name   |</span><br><span class="line">+----+-------+--------+</span><br><span class="line">|  1 |  1200 | zhang3 |</span><br><span class="line">|  2 |   800 | lisi   |</span><br><span class="line">+----+-------+--------+</span><br></pre></td></tr></table></figure><p><strong>事物的自动提交</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">mysql不是执行begin的时候开启事物，是执行DML语句后，会自动开启事物，因为mysql里面默认有一个配置：</span><br><span class="line">root@localhost:student &gt; show variables like <span class="string">&#x27;%auto%&#x27;</span>;</span><br><span class="line">+-----------------------------+-------+</span><br><span class="line">| Variable_name               | Value |</span><br><span class="line">+-----------------------------+-------+</span><br><span class="line">| auto_increment_increment    | 1     |</span><br><span class="line">| auto_increment_offset       | 1     |</span><br><span class="line">| autocommit                  | ON    |#默认mysql开启自动提交</span><br><span class="line">| automatic_sp_privileges     | ON    |</span><br><span class="line">| innodb_autoextend_increment | 64    |</span><br><span class="line">| innodb_autoinc_lock_mode    | 1     |</span><br><span class="line">| innodb_stats_auto_recalc    | ON    |</span><br><span class="line">| sql_auto_is_null            | OFF   |</span><br><span class="line">+-----------------------------+-------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看bin_log日志</span></span><br><span class="line">[root@db01 ~]# mysqlbinlog --base64-output=decode rows -vvv /app/mysql-5.6.50/data/mysql-bin.000010</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、#在事物执行期间，如果执行DDL、DCL语句，都会导致事物自动提交</span><br><span class="line"></span><br><span class="line">2、#在事物执行期间，如果执行begin，会自动提交上一次事物，开启一个新事物</span><br><span class="line"></span><br><span class="line">3、#在事物执行期间，如果执行锁定语句(lock tables、unlock tables),会自动提交事物</span><br><span class="line"></span><br><span class="line">4、#在事物执行期间，执行导出数据(load data infile)</span><br><span class="line"></span><br><span class="line">5、#在事物执行期间，执行(<span class="keyword">select</span> <span class="keyword">for</span> update)</span><br><span class="line"></span><br><span class="line">6、#在执行autocommit=1的时候</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 关于事务的语句</span></span><br><span class="line">START TRANSACTION（或 BEGIN）：显式开始一个新事务</span><br><span class="line"><span class="comment"># SAVEPOINT：分配事务过程中的一个位置，以供将来引用</span></span><br><span class="line">root@localhost:(none):47: &gt;savepoint lzd_1000;</span><br><span class="line"><span class="comment"># COMMIT：永久记录当前事务所做的更改</span></span><br><span class="line"><span class="comment"># ROLLBACK：取消当前事务所做的更改</span></span><br><span class="line"><span class="comment"># ROLLBACK TO SAVEPOINT：取消在 savepoint 之后执行的更改</span></span><br><span class="line">root@localhost:(none):48: &gt;rollback to savepoint lzd_1000;</span><br><span class="line"><span class="comment"># RELEASE SAVEPOINT：删除 savepoint 标识符</span></span><br><span class="line">root@localhost:(none):49: &gt;release savepoint lzd_1000;</span><br><span class="line"><span class="comment"># 临时设置自动提交</span></span><br><span class="line">SET AUTOCOMMIT：为当前连接禁用或启用默认 autocommit 模式</span><br><span class="line">root@localhost:(none):50: &gt;<span class="built_in">set</span> autocommit=1;</span><br><span class="line">root@localhost:(none):50: &gt;<span class="built_in">set</span> autocommit=0;</span><br></pre></td></tr></table></figure><h3 id="事物日志redo"><strong>事物日志redo</strong></h3><p>MySQL特性：WAL特性  Write Ahead Log 日志优先写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看mysql的redo   在磁盘上面存着</span></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Aug 18 00:20 ib_logfile0</span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Aug  7 23:30 ib_logfile1</span><br><span class="line"></span><br><span class="line">redo的意思：重做</span><br></pre></td></tr></table></figure><p>redolog的工作流程</p><p><img src="../image/study_img/image-20240819151513794.png" alt="image-20240819151513794"></p><p><strong>自动故障恢复CSR  把数据该模拟的模拟，该变化的变化，写入到表空间</strong></p><p>断电：</p><p>1、数据commit,数据写入ib_logfile(redolog)时，突然断电</p><p>2、没有commit,数据写入ib_logfile(redo log)时</p><p>3、数据没有commit,没有记录在redo log中</p><p>这3种情况的数据如何处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#情况1:数据commit,数据写入ib_logfile(redolog)时，突然断电，表空间的数据怎么恢复，如果不恢复，用户看到数据还是500，是不对的</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240819154720922.png" alt="image-20240819154720922"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#情况2：没有commit,数据写入ib_logfile(redo log)时，突然断电</span></span><br><span class="line"></span><br><span class="line">这种情况会出现问题，数据不能恢复，只能将变化过程记录到redo <span class="built_in">log</span>，不能把模拟出来的800写入独立表空间,所以需要配合undo</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240819155546706.png" alt="image-20240819155546706"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#情况3：没有commit,也没有写入ib_logfile(redo log)时，突然断电</span></span><br><span class="line"></span><br><span class="line">没有commit,也没有写入ib_logfile(redo <span class="built_in">log</span>)时，就不会有变化过程，原数据还是原数据，没什么变化</span><br></pre></td></tr></table></figure><p><strong>事物日志undo</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看mysql的undo</span></span><br><span class="line">[root@db01 ~]# ll /app/mysql-5.6.50/data/</span><br><span class="line">-rw-rw---- 1 mysql mysql 79691776 Aug 18 00:20 ibdata1</span><br><span class="line">-rw-rw---- 1 mysql mysql 52428800 Aug 18 00:20 ibdata2</span><br><span class="line"></span><br><span class="line">undo：不做   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">事务日志undo</span><br><span class="line">1）undo是什么？</span><br><span class="line">undo,顾名思义“回滚日志”，是事务日志的一种。</span><br><span class="line"></span><br><span class="line">_2）作用是什么？</span><br><span class="line">在事务ACID过程中，实现的是“A”原子性的作用。当然CI的特性也和undo有关</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">面试问题：</span><br><span class="line"><span class="comment">#mysql CSR的过程和什么有关</span></span><br><span class="line">CSR和2个日志文件有关，事物日志redo、undo，redo重做数据，undo不做数据，他们分别在MySQL的data目录下</span><br><span class="line">redo就在数据目录下</span><br><span class="line">undo:在MySQL5.6版本中undo是在ibdata(共享表空间)文件中，在MySQL5.7版本会独立出来。</span><br></pre></td></tr></table></figure><p><strong>MYSQL CSR的过程   断电之后，undo结合redo，恢复数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#情况1:数据commit,数据写入ib_logfile(redolog)时，突然断电，表空间的数据怎么恢复，</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240819170447907.png" alt="image-20240819170447907"></p><p>突然断电，内存里面的数据没了</p><p><img src="../image/study_img/image-20240819172903983.png" alt="image-20240819172903983"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#情况2：没有commit,数据写入ib_logfile(redo log)时，突然断电</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240819174134262.png" alt="image-20240819174134262"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">断电时，redo配合undo恢复数据</span><br><span class="line"><span class="comment">#情况3:没有commit,没有写入ib_logfile(redolog)时，突然断电,表空间的数据怎么恢复</span></span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240819175306313.png" alt="image-20240819175306313"></p><p><strong>事物中的锁</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1）什么是“锁”？</span><br><span class="line">“锁”顾名思义就是锁定的意思。</span><br><span class="line"></span><br><span class="line">2）“锁”的作用是什么？</span><br><span class="line">在事务ACID特性过程中，“锁”和“隔离级别”一起来实现“I”隔离性的作用。</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240819111236391.png" alt="image-20240819111236391"></p><p>最后的数据A=2   因为谁先提交，以谁为准，条件后面的A=1没有了，被第二个事务改掉了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">排他锁：所谓的行及锁就是排他锁造成的，在事物执行期间,不允许其他事物执行修改操作</span><br><span class="line">共享锁：在事物执行期间，允许所有事物执行查询操作</span><br><span class="line"></span><br><span class="line">他两结合就是：阻塞修改删除操作，不阻塞查询操作</span><br><span class="line"></span><br><span class="line">乐观锁：谁先提交以谁为准</span><br><span class="line">悲观锁：在事物执行期间，阻塞其他事物的查询操作。剩1张票，我抢了，不管是否付款，你看不到这个票</span><br></pre></td></tr></table></figure><p><strong>多版本并发控制(MVCC)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1）只阻塞修改类操作，不阻塞查询类操作</span><br><span class="line">2）乐观锁的机制（谁先提交谁为准），mysql不能演示，因为隔离级别存在</span><br><span class="line"></span><br><span class="line"><span class="comment">#锁的粒度</span></span><br><span class="line">MyIsam：低并发锁（表级锁）</span><br><span class="line">Innodb：高并发锁（行级锁）</span><br></pre></td></tr></table></figure><p><strong>事务的隔离级别</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看隔离级别</span></span><br><span class="line">root@localhost:(none) &gt; show variables like <span class="string">&#x27;%iso%&#x27;</span>;</span><br><span class="line">+---------------+-----------------+</span><br><span class="line">| Variable_name | Value           |</span><br><span class="line">+---------------+-----------------+</span><br><span class="line">| tx_isolation  | REPEATABLE-READ |</span><br><span class="line">+---------------+-----------------+</span><br><span class="line"></span><br><span class="line">四种隔离级别：</span><br><span class="line">1、#READ UNCOMMITTED（未提交读） <span class="comment">#RU级别</span></span><br><span class="line">允许事务查看其他事务所进行的未提交更改</span><br><span class="line"></span><br><span class="line">2、#READ COMMITTED(已提交读)  <span class="comment">#RC级别</span></span><br><span class="line">允许事务查看其他事务所进行的已提交更改</span><br><span class="line"></span><br><span class="line">3、#REPEATABLE READ（重复读） <span class="comment">#RR级别</span></span><br><span class="line">确保每个事务的 SELECT 输出一致，比如说，你冲钱了，要刷新或者退出，才可以看到更新后的钱</span><br><span class="line">InnoDB 的默认级别</span><br><span class="line"></span><br><span class="line">4、#SERIALIZABLE (串行化)  <span class="comment">#不用这个级别</span></span><br><span class="line">将一个事务的结果与其他事务完全隔离</span><br><span class="line">在事物执行期间，查询到的数据是undo里面=的数据，</span><br><span class="line">查询的时候，阻塞修改</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看隔离级别</span></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%iso%&#x27;</span>;</span><br><span class="line"><span class="comment">#修改隔离级别为RU</span></span><br><span class="line">[mysqld]</span><br><span class="line">transaction_isolation=read-uncommit</span><br><span class="line">mysql&gt; use oldboy</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from stu;</span><br><span class="line">mysql&gt; insert into stu(<span class="built_in">id</span>,name,sex,money) values(2,<span class="string">&#x27;li4&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,123);</span><br><span class="line"><span class="comment">#修改隔离级别为RC  不需要修改，知道修改方法</span></span><br><span class="line">[mysqld]</span><br><span class="line">transaction_isolation=read-commit</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mysql以前版本存在的问题：分别是怎么产生的，简单了解解决方案</span></span><br><span class="line">1、脏读:隔离级别是RU级别就产生脏读，脏读读取到的是其他事务中未提交的数据。比如说有一个事务，A给B转钱，一开始两个人都是500，A给B转300，B就有800并去查，查看到800，但是A没有提交，B看到的就是脏数据，因为A的余额可能不足，回滚转钱     </span><br><span class="line"></span><br><span class="line">解决办法：提高隔离基本RC级别，可以解决脏读的问题</span><br><span class="line"></span><br><span class="line">2、幻读：已提交读开2个事务，去查看同一行数据</span><br><span class="line">在一个主键中明明没有查到主键为X的数据，但主键为X的数据就是插不进去，就像某种幻觉一样</span><br><span class="line">解决方案：使用RR级别解决，使用事务的隔离级别来避免幻读。与脏读类似，通过设置合适的隔离级别可以解决幻读问题。此外，还可以使用行级锁或表级锁来限制查询的范围，从而避免幻读的发生。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、不可重复读：一个事务先后执行同一条SQL,但2次读取到的数据不同，就是不可重复读</span><br><span class="line"></span><br><span class="line">解决方案：同样可以使用事务的隔离级别和行级锁来避免不可重复读。另外，MySQL还提供了一个特殊的锁——可重复读锁（Repeatable Read），它可以避免不可重复读的问题。要使用可重复读锁，可以在查询语句前加上FOR REPLICATE READ关键字：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#脏读是读到了其他事务未提交的数据，而不可重复读是读到了其他事务已经提交的数据，但前后查询的结果不同，而幻读则是明明查询不到，但就是插入不了。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#redis存在的问题</span></span><br><span class="line">缓存击穿：当有1个key，设置有生命周期，当一个请求过来后，查询这个可以时，刚好这个key到期了，直接穿过缓存，打到数据库上。当有大量的并发请求打到数据库上，会导致数据库被打垮</span><br><span class="line"></span><br><span class="line">缓存穿透：意味着这个数据，数据库里面没有，所以不会把数据放到redis缓存里，只要有人来查询，就一定缓存中查不到，所以一定要走数据库</span><br><span class="line">那么，假设很多人，故意去查那些数据库里也没有的记录，我们的 redis 就起不到屏障的作用，因为 redis 里不可能有数据，所以并发查询就一定会打到数据库的身上。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">击穿：数据库里<span class="string">&#x27;有&#x27;</span>数据</span><br><span class="line">穿透：数据库里<span class="string">&#x27;没有&#x27;</span>数据</span><br><span class="line"></span><br><span class="line">缓存雪崩：大面积的key同时过期，大量的并发打到数据库</span><br><span class="line">不像缓冲击穿，只是因为一个key的过期，所以，对于雪崩来说，一般少量的key失效，所带来的数据库并发压力不是很大，而大量的key同时失效，导致key的并发加起来，会影响到我们的数据库。那就算一个key失效，也会对数据库造成很大的影响，那么把雪崩的所有key拆除一个一个过期的key来看，也就是雪崩可以拆分成一个一个缓存击穿的集合，把数据库打崩</span><br><span class="line"></span><br><span class="line">解决这些问题都是开发写代码去解决</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕8、Mysql的索引执行计划</title>
      <link href="/posts/116a6ae3.html"/>
      <url>/posts/116a6ae3.html</url>
      
        <content type="html"><![CDATA[<h2 id="Mysql的索引执行计划">Mysql的索引执行计划</h2><p><strong>索引的介绍</strong><br>1）索引就好比一本书的目录，它能让你更快的找到自己想要的内容。<br>2）让获取的数据更有目的性，从而提高数据库检索数据的性能。</p><p><strong>索引算法类型</strong></p><p><font color=red>1、Btree算法：B树算法  （当前mysql默认的算法）</font>&gt;<br>2、HASH：哈希算法<br>3、Fulltext：全文算法<br>4、Rtree：R数算法<br>使用什么算法的索引，根mysql的存储引擎有关（innodb）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:(none) &gt; show engines;</span><br><span class="line">哈希算法只能用在MEMORY </span><br></pre></td></tr></table></figure><p><strong>Btree算法</strong></p><p><img src="../image/study_img/image-20240815090340158.png" alt="image-20240815090340158"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#规律： 三路Btree</span></span><br><span class="line">1、每一个数据页上面都有3个数据</span><br><span class="line">2、P1  P2  P3叫数据页</span><br><span class="line">3、每一页上的值，都是下一路数据上的最小值</span><br><span class="line"></span><br><span class="line">Btree算法是创建索引之后的排序规则</span><br><span class="line">根分支：(根节点)   </span><br><span class="line">中间部分：枝节点</span><br><span class="line">最顶上：叶子节点</span><br><span class="line"></span><br><span class="line"><span class="comment">#精确查询</span></span><br><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>=32;    这条语句经过3次IO</span><br><span class="line">如果没有索引，一直扫描到100，然后再把32取出来</span><br><span class="line"></span><br><span class="line"><span class="comment">#范围查询</span></span><br><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>&gt;25 and <span class="built_in">id</span>&lt;36;  9次IO</span><br><span class="line">范围越大，IO次数越多</span><br></pre></td></tr></table></figure><p><strong>B+tree 索引 (mysql默认的算法)</strong></p><p><img src="../image/study_img/image-20240815084835397.png" alt="image-20240815084835397"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#规律： 三路Btree</span></span><br><span class="line">1、每一个数据页上面都有3个数据</span><br><span class="line">2、P1  P2  P3叫数据页</span><br><span class="line">3、每一页上的值，都是下一路数据上的最小值</span><br><span class="line"></span><br><span class="line">Btree算法是创建索引之后的排序规则</span><br><span class="line">根分支：(根节点)   </span><br><span class="line">中间部分：枝节点</span><br><span class="line">最顶上：叶子节点</span><br><span class="line"></span><br><span class="line"><span class="comment">#精确查询</span></span><br><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>=32;            3次IO</span><br><span class="line">如果没有索引，一直扫描到100，然后再把32取出来</span><br><span class="line"></span><br><span class="line"><span class="comment">#范围查询</span></span><br><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>&gt;25 and <span class="built_in">id</span>&lt;36;  5次IO,因为他不回到根节点</span><br><span class="line">IO发生的次数越少，效率越快</span><br><span class="line"></span><br><span class="line"><span class="comment">#Btree算法和B+tree的区别</span></span><br><span class="line">1、B+tree算法优化了范围查询</span><br><span class="line">2、在相邻的叶子节点上添加了指针(Q就是指针)</span><br></pre></td></tr></table></figure><p><strong>B*tree  基本上不怎么用</strong></p><p><img src="../image/study_img/image-20240815132635119.png" alt="image-20240815132635119"></p><h2 id="索引的分类"><strong>索引的分类</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1、#主键索引(聚簇索引)：index</span><br><span class="line">   - 可以创建联合索引</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#唯一键索引：unique key</span><br><span class="line">   - 可以创建联合索引</span><br><span class="line">   - 可以创建前缀索引</span><br><span class="line"></span><br><span class="line">3、#普通索引：primary key</span><br><span class="line">   - 可以创建联合索引</span><br><span class="line">   - 可以创建前缀索引</span><br><span class="line">   </span><br><span class="line"><span class="comment">#查看一张表的索引方法：</span></span><br><span class="line">查看表结构的方法：</span><br><span class="line">root@localhost:(none) &gt; desc mysql.user;  </span><br><span class="line">----</span><br><span class="line"> Key   <span class="comment">#key列的就是索引</span></span><br><span class="line">----</span><br><span class="line"> PRI</span><br><span class="line"> PRI</span><br><span class="line"> </span><br><span class="line">建表语句的方法查看：</span><br><span class="line">root@localhost:(none) &gt; show create table mysql.user;</span><br><span class="line"> PRIMARY KEY (`Host`,`User`)</span><br><span class="line"> </span><br><span class="line">查看一张表里面都有哪些索引</span><br><span class="line">show index from 表名;</span><br><span class="line">root@localhost:(none) &gt; show index from mysql.user;</span><br><span class="line"></span><br><span class="line">Key_name  <span class="comment">#索引名字     </span></span><br><span class="line">PRIMARY </span><br><span class="line">PRIMARY </span><br><span class="line"></span><br><span class="line">Index_type  <span class="comment">#索引类型  B树算法的统称都叫Btree</span></span><br><span class="line">BTREE     </span><br><span class="line">BTREE    </span><br></pre></td></tr></table></figure><p><font color=red>注意：索引不是越多越好，避免给大列创建索引</font>&gt;<br>1.索引会进行排序，大列创建索引速度慢<br>2.索引越多占用磁盘空间越大</p><p>1、首先你给一个字段添加索引，mysql的底层会进行Btree算法进行排序，在排序的时候就要花时间，<br>2、索引越多占用磁盘空间，<br>3、虽然查询速度快，insert、update、delete处理数据的时候会耗时，他会重新排序</p><h3 id="索引的操作"><strong>索引的操作</strong></h3><p><strong>1、普通索引  index</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在企业中，不确定表里面有多少数据，敢不敢用select *？</span></span><br><span class="line"><span class="comment">#先统计一下行数</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> count(*) from world.city;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|     4079 |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; desc stu5;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| <span class="built_in">id</span>    | int(11)     | NO   |     | 0       |       |</span><br><span class="line">| name  | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">1、添加普通索引</span><br><span class="line"><span class="comment">#给name字段添加普通索引（里面的值可以为空，也可以重复，就是为了查询的速度快）</span></span><br><span class="line">alter table 表名 add index 索引名(字段);</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; alter table stu5 add index idx_name(name);</span><br><span class="line">root@localhost:student &gt;  desc stu5;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| <span class="built_in">id</span>    | int(11)     | NO   |     | 0       |       |</span><br><span class="line">| name  | varchar(10) | YES  | MUL | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">root@localhost:student &gt; show index from stu5;</span><br><span class="line"></span><br><span class="line">2、删除普通索引</span><br><span class="line">root@localhost:student &gt; alter table stu5 drop index idx_name;</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; show index from stu5;   <span class="comment">#查看表里面有哪些索引，发现是空的，删除成功</span></span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#索引没有改 只能增删查</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">有索引和无索引的区别</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看表里面的全部索引</span></span><br><span class="line">show index from world.city;</span><br><span class="line"></span><br><span class="line"><span class="comment">#表里面4079，读的时候读了4188行</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> *  from world.city;</span><br><span class="line">4079 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line">分析sql语句</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> *  from world.city;</span><br><span class="line">rows   <span class="comment">#行数</span></span><br><span class="line">----</span><br><span class="line">4188</span><br><span class="line">精确查询一个城市，还是4188行</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> *  from world.city <span class="built_in">where</span> name=<span class="string">&#x27;Odessa&#x27;</span>;</span><br><span class="line">rows</span><br><span class="line">----</span><br><span class="line">4188</span><br><span class="line">原因：在没有索引的情况下，进行全表扫描了</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看有索引的字段名，并进行分析</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population=92020;</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population=92020;</span><br><span class="line">rows   <span class="comment">#行数只要1行</span></span><br><span class="line">----</span><br><span class="line">   1</span><br><span class="line">在有索引的情况下，只查出了1行，因为添加索引之后，已经排好序了</span><br></pre></td></tr></table></figure><p><strong>2、唯一键索引  unique key</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">主键索引的速度一定是最快的，但是一张表里面只有一个主键，优先考虑唯一键索引，他的速度仅次于主键索引</span><br><span class="line">创建唯一键索引的前提不能有重复的值</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断一个列能不能创建唯一键索引的方法：</span></span><br><span class="line">1、先统计一下有多少行</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> count(population) from world.city;</span><br><span class="line">+-------------------+</span><br><span class="line">| count(population) |</span><br><span class="line">+-------------------+</span><br><span class="line">|              4079 |</span><br><span class="line">+-------------------+</span><br><span class="line">2、再去统计一下去重后的行数</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> count(distinct(population)) from world.city;</span><br><span class="line">+-----------------------------+</span><br><span class="line">| count(distinct(population)) |</span><br><span class="line">+-----------------------------+</span><br><span class="line">|                        3897 |</span><br><span class="line">+-----------------------------+</span><br><span class="line">3、对比数据，发现数据变少了，说明有重复的值，不能使用唯一键索引，只能创建普通索引</span><br><span class="line">4、创建普通索引</span><br><span class="line">root@localhost:student &gt; alter table world.city add index idx_population(population);</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建唯一键索引</span></span><br><span class="line">root@localhost:student &gt; alter table stu3 add unique key uni_phone(phone);</span><br><span class="line">查看</span><br><span class="line">root@localhost:student &gt; show index from stu3;</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除唯一键索引</span></span><br><span class="line">root@localhost:student &gt; alter table stu3 drop index uni_phone;</span><br></pre></td></tr></table></figure><p><strong>3、主键索引(聚簇索引)：primary key</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#建表时创建主键索引</span></span><br><span class="line">root@localhost:student &gt; create table stu4(<span class="built_in">id</span> int primary key auto_increment,name varchar(10));</span><br><span class="line">root@localhost:student &gt; create table stu4(<span class="built_in">id</span> int auto_increment,name varchar(10),primary key(<span class="built_in">id</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加主键索引</span></span><br><span class="line">root@localhost:student &gt; create table stu5(<span class="built_in">id</span> int,name varchar(10));</span><br><span class="line">root@localhost:student &gt; desc stu5;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| <span class="built_in">id</span>    | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">这个表创建的时候没有加主键，需要添加主键</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; alter table stu5 add primary key(<span class="built_in">id</span>);</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; desc stu5;   <span class="comment">#查看到主键索引已添加</span></span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| <span class="built_in">id</span>    | int(11)     | NO   | PRI | 0       |       |</span><br><span class="line">| name  | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除主键索引</span></span><br><span class="line">root@localhost:student &gt; alter table stu5 drop primary key;</span><br><span class="line">如果索引里面有数据 是删不掉的</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#索引有专门的添加方式，不能用改字段的方式去修改</span></span><br></pre></td></tr></table></figure><ul><li>前缀索引</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">为什么有前缀索引：解决给大列创建的索引排序时，解决排序速度慢的问题</span><br><span class="line"></span><br><span class="line">1、#普通索引创建一个前缀索引</span><br><span class="line">root@localhost:student &gt; alter table stu3 add index idex_phone(phone(3));</span><br><span class="line">指定这个字段排序时，优先按前3个字符排序，就不是按完整字符排序了</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看建表语句： 可以看到他是前缀索引，按3个字符排序</span></span><br><span class="line">root@localhost:student &gt; show create table stu3;</span><br><span class="line">  KEY `idex_phone` (`phone`(3))</span><br><span class="line">root@localhost:student &gt; show index from  stu3;</span><br><span class="line">Sub_part </span><br><span class="line">---------</span><br><span class="line">       3 </span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">2、#唯一索引创建前缀索引  前提条件，指定的前几个字符不能重复</span><br><span class="line">先把上次创建的前缀索引删除</span><br><span class="line">root@localhost:student &gt; alter table stu3 drop index idex_phone;</span><br><span class="line">root@localhost:student &gt; alter table stu3 add unique key uni_phone(phone(3));  <span class="comment">#会报错</span></span><br><span class="line">ERROR 1062 (23000): Duplicate entry <span class="string">&#x27;123&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;uni_phone&#x27;</span></span><br><span class="line">唯一索引前缀：按前3个字符排序，但是前3个字符不能一样</span><br><span class="line"></span><br><span class="line">按最后一个字符排序</span><br><span class="line">root@localhost:student &gt; alter table stu3 add unique key uni_phone(phone(11));</span><br><span class="line">root@localhost:student &gt; show index from stu3;</span><br><span class="line">Sub_part </span><br><span class="line">----------</span><br><span class="line">NULL   <span class="comment">#手机号的总长度就是11，相当于没写这个前缀，除非前缀不一样，不重复</span></span><br><span class="line"><span class="comment"># 一般手机号的列，很少创建唯一索引</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#主键索引创建前缀索引  <span class="comment">#无法创建，主键索引不支持前缀</span></span><br><span class="line">alter table stu2 add primary key(<span class="built_in">id</span>(3));</span><br></pre></td></tr></table></figure><ul><li>联合索引</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">一张表里面哪些字段需要创建索引，取决于：用户需求</span><br><span class="line">一个数据，用户经常查，一定是对这个字段需求量比较大，就要提高这个字段查询的效率</span><br><span class="line"></span><br><span class="line">当一张表中，需要创建索引的字段比较多的时候，就可以用联合索引</span><br><span class="line"></span><br><span class="line">1、#创建普通索引的联合索引</span><br><span class="line">多个字段建立一个索引</span><br><span class="line"><span class="comment">#原则：把最常用来做为条件查询的列放在最前面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建相亲表</span></span><br><span class="line">create table xiangqin(<span class="built_in">id</span> int comment <span class="string">&#x27;序号&#x27;</span>,</span><br><span class="line">name varchar(10) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">gender enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>) comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">high int comment <span class="string">&#x27;身高&#x27;</span>,</span><br><span class="line">weight int comment <span class="string">&#x27;体重&#x27;</span>,</span><br><span class="line">body varchar(10) comment <span class="string">&#x27;身材&#x27;</span>,</span><br><span class="line">salary int) comment <span class="string">&#x27;收入&#x27;</span>;</span><br><span class="line"></span><br><span class="line">1)、#假设用户最关注的是：</span><br><span class="line">性别：gender</span><br><span class="line">收入：salary</span><br><span class="line">身材：body</span><br><span class="line"></span><br><span class="line">2)、#根据用户喜好创建联合索引创建联合索引</span><br><span class="line">root@localhost:student &gt; alter table xiangqin add index idx_all(gender,salary,body);</span><br><span class="line">如果创建的时候，把body放第一个，用户查询的时候就不走索引，这个索引等于没建</span><br><span class="line">查看：</span><br><span class="line">root@localhost:student &gt; show index from xiangqin;</span><br><span class="line"></span><br><span class="line">创建联合索引+前缀索引</span><br><span class="line">root@localhost:student &gt; alter table xiangqin add index idex_all(gender,salary(4),body);</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; desc xiangqin;</span><br><span class="line">| gender | enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>) | YES  | MUL | NULL    |  <span class="comment">#只看到排序的第一个有索引</span></span><br><span class="line">root@localhost:student &gt; show index from xiangqin;  <span class="comment">#可以看全</span></span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">当：a.女生 and b.身高 and c.体重 and d.身材好</span><br><span class="line">index(a,b,c)</span><br><span class="line">特点：前缀生效特性</span><br><span class="line">a,ab,ac,abc,abcd 可以走索引或部分走索引</span><br><span class="line">b bc bcd <span class="built_in">cd</span> c d ba ... 不走索引  只要a不在前面，就不走索引</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#唯一索引创建联合索引</span><br><span class="line">先删除上次创建的索引</span><br><span class="line">root@localhost:student &gt; alter table xiangqin drop index idx_all;</span><br><span class="line">字段的数据不能重复</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; alter table xiangqin add unique key uni_all(gender,salary,body);</span><br><span class="line"></span><br><span class="line">3、#主键索引创建联合索引</span><br><span class="line">先删除上次创建的索引</span><br><span class="line">root@localhost:student &gt; alter table xiangqin drop index uni_all;</span><br><span class="line"></span><br><span class="line">创建主键索引</span><br><span class="line">root@localhost:student &gt; alter table xiangqin add primary key(gender,salary,body);</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; desc xiangqing     <span class="comment">#3个都显示</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分析慢查询语句，需要开启慢查询日志，他会把慢的sql语句记录进去</span><br><span class="line"></span><br><span class="line">mysql执行慢，可能和扫描有关</span><br></pre></td></tr></table></figure><p><strong>Mysql数据扫描</strong></p><p>1、全表扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#什么情况下出现全表扫描</span></span><br><span class="line">情况1、<span class="keyword">select</span> * from tb1;</span><br><span class="line">情况2、<span class="keyword">select</span> 查询数据时，<span class="built_in">where</span>条件接的字段，没有创建索引   (不走索引，就是全表扫描)</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | ALL  | NULL          | NULL | NULL    | NULL | 4188 |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是ALL 扫描的行数是4188行</span></span><br></pre></td></tr></table></figure><p>2、索引扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#索引扫描就是走索引查询(走索引，也有快慢之分，不是走索引了就一定快)</span></span><br><span class="line"></span><br><span class="line">常见的走索引扫描类型:</span><br><span class="line">1）index</span><br><span class="line">2）range</span><br><span class="line">3）ref</span><br><span class="line">4）eq_ref</span><br><span class="line">5）const、system</span><br><span class="line">6）null</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、# index：全索引扫描(最慢，和全表扫描没什么区别)</span><br><span class="line">root@localhost:student &gt; show index from world.city;</span><br><span class="line">它做了普通索引的，只查countrycode这一列</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> countrycode from world.city;</span><br><span class="line"><span class="comment">#explain就是分析sql语句</span></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> countrycode from world.city;</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys | key         | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | index | NULL          | CountryCode | 3       | NULL | 4188 |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是index 扫描的行数是4188行</span></span><br><span class="line"></span><br><span class="line">2、# range：范围查询并创建了索引    只要能达到rang级别，就是OK的  如果想把range优化到system的级别，是不能实现的，system级别只能主键索引能到底</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population&lt;1000;</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population&lt;1000;</span><br><span class="line">+----+-------------+-------+-------+----------------+----------------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys  | key            | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+----------------+----------------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | range | idx_population | idx_population | 4       | NULL |   11 |</span><br><span class="line">+----+-------------+-------+-------+----------------+----------------+---------+------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是range 扫描的行数是11行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#这两个效率一样</span></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode=<span class="string">&#x27;CHN&#x27;</span> or countrycode=<span class="string">&#x27;USA&#x27;</span>;</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode <span class="keyword">in</span> (<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;USA&#x27;</span>);</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys | key         | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | range | CountryCode   | CountryCode | 3       | NULL |  637 |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是range 扫描的行数是637行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#优化到ref级别</span></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode=<span class="string">&#x27;CHN&#x27;</span> union all <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode=<span class="string">&#x27;USA&#x27;</span>;</span><br><span class="line">+----+--------------+------------+------+---------------+-------------+---------+-------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type  | table      | <span class="built_in">type</span> | possible_keys | key         | key_len | ref   | rows |</span><br><span class="line">+----+--------------+------------+------+---------------+-------------+---------+-------+------+</span><br><span class="line">|  1 | PRIMARY      | city       | ref  | CountryCode   | CountryCode | 3       | const |  363 |</span><br><span class="line">|  2 | UNION        | city       | ref  | CountryCode   | CountryCode | 3       | const |  274 |</span><br><span class="line">| NULL | UNION RESULT | &lt;union1,2&gt; | ALL  | NULL          | NULL        | NULL    | NULL  | NULL</span><br><span class="line">+----+--------------+------------+------+---------------+-------------+---------+-------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是ref 扫描的行数是分开的</span></span><br><span class="line"></span><br><span class="line">3、# ref：联合查询、普通索引的精确查询</span><br><span class="line">联合查询</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode=<span class="string">&#x27;CHN&#x27;</span> union all <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode=<span class="string">&#x27;USA&#x27;</span>;</span><br><span class="line"></span><br><span class="line">普通索引的精确查询才能到底ref级别</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode=<span class="string">&#x27;CHN&#x27;</span>;</span><br><span class="line">+----+-------------+-------+------+---------------+-------------+---------+-------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key         | key_len | ref   | rows |</span><br><span class="line">+----+-------------+-------+------+---------------+-------------+---------+-------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | ref  | CountryCode   | CountryCode | 3       | const |  363 |</span><br><span class="line">+----+-------------+-------+------+---------------+-------------+---------+-------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是ref 扫描的行数是363行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、# eq_ref：只有在连表查询使用 <span class="built_in">join</span> on,且小表在前，大表在后</span><br><span class="line"><span class="built_in">join</span> B </span><br><span class="line">on A.sid=B.sid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、# const、system：主键查询的精确查询</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> <span class="built_in">id</span>=10;</span><br><span class="line">+----+-------------+-------+-------+---------------+---------+---------+-------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys | key     | key_len | ref   | rows |</span><br><span class="line">+----+-------------+-------+-------+---------------+---------+---------+-------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | const | PRIMARY       | PRIMARY | 4       | const |    1 |</span><br><span class="line">+----+-------------+-------+-------+---------------+---------+---------+-------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是const 扫描的行数是1行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、# null：让mysql啥也不干 性能才是最高的，这个基本上不会出现的</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population&gt;10000000000;   <span class="comment">#按Btree算法来看，已经不在排序范围了，已经超过记录了</span></span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | NULL  | NULL | NULL          | NULL | NULL    | NULL | NULL |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line"><span class="comment">#可以看到type类型是NULL 扫描的行数是NULL行</span></span><br><span class="line"></span><br><span class="line">非要优化到system级别的 只能创建主键索引，但是主键索引只能有一个 所以不能优化</span><br><span class="line">不是创建了索引，就走索引扫描</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key_len的列: 越小越好，可以拿前缀索引去控制</span><br><span class="line">rows的列: 越小越好</span><br></pre></td></tr></table></figure><p><strong>索引的创建规范</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这个可能用不到，因为一般企业里面的表早就建好了</span></span><br><span class="line">为了使索引的使用效率更高，在创建索引时，必须考虑在哪些字段上创建索引和创建什么类型的索引。</span><br><span class="line">1、每张表必须有一个主键索引</span><br><span class="line"></span><br><span class="line">2、主键索引只能创建一个，但要对某个字段创建索引，优先考虑能创建唯一索引就创建唯一索引</span><br><span class="line"><span class="comment">#需要先判断是否能创建唯一索引</span></span><br><span class="line">root@localhost:zls 10:12:29&gt; <span class="keyword">select</span> count(population) from world.city;</span><br><span class="line">root@localhost:zls 10:12:43&gt; <span class="keyword">select</span> count(distinct(population)) from world.city;</span><br><span class="line"></span><br><span class="line">3、如果重复值比较多的情况下，联合索是优先的，可以用普通索引的联合索引</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、为经常需要排序、分组和联合操作的字段建立索引</span><br><span class="line">例如:</span><br><span class="line">经常需要ORDER BY、GROUP BY、DISTINCT和UNION等操作的字段，排序操作会浪费很多时间。</span><br><span class="line">如果为其建立索引，可以有效地避免排序操作</span><br><span class="line"></span><br><span class="line">5、为常作为查询条件的字段建立索引</span><br><span class="line">如果某个字段经常用来做查询条件，那么该字段的查询速度会影响整个表的查询速度。</span><br><span class="line">因此，为这样的字段建立索引，可以提高整个表的查询速度。</span><br><span class="line"></span><br><span class="line">注：如果经常作为条件的列，重复值特别多，可以建立联合索引</span><br><span class="line"></span><br><span class="line">6、尽量使用前缀来索引，创建的索引能加前缀的加前缀，唯一索引也可以加</span><br></pre></td></tr></table></figure><ul><li>限制索引的数目<br>索引的数目不是越多越好。每个索引都需要占用磁盘空间，索引越多，需要的磁盘空间就越大。<br>修改表时，对索引的重构和更新很麻烦。越多的索引，会使更新表变得很浪费时间。</li><li>删除不再使用或者很少使用的索引<br>用户的喜好会发生变化的，要经常调用哪些字段用户查询减少，把表中的数据被大量更新，或者数据的使用方式被改变后，原有的一些索引可能不再需要。数据库管理员应当定期找出这些索引，将它们删除，从而减少索引对更新操作的影响。</li></ul><p><strong>怎么判断不走索引</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#不是创建了索引，就一定走索引</span></span><br><span class="line">使用explain判断是否走索引</span><br><span class="line"></span><br><span class="line">1、#没创建索引</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#当你查的数据的结果集超过总数据25%  你的数据有100条，查询出来的时候有125条</span><br><span class="line">示例</span><br><span class="line">假设一个数据库表students，包含100条记录。执行了一个查询来查找年龄大于18岁的学生，并得到了30条记录作为结果集。</span><br><span class="line">总数据量：100条记录</span><br><span class="line">结果集大小：30条记录</span><br><span class="line">比例计算：(30 / 100) * 100% = 30%</span><br><span class="line">结论：结果集超过了总数据的25%（因为30% &gt; 25%）</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> Population&gt;1000;</span><br><span class="line">4068 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)  <span class="comment">#得到的结果集4068</span></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> Population&gt;1000;</span><br><span class="line">+----+-------------+-------+------+----------------+------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys  | key  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+------+----------------+------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | ALL  | idx_population | NULL | NULL    | NULL | 4188 |</span><br><span class="line">+----+-------------+-------+------+----------------+------+---------+------+------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#优化方案： 使用limit，分页查询</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population&gt;1000 <span class="built_in">limit</span> 10;</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population&gt;1000 <span class="built_in">limit</span> 10;</span><br><span class="line">+----+-------------+-------+-------+----------------+----------------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys  | key            | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+----------------+----------------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | range | idx_population | idx_population | 4       | NULL | 4067 |</span><br><span class="line">+----+-------------+-------+-------+----------------+----------------+---------+------+------+</span><br><span class="line"></span><br><span class="line">3、#使用字段做计算  <span class="built_in">id</span>+1=10这样使用字段做计算，不走索引  <span class="built_in">id</span>=10-1 会走索引</span><br><span class="line"><span class="comment">#id=10-1 会走索引</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from world.city <span class="built_in">where</span> <span class="built_in">id</span>=10-1;</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> <span class="built_in">id</span>=10-1;</span><br><span class="line">+----+-------------+-------+-------+---------------+---------+---------+-------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys | key     | key_len | ref   | rows |</span><br><span class="line">+----+-------------+-------+-------+---------------+---------+---------+-------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | const | PRIMARY       | PRIMARY | 4       | const |    1 |</span><br><span class="line">+----+-------------+-------+-------+---------------+---------+---------+-------+------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#id+1=10 不走索引</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from world.city <span class="built_in">where</span> <span class="built_in">id</span>+1=10;</span><br><span class="line">+----+-----------+-------------+---------------+------------+</span><br><span class="line">| ID | Name      | CountryCode | District      | Population |</span><br><span class="line">+----+-----------+-------------+---------------+------------+</span><br><span class="line">|  9 | Eindhoven | NLD         | Noord-Brabant |     201843 |</span><br><span class="line">+----+-----------+-------------+---------------+------------+</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> <span class="built_in">id</span>+1=10;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | ALL  | NULL          | NULL | NULL    | NULL | 4188 |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line"></span><br><span class="line">4、#隐式转换导致不走索引</span><br><span class="line">phone字段是char类型的 插入的时候没有加引号</span><br><span class="line">1）、先查看这个表，phone有索引，数据类型是char(11) </span><br><span class="line">root@localhost:student &gt; desc stu3;</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| Field     | Type                | Null | Key | Default           | Extra          |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| <span class="built_in">id</span>        | int(11)             | NO   | PRI | NULL              | auto_increment |</span><br><span class="line">| name      | varchar(20)         | NO   |     | NULL              |                |</span><br><span class="line">| age       | tinyint(4) unsigned | NO   |     | NULL              |                |</span><br><span class="line">| gender    | enum(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;f&#x27;</span>)       | NO   |     | m                 |                |</span><br><span class="line">| phone     | char(11)            | NO   | PRI | NULL              |                |</span><br><span class="line">| come_time | datetime            | NO   |     | CURRENT_TIMESTAMP |                |</span><br><span class="line">| status    | enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)       | NO   |     | 0                 |                |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">2）、插入一条数据</span><br><span class="line">root@localhost:student &gt; insert into stu3 values(8,<span class="string">&#x27;wang6u&#x27;</span>,22,<span class="string">&#x27;m&#x27;</span>,12121212127,now(),<span class="string">&#x27;0&#x27;</span>);   <span class="comment">#phone插入的时候没有加引号</span></span><br><span class="line">3）、查询的时候也是没有加引号，没有走索引</span><br><span class="line">root@localhost:student &gt;  explain <span class="keyword">select</span> * from stu3 <span class="built_in">where</span> phone=12121212127;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | stu3  | ALL  | uni_phone     | NULL | NULL    | NULL |    7 |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">4）查询的时候加引号，走索引</span><br><span class="line">root@localhost:student &gt;  explain <span class="keyword">select</span> * from stu3 <span class="built_in">where</span> phone=<span class="string">&#x27;12121212127&#x27;</span>;</span><br><span class="line">+----+-------------+-------+-------+---------------+-----------+---------+-------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys | key       | key_len | ref   | rows |</span><br><span class="line">+----+-------------+-------+-------+---------------+-----------+---------+-------+------+</span><br><span class="line">|  1 | SIMPLE      | stu3  | const | uni_phone     | uni_phone | 33      | const |    1 |</span><br><span class="line">+----+-------------+-------+-------+---------------+-----------+---------+-------+------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#优化：查询字段的数据类型按照指定的数据类型进行查询</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、#模糊查询   %不能放前面，因为%不固定，全表都要扫描，范围大</span><br><span class="line">%放前面，不走索引</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode like <span class="string">&#x27;%H&#x27;</span>;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | ALL  | NULL          | NULL | NULL    | NULL | 4188 |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line"></span><br><span class="line">%没放前面，走索引</span><br><span class="line">root@localhost:student &gt; root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode like <span class="string">&#x27;H%&#x27;</span>;</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys | key         | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | range | CountryCode   | CountryCode | 3       | NULL |   22 |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#优化：如果生产中有大量的这种%放前面才能查询的需求，那就不使用mysql,</span></span><br><span class="line"><span class="comment">#可以用elasticsearch,他是专门做搜索引擎的数据库</span></span><br><span class="line"></span><br><span class="line">6、#范围查询时，使用&lt;&gt;、 not <span class="keyword">in</span> 、!=</span><br><span class="line">使用这种方法必然会不走索引，因为不等于1个值，其它的都出来了，结果集必定&gt;25%</span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode != <span class="string">&#x27;CHN&#x27;</span>;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | ALL  | CountryCode   | NULL | NULL    | NULL | 4188 |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+</span><br><span class="line">归根结底还是结果集导致不走索引</span><br><span class="line"></span><br><span class="line"><span class="comment">#优化：使用limit</span></span><br><span class="line">root@localhost:student &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode != <span class="string">&#x27;CHN&#x27;</span> <span class="built_in">limit</span> 10;</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | possible_keys | key         | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | range | CountryCode   | CountryCode | 3       | NULL | 3715 |</span><br><span class="line">+----+-------------+-------+-------+---------------+-------------+---------+------+------+</span><br><span class="line"></span><br><span class="line">7、#联合索引：当没有按照索引创建顺序查询，导致不走索引</span><br><span class="line"><span class="comment">#优化方案：做好调研，日志分析数据，按照用户需求，创建联合索引</span></span><br><span class="line"></span><br><span class="line">8、索引本身失效  </span><br><span class="line"><span class="comment">#优化方案：删除重建</span></span><br><span class="line">判断索引是否失效，就是把上面的判断完了，都走索引了</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">网站访问慢，或者面试问</span><br><span class="line">如果是物理机，就先排除硬件，或者网络，是不是网络延迟高，传输层，tcp，排查七层模型，最后到应用层，nginx的配置，是不是压力大抗不住</span><br><span class="line">mysql是不是慢查询导致的速度慢，他会记录在日志里面，拿出来，加上explain 分析，</span><br><span class="line">分析是全表扫描还是索引扫描，索引扫描了，是哪个级别，</span><br><span class="line">如果是全表扫描，看看是不是没有创建索引，如果创建了索引，还是全表扫描，那原因是什么呢？</span><br><span class="line"></span><br><span class="line">mysql的视图和触发器 是开发写的</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕7、Mysql的连表查询</title>
      <link href="/posts/257eb32c.html"/>
      <url>/posts/257eb32c.html</url>
      
        <content type="html"><![CDATA[<h3 id="mysql的连表查询">mysql的连表查询</h3><p><strong>字符集的介绍</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">字符编码：现在能够看到的字符串 数字 特殊符号，都是字符编码表提供的</span><br><span class="line"></span><br><span class="line">字符集：是一个系统支持的所有抽象字符的集合。字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘存储数据是二进制的数据，在系统的最底层，二进制的数据就是0 1，二进制的我们看不懂，最底层有一个ACS码表，经过他的转换，二进制的数据就变成我们能够看懂的字符串</span><br><span class="line">ACS码表多大呢，就一页，不指定字符集，就会乱码</span><br><span class="line"></span><br><span class="line">如果软件想要对国外提供服务，开发语言把接收到的数据转化为json,叫序列化</span><br><span class="line">json转化为其他语言，叫反序列化</span><br><span class="line">如果用万国编码开发，开发出来的程序特别大</span><br><span class="line"></span><br><span class="line">2.MySQL数据库的字符集</span><br><span class="line">     1）字符集（CHARACTER）</span><br><span class="line">     2）校对规则（COLLATION）</span><br><span class="line"></span><br><span class="line">3.MySQL中常见的字符集</span><br><span class="line">     1）UTF8</span><br><span class="line">     2）LATIN1</span><br><span class="line">     3）GBK</span><br><span class="line">     </span><br><span class="line">4.可以使用以下命令查看</span><br><span class="line">     mysql&gt; show charset;</span><br><span class="line">     mysql&gt; show collation：</span><br><span class="line"></span><br><span class="line">5.常见校对规则</span><br><span class="line">     Collation 的列  ci结尾：大小写不敏感</span><br><span class="line">                    cs或bin结尾：大小写敏感</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240814084651245.png" alt="image-20240814084651245"></p><p><strong>字符集的设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#字符集需要统一</span></span><br><span class="line">1、需要设置远程连接工具的字符集</span><br><span class="line"></span><br><span class="line">2、查看操作系统设置字符集</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> SLANG</span><br><span class="line">SLANG</span><br><span class="line"></span><br><span class="line"><span class="comment">## 临时修改系统字符集</span></span><br><span class="line">[root@db04 ~]# <span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment">## 永久修改 CentOS7</span></span><br><span class="line">[root@db04 ~]# vim /etc/locale.conf</span><br><span class="line">LANG=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 永久修改 CentOS6</span></span><br><span class="line">[root@db04 ~]# vim /etc/sysconfig/i18n</span><br><span class="line">LANG=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br><span class="line"></span><br><span class="line">3、mysql服务字符集的修改</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">#想知道我们库里面哪些表不是utf8</span></span><br><span class="line">root@localhost:(none) &gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema | <span class="comment">#这个库存元数据，在磁盘上看不见</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * from information_schema.tables <span class="built_in">where</span> table_collation not like <span class="string">&#x27;%utf8%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>库表修改字符集</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:(none) &gt; show create database mysql;</span><br><span class="line">+----------+----------------------------------------------------------------+</span><br><span class="line">| Database | Create Database                                                |</span><br><span class="line">+----------+----------------------------------------------------------------+</span><br><span class="line">| mysql    | CREATE DATABASE `mysql` /*!40100 DEFAULT CHARACTER SET utf8 */ |</span><br><span class="line">+----------+----------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">1、#修改字符集</span><br><span class="line">mysql&gt; alter database mysql charset utf8;</span><br><span class="line"></span><br><span class="line">2、#查看所有库里面哪些表的字符集不是UTF8的</span><br><span class="line"><span class="keyword">select</span> * from information_schema.tables <span class="built_in">where</span> table_collation not like <span class="string">&#x27;%utf8%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3、# 修改单张表字符集</span><br><span class="line">mysql&gt; alter table zls.test111 charset utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">#批量修改表的字符集</span></span><br><span class="line">可以把表名取出来，放到文件里面，循环文件里面的内容去修改</span><br><span class="line"><span class="comment">## 方法一：</span></span><br><span class="line">[root@db04 ~]# <span class="keyword">for</span> n <span class="keyword">in</span> `<span class="built_in">seq</span> 7`;<span class="keyword">do</span> mysql -uroot -p123 -e <span class="string">&quot;alter table</span></span><br><span class="line"><span class="string">zabbix.zabbix<span class="variable">$n</span> charset utf8&quot;</span> ;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">导出数据库，编辑导出的数据文件，编辑数据文件，把字符集修改，再导入数据</span><br><span class="line"><span class="comment"># 方法二：</span></span><br><span class="line">[root@db04 ~]# mysqldump -uroot -p123 -B zabbix &gt; /tmp/zabbix.sql</span><br><span class="line">[root@db04 ~]# vim /tmp/zabbix.sql</span><br><span class="line">:%s#CHARSET=latin1#CHARSET=utf8#g</span><br><span class="line">[root@db04 ~]# sed -i <span class="string">&#x27;s#CHARSET=latin1#CHARSET=utf8#g&#x27;</span> /tmp/zabbix.sql</span><br><span class="line">[root@db04 ~]# mysql -uroot -p123 &lt; /tmp/zabbix.sql</span><br><span class="line"></span><br><span class="line">字符集不够用就改，把小的字符集往大改</span><br></pre></td></tr></table></figure><p><strong>select 连表查询 （多表连查）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">1     2      3</span><br><span class="line">[li4,zhang3,wang5]  <span class="comment">#学生表</span></span><br><span class="line"></span><br><span class="line"> 1   2  3</span><br><span class="line">[80,90,100]    <span class="comment">#成绩表</span></span><br><span class="line"></span><br><span class="line"> 2    1   3</span><br><span class="line">[语文,数学,英语]  <span class="comment">#学科表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@localhost:(none) &gt; use aaa</span><br><span class="line">root@localhost:aaa &gt; create table stu(<span class="built_in">id</span> int,name varchar(10));</span><br><span class="line">root@localhost:aaa &gt; insert into stu values(1,<span class="string">&#x27;lis4&#x27;</span>),(2,<span class="string">&#x27;zhang3&#x27;</span>),(3,<span class="string">&#x27;wang5&#x27;</span>);</span><br><span class="line">root@localhost:aaa &gt; <span class="keyword">select</span> * from stu;</span><br><span class="line">+------+--------+</span><br><span class="line">| <span class="built_in">id</span>   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | lis4   |</span><br><span class="line">|    2 | zhang3 |</span><br><span class="line">|    3 | wang5  |</span><br><span class="line">+------+--------+</span><br><span class="line"></span><br><span class="line">root@localhost:aaa &gt; create table mark(<span class="built_in">id</span> int,mark tinyint unsigned);</span><br><span class="line">root@localhost:aaa &gt; insert into mark values(1,80),(2,90),(3,100);</span><br><span class="line">root@localhost:aaa &gt; <span class="keyword">select</span> * from mark;</span><br><span class="line">+------+------+</span><br><span class="line">| <span class="built_in">id</span>   | mark |</span><br><span class="line">+------+------+</span><br><span class="line">|    1 |   80 |</span><br><span class="line">|    2 |   90 |</span><br><span class="line">|    3 |  100 |</span><br><span class="line">+------+------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询张三的成绩</span></span><br><span class="line">名字：stu  name</span><br><span class="line">分数：mark mark</span><br><span class="line"></span><br><span class="line">root@localhost:aaa &gt; <span class="keyword">select</span> stu.name,mark.mark from stu,mark <span class="built_in">where</span> stu.id=mark.id and stu.name=<span class="string">&#x27;zhang3&#x27;</span>;   <span class="comment">#这种方式叫传统连接</span></span><br><span class="line">+--------+------+</span><br><span class="line">| name   | mark |</span><br><span class="line">+--------+------+</span><br><span class="line">| zhang3 |   90 |</span><br><span class="line">+--------+------+     </span><br></pre></td></tr></table></figure><p><strong>select 传统连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">1、先查看表结构</span><br><span class="line">root@localhost:world &gt; desc city;</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field       | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO   |     |         |                |</span><br><span class="line">| CountryCode | char(3)  | NO   | MUL |         |                |</span><br><span class="line">| District    | char(20) | NO   |     |         |                |</span><br><span class="line">| Population  | int(11)  | NO   |     | 0       |                |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line"></span><br><span class="line">root@localhost:world &gt; desc country;</span><br><span class="line">+----------------+---------------------------------------------------------------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field          | Type                                                                                  | Null | Key | Default | Extra |</span><br><span class="line">+----------------+---------------------------------------------------------------------------------------+------+-----+---------+-------+</span><br><span class="line">| Code           | char(3)                                                                               | NO   | PRI |         |       |</span><br><span class="line">| Name           | char(52)                                                                              | NO   |     |         |       |</span><br><span class="line">| Continent      | enum(<span class="string">&#x27;Asia&#x27;</span>,<span class="string">&#x27;Europe&#x27;</span>,<span class="string">&#x27;North America&#x27;</span>,<span class="string">&#x27;Africa&#x27;</span>,<span class="string">&#x27;Oceania&#x27;</span>,<span class="string">&#x27;Antarctica&#x27;</span>,<span class="string">&#x27;South America&#x27;</span>) | NO   |     | Asia    |       |</span><br><span class="line">| Region         | char(26)                                                                              | NO   |     |         |       |</span><br><span class="line">| SurfaceArea    | <span class="built_in">float</span>(10,2)                                                                           | NO   |     | 0.00    |       |</span><br><span class="line">| IndepYear      | smallint(6)                                                                           | YES  |     | NULL    |       |</span><br><span class="line">| Population     | int(11)                                                                               | NO   |     | 0       |       |</span><br><span class="line">| LifeExpectancy | <span class="built_in">float</span>(3,1)                                                                            | YES  |     | NULL    |       |</span><br><span class="line">| GNP            | <span class="built_in">float</span>(10,2)                                                                           | YES  |     | NULL    |       |</span><br><span class="line">| GNPOld         | <span class="built_in">float</span>(10,2)                                                                           | YES  |     | NULL    |       |</span><br><span class="line">| LocalName      | char(45)                                                                              | NO   |     |         |       |</span><br><span class="line">| GovernmentForm | char(45)                                                                              | NO   |     |         |       |</span><br><span class="line">| HeadOfState    | char(60)                                                                              | YES  |     | NULL    |       |</span><br><span class="line">| Capital        | int(11)                                                                               | YES  |     | NULL    |       |</span><br><span class="line">| Code2          | char(2)                                                                               | NO   |     |         |       |</span><br><span class="line">+----------------+---------------------------------------------------------------------------------------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line">root@localhost:world &gt; desc countrylanguage;</span><br><span class="line">+-------------+---------------+------+-----+---------+-------+</span><br><span class="line">| Field       | Type          | Null | Key | Default | Extra |</span><br><span class="line">+-------------+---------------+------+-----+---------+-------+</span><br><span class="line">| CountryCode | char(3)       | NO   | PRI |         |       |</span><br><span class="line">| Language    | char(30)      | NO   | PRI |         |       |</span><br><span class="line">| IsOfficial  | enum(<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;F&#x27;</span>) | NO   |     | F       |       |</span><br><span class="line">| Percentage  | <span class="built_in">float</span>(4,1)    | NO   |     | 0.0     |       |</span><br><span class="line">+-------------+---------------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#查询世界上小于100人的人口城市是哪个国家的？</span><br><span class="line">找到你要的字段</span><br><span class="line">国家                   城市            城市人口数          </span><br><span class="line">country.name         city.name        city.population</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population</span><br><span class="line">from country,city</span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code</span><br><span class="line">and city.population&lt;100;</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| name     | name      | population |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| Pitcairn | Adamstown |         42 |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#name都是一样的，可以写别名</span></span><br><span class="line"><span class="keyword">select</span> country.name as 国家名,city.name as 城市名,city.population as 城市人口数量</span><br><span class="line">from country,city</span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code</span><br><span class="line">and city.population&lt;100;</span><br><span class="line">+-----------+-----------+--------------------+</span><br><span class="line">| 国家名    | 城市名    | 城市人口数量       |</span><br><span class="line">+-----------+-----------+--------------------+</span><br><span class="line">| Pitcairn  | Adamstown |                 42 |</span><br><span class="line">+-----------+-----------+--------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#查询世界上小于100人的人口城市是哪个国家的说的什么语言？</span><br><span class="line">找到你要的字段</span><br><span class="line">国家               城市         城市人口数         语言 </span><br><span class="line">country.name    city.name     city.population    countrylanguage.language</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population,countrylanguage.language</span><br><span class="line">from city,countrylanguage,country</span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code and country.code=countrylanguage.countrycode</span><br><span class="line">and city.population&lt;100;</span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line">| name     | name      | population | language    |</span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line">| Pitcairn | Adamstown |         42 | Pitcairnese |</span><br><span class="line">+----------+-----------+------------+-------------+</span><br></pre></td></tr></table></figure><p><strong>select 自连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 自连接natural <span class="built_in">join</span>    <span class="comment">#自连接用的少</span></span><br><span class="line"><span class="comment">#自动关联多张表的数据(自动帮我们找到等价条件)字段必须相同</span></span><br><span class="line">root@localhost:aaa &gt; <span class="keyword">select</span> stu.name,mark.mark from stu natural <span class="built_in">join</span> mark <span class="built_in">where</span> stu.name=<span class="string">&#x27;zhang3&#x27;</span>;</span><br><span class="line">+--------+------+</span><br><span class="line">| name   | mark |</span><br><span class="line">+--------+------+</span><br><span class="line">| zhang3 |   90 |</span><br><span class="line">+--------+------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、#查询世界上小于100人的人口城市是哪个国家的？</span><br><span class="line"></span><br><span class="line"><span class="comment">#传统连接查询</span></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population</span><br><span class="line">from country,city</span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code</span><br><span class="line">and city.population&lt;100;</span><br><span class="line"></span><br><span class="line"><span class="comment">#自连接查询  无法实现，等价的条件有，但是字段名不相同</span></span><br><span class="line">找到你要的字段</span><br><span class="line">国家                   城市            城市人口数          </span><br><span class="line">country.name         city.name        city.population</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population</span><br><span class="line">from country natural <span class="built_in">join</span> city</span><br><span class="line"><span class="built_in">where</span> city.population&lt;100;</span><br><span class="line"></span><br><span class="line">2、#查询世界上小于100人的人口城市是哪个国家的说的什么语言？</span><br><span class="line">找到你要的字段</span><br><span class="line">国家               城市         城市人口数         语言 </span><br><span class="line">country.name    city.name     city.population    countrylanguage.language</span><br><span class="line"><span class="comment">#传统连接查询</span></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population,countrylanguage.language</span><br><span class="line">from city,countrylanguage,country</span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code and country.code=countrylanguage.countrycode</span><br><span class="line">and city.population&lt;100;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">city   countrylanguage</span><br><span class="line"><span class="comment">#自连接查询</span></span><br><span class="line"><span class="keyword">select</span>  city.countrycode,city.name,city.population,countrylanguage.language</span><br><span class="line">from city natural <span class="built_in">join</span> countrylanguage</span><br><span class="line"><span class="built_in">where</span> city.population&lt;100;</span><br><span class="line">+-------------+-----------+------------+-------------+</span><br><span class="line">| countrycode | name      | population | language    |</span><br><span class="line">+-------------+-----------+------------+-------------+</span><br><span class="line">| PCN         | Adamstown |         42 | Pitcairnese |</span><br><span class="line">+-------------+-----------+------------+-------------+</span><br></pre></td></tr></table></figure><p><strong>select 内连接（inner join）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">tb1 <span class="built_in">join</span> tb2 on 等价条件 <span class="built_in">where</span></span><br><span class="line">tb1 <span class="built_in">join</span> tb2 on 等价条件 <span class="built_in">join</span> tb3 on 等价条件  <span class="built_in">where</span></span><br><span class="line"></span><br><span class="line">1、#查询世界上小于100人的人口城市是哪个国家的？</span><br><span class="line"></span><br><span class="line"><span class="comment">#传统连接查询</span></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population</span><br><span class="line">from country,city</span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code</span><br><span class="line">and city.population&lt;100;</span><br><span class="line"></span><br><span class="line"><span class="comment">#内连接查询</span></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population</span><br><span class="line">from city <span class="built_in">join</span> country</span><br><span class="line">on city.countrycode=country.code</span><br><span class="line"><span class="built_in">where</span> city.population&lt;100;</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| name     | name      | population |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| Pitcairn | Adamstown |         42 |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">2、#查询世界上小于100人的人口城市是哪个国家的说的什么语言？</span><br><span class="line">找到你要的字段</span><br><span class="line">国家               城市         城市人口数         语言 </span><br><span class="line">country.name    city.name     city.population    countrylanguage.language</span><br><span class="line"></span><br><span class="line"><span class="comment">#传统连接查询</span></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population,countrylanguage.language</span><br><span class="line">from city,countrylanguage,country</span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code and country.code=countrylanguage.countrycode</span><br><span class="line">and city.population&lt;100;</span><br><span class="line"></span><br><span class="line"><span class="comment">#内连接查询</span></span><br><span class="line"><span class="keyword">select</span> country.name,city.name,city.population,countrylanguage.language</span><br><span class="line">from city <span class="built_in">join</span> countrylanguage </span><br><span class="line">on  city.countrycode=countrylanguage.countrycode</span><br><span class="line"><span class="built_in">join</span> country</span><br><span class="line">on country.code=city.countrycode</span><br><span class="line"><span class="built_in">where</span> city.population&lt;100;</span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line">| name     | name      | population | language    |</span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line">| Pitcairn | Adamstown |         42 | Pitcairnese |</span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#为了性能</span></span><br><span class="line"><span class="built_in">join</span> on 内连接查询，必须小表在前，大表在后，内连接的性能比传统连接的性能高</span><br><span class="line">谁的数据量多谁属于大表 <span class="keyword">select</span> * from city</span><br></pre></td></tr></table></figure><p><strong>select 外连接</strong></p><ul><li>左连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">没充钱  看不到数据 就用左 外  右外  </span><br><span class="line">充钱 ，就变成传统连接</span><br><span class="line"><span class="comment">#left outer join       left join</span></span><br><span class="line"><span class="keyword">select</span> city.name,city.countrycode,country.name</span><br><span class="line">from city left <span class="built_in">join</span> country on city.countrycode=country.code and</span><br><span class="line">city.population&lt;100 <span class="built_in">limit</span> 10;</span><br><span class="line">+----------------+-------------+------+</span><br><span class="line">| name           | countrycode | name |</span><br><span class="line">+----------------+-------------+------+</span><br><span class="line">| Kabul          | AFG         | NULL |</span><br><span class="line">| Qandahar       | AFG         | NULL |</span><br><span class="line">| Herat          | AFG         | NULL |</span><br><span class="line">| Mazar-e-Sharif | AFG         | NULL |</span><br><span class="line">| Amsterdam      | NLD         | NULL |</span><br><span class="line">| Rotterdam      | NLD         | NULL |</span><br><span class="line">| Haag           | NLD         | NULL |</span><br><span class="line">| Utrecht        | NLD         | NULL |</span><br><span class="line">| Eindhoven      | NLD         | NULL |</span><br><span class="line">| Tilburg        | NLD         | NULL |</span><br><span class="line">+----------------+-------------+------+</span><br></pre></td></tr></table></figure><ul><li>右连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#right outer join             right join</span></span><br><span class="line"><span class="keyword">select</span> city.name,city.countrycode,country.name</span><br><span class="line">from city right <span class="built_in">join</span> country on city.countrycode=country.code and</span><br><span class="line">city.population&lt;100 <span class="built_in">limit</span> 10;</span><br><span class="line">+------+-------------+----------------------+</span><br><span class="line">| name | countrycode | name                 |</span><br><span class="line">+------+-------------+----------------------+</span><br><span class="line">| NULL | NULL        | Aruba                |</span><br><span class="line">| NULL | NULL        | Afghanistan          |</span><br><span class="line">| NULL | NULL        | Angola               |</span><br><span class="line">| NULL | NULL        | Anguilla             |</span><br><span class="line">| NULL | NULL        | Albania              |</span><br><span class="line">| NULL | NULL        | Andorra              |</span><br><span class="line">| NULL | NULL        | Netherlands Antilles |</span><br><span class="line">| NULL | NULL        | United Arab Emirates |</span><br><span class="line">| NULL | NULL        | Argentina            |</span><br><span class="line">| NULL | NULL        | Armenia              |</span><br><span class="line">+------+-------------+----------------------+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕6、MYSQL的DML、DCL语言</title>
      <link href="/posts/abf1dc60.html"/>
      <url>/posts/abf1dc60.html</url>
      
        <content type="html"><![CDATA[<h2 id="DML-DCL语言">DML. DCL语言</h2><p><strong>DML （Database Modification Language）数据操作语言</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更改密码调用password函数对密码进行加密</span></span><br><span class="line">update mysql.user <span class="built_in">set</span> password=PASSWORD(<span class="string">&#x27;123&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span> and host=<span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">调用函数就是函数名+()</span><br><span class="line"></span><br><span class="line"><span class="comment">#增：inster</span></span><br><span class="line"><span class="comment">#删：delete</span></span><br><span class="line"><span class="comment">#改：update</span></span><br><span class="line"><span class="comment">#查：select</span></span><br></pre></td></tr></table></figure><p>数据的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增：inster</span></span><br><span class="line">库.表   <span class="comment">#不在库里面</span></span><br><span class="line">表      <span class="comment">#在库里面</span></span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; desc stu300;</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| Field     | Type                | Null | Key | Default           | Extra          |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| <span class="built_in">id</span>        | int(11)             | NO   | PRI | NULL              | auto_increment |</span><br><span class="line">| name      | varchar(20)         | NO   |     | NULL              |                |</span><br><span class="line">| age       | tinyint(4) unsigned | NO   |     | NULL              |                |</span><br><span class="line">| gender    | enum(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;f&#x27;</span>)       | NO   |     | m                 |                |</span><br><span class="line">| phone     | char(11)            | NO   | PRI | NULL              |                |</span><br><span class="line">| come_time | datetime            | NO   |     | CURRENT_TIMESTAMP |                |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line"></span><br><span class="line">1、#不规范  往stu300表里面增加数据</span><br><span class="line">root@localhost:student &gt; insert into stu300 values(5,<span class="string">&#x27;ccc&#x27;</span>,23,<span class="string">&#x27;f&#x27;</span>,12312312388,now());   <span class="comment">#就是按照顺序写所有字段，少一个都不行</span></span><br><span class="line"></span><br><span class="line">2、#规范写法  往stu300表里面增加数据</span><br><span class="line">root@localhost:student &gt; insert into stu300(name,age,phone,class) values(<span class="string">&#x27;ddd&#x27;</span>,18,12312312399);       <span class="comment">#你要往哪个字段添加数据，就写上哪个字段</span></span><br><span class="line"></span><br><span class="line">3、#插入多条数据</span><br><span class="line">inster stu2 表名(字段1,字段2,字段3)  values(1，2，3),(1,2,4),(1,3,5);</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; insert into stu300(name,age,phone) values(<span class="string">&#x27;eee&#x27;</span>,27,2312312389),(<span class="string">&#x27;fff&#x27;</span>,27,2313312389),(<span class="string">&#x27;bbb&#x27;</span>,27,3312312389);</span><br><span class="line"></span><br><span class="line">4、#into可以省略</span><br><span class="line">inster 表名(字段1,字段2,字段3)  values(1，2，3); </span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; insert stu300(name,age,phone) values(<span class="string">&#x27;ggg&#x27;</span>,21,2333312389);</span><br><span class="line"></span><br><span class="line">手机号位数不对，都是前端打印的，数据库做不到手机号位数不对报错 jwt匹配库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###删：delete + where</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from stu300;                               </span><br><span class="line">+----+------+-----+--------+-------------+---------------------+</span><br><span class="line">| <span class="built_in">id</span> | name | age | gender | phone       | come_time           |</span><br><span class="line">+----+------+-----+--------+-------------+---------------------+</span><br><span class="line">|  1 | aaa  |  13 | m      | 12345465666 | 2024-08-12 21:20:05 |</span><br><span class="line">|  3 | cc   |  12 | m      | 23456781234 | 2024-08-12 21:22:25 |</span><br><span class="line">|  5 | ccc  |  23 | f      | 12312312388 | 2024-08-13 14:08:27 |</span><br><span class="line">|  6 | ddd  |  18 | m      | 12312312399 | 2024-08-13 14:10:08 |</span><br><span class="line">|  7 | eee  |  27 | m      | 2312312389  | 2024-08-13 14:12:43 |</span><br><span class="line">|  8 | fff  |  27 | m      | 2313312389  | 2024-08-13 14:12:43 |</span><br><span class="line">|  9 | bbb  |  27 | m      | 3312312389  | 2024-08-13 14:12:43 |</span><br><span class="line">| 10 | ggg  |  21 | m      | 2333312389  | 2024-08-13 14:15:08 |</span><br><span class="line">+----+------+-----+--------+-------------+---------------------+</span><br><span class="line"></span><br><span class="line">dellete删除必须接条件  打完delete 就要打<span class="built_in">where</span></span><br><span class="line">delete from 表 <span class="built_in">where</span> <span class="built_in">id</span>=5 </span><br><span class="line">1、#不规范的写法,谨慎使用，会删除表里面的全部数据</span><br><span class="line">delete from stu300;</span><br><span class="line"></span><br><span class="line">2、#规范写法  PRIMARY KEY (`Host`,`User`) 联合主键，就要2个组件一起删除</span><br><span class="line">root@localhost:student &gt; delete from stu300 <span class="built_in">where</span> <span class="built_in">id</span>=8;</span><br><span class="line"></span><br><span class="line">3、#多条件 and  </span><br><span class="line">root@localhost:student &gt; delete from stu300 <span class="built_in">where</span> <span class="built_in">id</span>=10 and name=<span class="string">&#x27;ggg&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4、#为了养成一个好习惯delete + <span class="built_in">where</span>，若要清除全部数据，表名不清除</span><br><span class="line">root@localhost:student &gt;delete form stu1 <span class="built_in">where</span> 1=1;  <span class="comment">#接一个永远成立的条件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#改：update + where</span></span><br><span class="line">1、#不规范写法  如果不加<span class="built_in">where</span> 所有的name都叫一样的名字</span><br><span class="line">update stu300 <span class="built_in">set</span> name=<span class="string">&#x27;lisi&#x27;</span> </span><br><span class="line"></span><br><span class="line">2、#将<span class="built_in">id</span>为1的用户改名为张三</span><br><span class="line">root@localhost:student &gt; update stu300 <span class="built_in">set</span> name=<span class="string">&#x27;zhangsan&#x27;</span> <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line"></span><br><span class="line">3、#将<span class="built_in">id</span>是7，和9 的用户名字改为李四</span><br><span class="line">root@localhost:student &gt; update stu300 <span class="built_in">set</span> name=<span class="string">&#x27;lisi&#x27;</span> <span class="built_in">where</span> <span class="built_in">id</span>=7 or <span class="built_in">id</span>=9;</span><br><span class="line"></span><br><span class="line">4、#要全部改，后面接一个成立的条件</span><br><span class="line">update stu300 <span class="built_in">set</span> name=<span class="string">&#x27;zhang3&#x27;</span> <span class="built_in">where</span> 1=1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查：select</span></span><br><span class="line"><span class="keyword">select</span> * from stu300;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * from stu300 <span class="built_in">where</span> status=<span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>使用update代替delete代替伪删除</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1、#需要添加一个状态列(添加一个表示状态的字段)</span><br><span class="line">root@localhost:student &gt; alter table stu300 add status enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>) not null default <span class="string">&#x27;0&#x27;</span> comment <span class="string">&#x27;皮肤购买状态,0代表未购买，1代表已购买&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#大家都花钱了 买了</span><br><span class="line">root@localhost:student &gt; update stu300 <span class="built_in">set</span> status=<span class="string">&#x27;1&#x27;</span> <span class="built_in">where</span> 1=1;</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from stu300;</span><br><span class="line">+---+----------+-----+--------+-------------+---------------------+--------+</span><br><span class="line">| <span class="built_in">id</span>| name     | age | gender | phone       | come_time           | status |</span><br><span class="line">+---+----------+-----+--------+-------------+---------------------+--------+</span><br><span class="line">|  1| zhangsan |  13 | m      | 12345465666 | 2024-08-12 21:20:05 | 1      |</span><br><span class="line">|  3| cc       |  12 | m      | 23456781234 | 2024-08-12 21:22:25 | 1      |</span><br><span class="line">|  5| ccc      |  23 | f      | 12312312388 | 2024-08-13 14:08:27 | 1      |</span><br><span class="line">|  6| ddd      |  18 | m      | 12312312399 | 2024-08-13 14:10:08 | 1      |</span><br><span class="line">|  7| lisi     |  27 | m      | 2312312389  | 2024-08-13 14:12:43 | 1      |</span><br><span class="line">|  9| lisi     |  27 | m      | 3312312389  | 2024-08-13 14:12:43 | 1      |</span><br><span class="line">+---+----------+-----+--------+-------------+---------------------+--------+</span><br><span class="line"></span><br><span class="line">3、#使用update代替delete   张三买的皮肤赠送给别人了 </span><br><span class="line">root@localhost:student &gt; update stu300 <span class="built_in">set</span> status=<span class="string">&#x27;0&#x27;</span> <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line"></span><br><span class="line">4、#查询的时候接上条件</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from stu300 <span class="built_in">where</span> status=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">+----+------+-----+--------+-------------+---------------------+--------+</span><br><span class="line">| <span class="built_in">id</span> | name | age | gender | phone       | come_time           | status |</span><br><span class="line">+----+------+-----+--------+-------------+---------------------+--------+</span><br><span class="line">|  3 | cc   |  12 | m      | 23456781234 | 2024-08-12 21:22:25 | 1      |</span><br><span class="line">|  5 | ccc  |  23 | f      | 12312312388 | 2024-08-13 14:08:27 | 1      |</span><br><span class="line">|  6 | ddd  |  18 | m      | 12312312399 | 2024-08-13 14:10:08 | 1      |</span><br><span class="line">|  7 | lisi |  27 | m      | 2312312389  | 2024-08-13 14:12:43 | 1      |</span><br><span class="line">|  9 | lisi |  27 | m      | 3312312389  | 2024-08-13 14:12:43 | 1      |</span><br><span class="line">+----+------+-----+--------+-------------+---------------------+--------+</span><br><span class="line"></span><br><span class="line">当前端拿到status是0的时候就是没有皮肤，前端怎么写是前端的事，update并没有删除，只是接了条件状态筛选了，如果真有客户要求恢复，把状态页修改一下就可以，数据并没有真正的删除，这样的效率比较高</span><br><span class="line"></span><br><span class="line"><span class="comment">#selete * 不接条件所有数据都还在</span></span><br></pre></td></tr></table></figure><p><strong>DCL(Databases Control Language)数据控制语言</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">1、#给开发授权</span><br><span class="line">root@localhost:student &gt; grant insert,update,<span class="keyword">select</span> on student.* to dev@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">2、#with grant option赋予用户grant权限，一般超级用户可以给他</span><br><span class="line">root@localhost:student &gt; grant all  on  *.* to leader@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with grant option;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#revote 回收权限  <span class="comment">#企业中很少用</span></span><br><span class="line">查看dev雅虎的权限</span><br><span class="line">root@localhost:student &gt; show grants <span class="keyword">for</span> dev@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> dev@%                                                                                   |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">| GRANT USAGE ON *.* TO <span class="string">&#x27;dev&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY PASSWORD <span class="string">&#x27;*23AE809DDACAF96AF0FD78ED04B6A265E05AA257&#x27;</span> |</span><br><span class="line">| GRANT SELECT, INSERT, UPDATE ON `student`.* TO <span class="string">&#x27;dev&#x27;</span>@<span class="string">&#x27;%&#x27;</span>                                           |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line"> </span><br><span class="line">4、#回收dev用户的<span class="keyword">select</span>权限</span><br><span class="line">root@localhost:student &gt; revoke <span class="keyword">select</span> on student.* from dev@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">5、#再次查看权限</span><br><span class="line">root@localhost:student &gt; show grants <span class="keyword">for</span> dev@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> dev@%                                                                                   |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line">| GRANT USAGE ON *.* TO <span class="string">&#x27;dev&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY PASSWORD <span class="string">&#x27;*23AE809DDACAF96AF0FD78ED04B6A265E05AA257&#x27;</span> |</span><br><span class="line">| GRANT INSERT, UPDATE ON `student`.* TO <span class="string">&#x27;dev&#x27;</span>@<span class="string">&#x27;%&#x27;</span>                                                   |</span><br><span class="line">+----------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#其他参数（扩展）</span></span><br><span class="line">max_queries_per_hour：一个用户每小时可发出的查询数量</span><br><span class="line">max_updates_per_hour：一个用户每小时可发出的更新数量</span><br><span class="line">max_connections_per_hour：一个用户每小时可连接到服务器的次数</span><br><span class="line">max_user_connections：允许同时连接数量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1h执行一次查询语句  连接数据库的时候会进行一次查询</span><br><span class="line">5、# max_queries_per_hour：一个用户每小时可发出的查询数量</span><br><span class="line">grant insert,update,<span class="keyword">select</span> on dev.* to dev3@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with</span><br><span class="line">max_queries_per_hour 3;</span><br><span class="line"></span><br><span class="line">6、# max_updates_per_hour：一个用户每小时可发出的更新数量，update先查询在修改</span><br><span class="line">grant insert,update,<span class="keyword">select</span> on dev.* to dev4@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with</span><br><span class="line">max_queries_per_hour 3 max_updates_per_hour 1;</span><br><span class="line"></span><br><span class="line">7、# max_connections_per_hour：一个用户每小时可连接到服务器的次数</span><br><span class="line">grant insert,update,<span class="keyword">select</span></span><br><span class="line">on dev.*</span><br><span class="line">to dev5@<span class="string">&#x27;%&#x27;</span></span><br><span class="line">identified by <span class="string">&#x27;123&#x27;</span></span><br><span class="line">with max_queries_per_hour 3</span><br><span class="line">max_updates_per_hour 1</span><br><span class="line">max_connections_per_hour 1;</span><br><span class="line"></span><br><span class="line">8、# max_user_connections：允许同时连接数量</span><br><span class="line">grant insert,update,<span class="keyword">select</span></span><br><span class="line">on dev.*</span><br><span class="line">to dev6@<span class="string">&#x27;%&#x27;</span></span><br><span class="line">identified by <span class="string">&#x27;123&#x27;</span></span><br><span class="line">with max_user_connections 1;</span><br></pre></td></tr></table></figure><p><strong>DQL （Database Query Language）数据查询语言</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、下载数据并导入数据库</span><br><span class="line">[root@db01 ~]# wget http://test.driverzeng.com/MySQL_File/world.sql</span><br><span class="line">[root@db01 ~]# mysql -uroot -p123 &lt; /root/world.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看有几张表，几个库，每个表的结构 字段是什么意思</span></span><br><span class="line">库：world</span><br><span class="line">root@localhost:world &gt; show tables from world;</span><br><span class="line">+-----------------+</span><br><span class="line">| Tables_in_world |</span><br><span class="line">+-----------------+</span><br><span class="line">| city            |</span><br><span class="line">| country         |</span><br><span class="line">| countrylanguage |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure><p><strong>DQL的基础用法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#show</span></span><br><span class="line">1、#查看所有库</span><br><span class="line">root@localhost:student &gt; show databases;</span><br><span class="line"></span><br><span class="line">2、#查看当前库下的所有表</span><br><span class="line">root@localhost:student &gt; show tables;</span><br><span class="line">root@localhost:student &gt; show tables from student;</span><br><span class="line"></span><br><span class="line">3、#查看建库语句</span><br><span class="line">root@localhost:student &gt; show create database student;</span><br><span class="line"></span><br><span class="line">4、#查看建表语句</span><br><span class="line">root@localhost:student &gt; show create table stu300;</span><br><span class="line"></span><br><span class="line">5、#查看创建用户的语句</span><br><span class="line">root@localhost:student &gt; show grants <span class="keyword">for</span> dev@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">6、#查看MYSQL自带的存储引擎</span><br><span class="line">root@localhost:student &gt; show engines;</span><br><span class="line"></span><br><span class="line">7、#字符集</span><br><span class="line">root@localhost:student &gt; show variables like <span class="string">&#x27;%char%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">8、#查看字符集支持的校验规则</span><br><span class="line">root@localhost:student &gt; show collation;</span><br><span class="line"></span><br><span class="line">9、#查看sql语句执行状态，拿这个命令查看哪条sql语句执行的慢</span><br><span class="line">root@localhost:student &gt; show processlist;</span><br><span class="line">root@localhost:student &gt; show full processlist;</span><br><span class="line">SHOW FULL PROCESSLIST是SHOW PROCESSLIST的一个扩展，它提供了更多信息</span><br><span class="line"></span><br><span class="line">10、#查看mysql内置所有的变量</span><br><span class="line">root@localhost:student &gt; show variables;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###desc </span></span><br><span class="line">1、#查看表结构</span><br><span class="line">root@localhost:student &gt; desc stu1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#desc可以做分析，分析语句，慢查询语句</span></span><br><span class="line">desc <span class="keyword">select</span> * from stu1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">表结构：建表的要求</span><br><span class="line">表空间：就是在表里面存储的数据</span><br></pre></td></tr></table></figure><p>select查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#select（比较难）</span></span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; use world;</span><br><span class="line"></span><br><span class="line">1、#全表扫描</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city;  <span class="comment">#这个语句不要出现，就好比一个cat一个大文件，会占用内存</span></span><br><span class="line"></span><br><span class="line">2、#全表扫描，接条件</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> <span class="built_in">id</span>=10;</span><br><span class="line"></span><br><span class="line">3、#多条件查询 or 中国和美国的</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> CountryCode=<span class="string">&#x27;CHN&#x27;</span> or CountryCode=<span class="string">&#x27;USA&#x27;</span>;</span><br><span class="line"></span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> CountryCode=<span class="string">&#x27;and&#x27;</span> or CountryCode=<span class="string">&#x27;afg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#成员查询</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> CountryCode <span class="keyword">in</span> (<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;USA&#x27;</span>);</span><br><span class="line"><span class="comment">#多条件和成员查询效率一样的</span></span><br><span class="line"></span><br><span class="line">5、#联合查询     效率最高 联合查询，他扫描表的方式是：...</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> CountryCode=<span class="string">&#x27;CHN&#x27;</span> union all <span class="keyword">select</span> * from city <span class="built_in">where</span> CountryCode=<span class="string">&#x27;USA&#x27;</span>;</span><br><span class="line"></span><br><span class="line">6、#范围查询 &gt;、&lt;、=、!=、&gt;=、&lt;=</span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> <span class="built_in">id</span>&lt;10;</span><br><span class="line"></span><br><span class="line">7、#模糊查询</span><br><span class="line">sroot@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> CountryCode like <span class="string">&#x27;%H%&#x27;</span>; <span class="comment">#只要带H的就可以，不管H在前面还是后面，%不占位</span></span><br><span class="line"><span class="string">&#x27;%H&#x27;</span>  结尾</span><br><span class="line"><span class="string">&#x27;H%&#x27;</span>  H开头</span><br><span class="line"></span><br><span class="line">8、#排序查询  order by</span><br><span class="line"><span class="comment">#查询CountryCode带H的，按人口数量排序  默认正序</span></span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> countrycode like <span class="string">&#x27;%H%&#x27;</span> order by Population;</span><br><span class="line"><span class="comment">#倒序</span></span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">where</span> countrycode like <span class="string">&#x27;%H%&#x27;</span> orfer by Population desc;</span><br><span class="line"></span><br><span class="line">以class降序查询Student表的所有记录。</span><br><span class="line"><span class="keyword">select</span> * from stu1 order by class desc;</span><br><span class="line"></span><br><span class="line">以sno升序、mark降序查询Score表的所有记录</span><br><span class="line"><span class="keyword">select</span> * from score order by sno,mark desc;</span><br><span class="line"></span><br><span class="line">9、#分页查询</span><br><span class="line">京东  一页商品60个，如果把所有商品加载出来，肯定不行，所以京东展示商品的时候是使用了分页查询</span><br><span class="line"><span class="keyword">select</span> * from city <span class="built_in">limit</span> 60,60 ;  </span><br><span class="line"><span class="keyword">select</span> * from city <span class="built_in">limit</span> 120,60;</span><br><span class="line"><span class="keyword">select</span> * from city <span class="built_in">limit</span> 180,60;</span><br><span class="line">写变量自增60，所以一页商品显示60个</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看前10个数据</span></span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">limit</span> 10; 查看前10个数据  20 就是查看20个</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@localhost:world &gt; <span class="keyword">select</span> * from city <span class="built_in">limit</span> 1;</span><br><span class="line">+----+-------+-------------+----------+------------+</span><br><span class="line">| ID | Name  | CountryCode | District | Population |</span><br><span class="line">+----+-------+-------------+----------+------------+</span><br><span class="line">|  1 | 城市名 | 国家代码     | 省       |    总人口数 |</span><br><span class="line">+----+-------+-------------+----------+------------+</span><br><span class="line"><span class="comment">#分组查询 group by  先了解函数</span></span><br><span class="line">MySQL自带的函数：</span><br><span class="line">password()</span><br><span class="line">now()</span><br><span class="line">distinct()</span><br><span class="line"><span class="comment">#group by + 聚合函数   聚合函数种类：</span></span><br><span class="line">max()：最大值</span><br><span class="line">min()：最小值</span><br><span class="line">avg()：平均值</span><br><span class="line"><span class="built_in">sum</span>()：求和</span><br><span class="line">count()：统计有几行数据</span><br><span class="line"><span class="comment">#口诀</span></span><br><span class="line">1、遇到统计想函数</span><br><span class="line">2、形容词前group by</span><br><span class="line">3、函数中央是名词</span><br><span class="line">4、列名<span class="keyword">select</span>后添加</span><br><span class="line"></span><br><span class="line">10、#统计世界上每个国家的总人口数据</span><br><span class="line">分析：我要的是国家、人口数 这两个字段</span><br><span class="line">1、遇到统计想函数        <span class="built_in">sum</span>()</span><br><span class="line">2、形容词前group by     <span class="string">&#x27;国家的&#x27;</span>是形容词 ..的  ..的   group by CountryCode</span><br><span class="line">3、函数中央是名词        <span class="built_in">sum</span>(Population)  形容词后面是名词，所以名词就是<span class="string">&quot;总人口数&quot;</span></span><br><span class="line">4、列名<span class="keyword">select</span>后添加     国家、人口数 这两个字段：<span class="keyword">select</span> CountryCode Population</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> CountryCode,<span class="built_in">sum</span>(Population) from city group by CountryCode;</span><br><span class="line"></span><br><span class="line">11、#统计中国各个省的人口数量</span><br><span class="line">分析：我要的是国家、省、人口数 这3个字段</span><br><span class="line">1、遇到统计想函数       <span class="built_in">sum</span>()</span><br><span class="line">2、形容词前group by    group by District</span><br><span class="line">3、函数中央是名词       <span class="built_in">sum</span>(Population)</span><br><span class="line">4、列名<span class="keyword">select</span>后添加    <span class="keyword">select</span> CountryCode District <span class="built_in">sum</span>(Population)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> CountryCode,District,<span class="built_in">sum</span>(Population) from city <span class="built_in">where</span> CountryCode=<span class="string">&#x27;CHN&#x27;</span> group by District;</span><br><span class="line"></span><br><span class="line">12、#统计每个国家的城市数量  </span><br><span class="line">1、遇到统计想函数        count()</span><br><span class="line">2、形容词前group by     group by CountryCode</span><br><span class="line">3、函数中央是名词        count(Name)</span><br><span class="line">4、列名<span class="keyword">select</span>后添加     <span class="keyword">select</span> CountryCode,count(Name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> CountryCode,count(Name) from city group by CountryCode order by count(Name);</span><br><span class="line"></span><br><span class="line">13、#统每个国家的每个省的城市数量(练习)</span><br><span class="line">1、遇到统计想函数         count()</span><br><span class="line">2、形容词前group by      group by CountryCode,District 形容词国家的,省的</span><br><span class="line">3、函数中央是名词         count(Name)</span><br><span class="line">4、列名<span class="keyword">select</span>后添加</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> CountryCode,District,count(Name) from city group by CountryCode,District order by count(Name);</span><br><span class="line"></span><br><span class="line">14、#统中国的每个省的城市数量(练习)</span><br><span class="line">1、遇到统计想函数         count()</span><br><span class="line">2、形容词前group by      group by CountryCode,District 形容词中国的,省的</span><br><span class="line">3、函数中央是名词         count(Name)</span><br><span class="line">4、列名<span class="keyword">select</span>后添加       </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> CountryCode,District,count(Name) from city <span class="built_in">where</span> CountryCode=<span class="string">&#x27;CHN&#x27;</span> group by CountryCode,District  order by count(Name);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕5、MYSQL的DDL语句</title>
      <link href="/posts/d6548714.html"/>
      <url>/posts/d6548714.html</url>
      
        <content type="html"><![CDATA[<h3 id="MYSQL的DDL语句">MYSQL的DDL语句</h3><p><strong>mysql的配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作用：影响服务端的启动    [server]标签</span><br><span class="line">     影响客户端的连接    [client]标签</span><br></pre></td></tr></table></figure><p><strong>mysql客户端命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mysql连接进来，一些简化的操作：</span></span><br><span class="line">?:查看帮助</span><br><span class="line">\q：quit <span class="built_in">exit</span>  退出</span><br><span class="line">\c：终止命令，MySQL5.7 Ctrl + c</span><br><span class="line">\G：格式化输出</span><br><span class="line">\s：查看mysql的状态 </span><br><span class="line">\.：<span class="built_in">source</span> 导入数据</span><br><span class="line">\!：system+系统命令 </span><br><span class="line">mysql&gt; system <span class="built_in">ls</span> /</span><br><span class="line">app  boot  dev  home  lib64  mnt  proc  run   srv  tmp  var</span><br><span class="line">bin  data  etc  lib   media  opt  root  sbin  sys  usr</span><br><span class="line">mysql&gt; \! vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">恢复步骤</span><br><span class="line">1、mysql&gt; <span class="built_in">set</span> sql_log_bin=0  关闭二进制日志的记录</span><br><span class="line">2、mysql&gt; <span class="built_in">source</span> 数据的路径</span><br><span class="line">          <span class="built_in">source</span> /tmp/mysql.sql</span><br></pre></td></tr></table></figure><p><strong>mysqladmin客户端命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">1、#检查mysql是否存活</span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 ping</span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">mysqld is alive   <span class="comment">#存活的状态</span></span><br><span class="line"></span><br><span class="line">停止mysql</span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 ping</span><br><span class="line">mysqladmin: connect to server at <span class="string">&#x27;localhost&#x27;</span> failed</span><br><span class="line">error: <span class="string">&#x27;Can&#x27;</span>t connect to <span class="built_in">local</span> MySQL server through socket <span class="string">&#x27;/app/mysql-5.6.50/tmp/mysql.sock&#x27;</span> (2)<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Check that mysqld is running and that the socket: &#x27;</span>/app/mysql-5.6.50/tmp/mysql.sock<span class="string">&#x27; exists!  #服务端停止的状态，就是找不到sock文件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2、#Zabbix监控mysql是否存活，可以写脚本</span></span><br><span class="line"><span class="string">[root@db01 ~]# vim check_db.sh</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">db_user=root</span></span><br><span class="line"><span class="string">db_pass=123</span></span><br><span class="line"><span class="string">mysqladmin -u$&#123;db_user&#125; -p$&#123;db_pass&#125;  ping &amp;&gt; /dev/null</span></span><br><span class="line"><span class="string">if [ $? -nq 0 ];then</span></span><br><span class="line"><span class="string">    #不=0，就是不存活，就echo 0，0代表不存活</span></span><br><span class="line"><span class="string">    echo 0</span></span><br><span class="line"><span class="string"> else</span></span><br><span class="line"><span class="string">    echo 1</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">测试：</span></span><br><span class="line"><span class="string">[root@db01 ~]# /etc/init.d/mysqld stop</span></span><br><span class="line"><span class="string">Shutting down MySQL... SUCCESS! </span></span><br><span class="line"><span class="string">[root@db01 ~]# sh check_db.sh</span></span><br><span class="line"><span class="string">0  #不存活0个进程</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@db01 ~]# /etc/init.d/mysqld start</span></span><br><span class="line"><span class="string">Starting MySQL. SUCCESS! </span></span><br><span class="line"><span class="string">[root@db01 ~]# sh check_db.sh</span></span><br><span class="line"><span class="string">1  #存活</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3、#停止mysql服务</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123 shutdown</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4、#查看mysql默认的配置(内置变量)</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123 variables</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5、#刷新mysq的bin_log日志</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123 flush-log</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; show master status;</span></span><br><span class="line"><span class="string">+------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="string">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span></span><br><span class="line"><span class="string">+------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="string">| mysql-bin.000004 |      120 |              |                  |                   |</span></span><br><span class="line"><span class="string">+------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="string">1 row in set (0.01 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; system mysqladmin -uroot -p123 flush-log; #刷新日志</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; show master status;</span></span><br><span class="line"><span class="string">+------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="string">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span></span><br><span class="line"><span class="string">+------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="string">| mysql-bin.000005 |      120 |              |                  |                   |</span></span><br><span class="line"><span class="string">+------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="string">#刷新之后，变成 mysql-bin.000005</span></span><br><span class="line"><span class="string">如果不刷新，运行10年的日志就在一个log里面，日志太大</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">6、#查看mysql的状态</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123 status</span></span><br><span class="line"><span class="string">Uptime: 215  Threads: 3  Questions: 31  Slow queries: 0  Opens: 70  Flush tables: 1  Open tables: 63  Queries per second avg: 0.144</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">7、#在库外创建库和删除库  这个命令没啥用，如果真想在库外创建或者删除，可以用 mysql -e</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123 create aa1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@db01 ~]# mysql -uroot -p123 -e &quot;show databases;&quot;</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| Database           |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| information_schema |</span></span><br><span class="line"><span class="string">| aa1                |#创建成功</span></span><br><span class="line"><span class="string">| db3306             |</span></span><br><span class="line"><span class="string">| mysql              |</span></span><br><span class="line"><span class="string">| performance_schema |</span></span><br><span class="line"><span class="string">| test               |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#在库外删库</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123 drop aa1</span></span><br><span class="line"><span class="string">Do you really want to drop the &#x27;</span>aa1<span class="string">&#x27; database [y/N] y  #输入y</span></span><br><span class="line"><span class="string">Database &quot;aa1&quot; dropped</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@db01 ~]# mysql -uroot -p123 -e &quot;show databases;&quot;</span></span><br><span class="line"><span class="string">Warning: Using a password on the command line interface can be insecure.</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| Database           |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| information_schema |</span></span><br><span class="line"><span class="string">| db3306             |</span></span><br><span class="line"><span class="string">| mysql              |</span></span><br><span class="line"><span class="string">| performance_schema |</span></span><br><span class="line"><span class="string">| test               |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">#aa1表被删除</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">8、#重新加载数据库(刷新授权表)</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123  reload</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">9、#修改密码</span></span><br><span class="line"><span class="string">[root@db01 ~]# mysqladmin -uroot -p123  password &#x27;</span>1234<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>MYSQL结构化查询</strong></p><p>开发规范：</p><ol><li>库、表名不能大写,数字开头,16个字符串</li><li>表名和业务有关</li><li>drop 语句禁止</li><li>选择合适的数据类型</li><li>必须要有主键</li><li>列尽量非空约束</li><li>减少外键约束</li><li>必须设置存储引擎和字符集</li><li>列必须要有注释</li><li>对于非负数设置数据类型约束–无符号</li></ol><p><strong>SQL语言的类型</strong></p><p>DDL：(Databases Definition Language)数据定义语言</p><p>DML：(Data Manipulation Language) 数据操作语言</p><p>DCL：DCL(Data Control Language) 数据控制语言</p><p>DQL(最难)：(Database Query Language)数据查询语言</p><p>DTL ：(Transaction Control Language) 事务控制语言  存储引擎的·，操作事物的语句</p><p><strong>DDL：(Databases Definition Language)数据定义语言</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">一、DDL(Data Define Language) 数据定义语言</span><br><span class="line">包括 CREATE、DROP、ALTER 等对数据库数据结构进行操作的语言</span><br><span class="line"></span><br><span class="line">二、DML(Data Manipulation Language) 数据操作语言</span><br><span class="line">包括 INSERT、DELETE、UPDATE 等对数据库数据进行操作的语言</span><br><span class="line"></span><br><span class="line">三、DQL(Data Query Language) 数据查询语言</span><br><span class="line">使用 SELECT 对数据进行查询的语言</span><br><span class="line"></span><br><span class="line">四、DCL(Data Control Language) 数据控制语言</span><br><span class="line">包括 GRANT、REVOKE 数据库权限设置语言</span><br><span class="line"></span><br><span class="line">五、TCL(Transaction Control Language) 事务控制语言</span><br><span class="line">包括 COMMIT、ROLLBACK、SAVEPOINT 等对数据库事务进行操作的语言</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">接收用户的SQL语句</span><br><span class="line">1.什么是SQL</span><br><span class="line">结构化的查询语句</span><br><span class="line"></span><br><span class="line">2.SQL的种类</span><br><span class="line">DDL：数据定义语言</span><br><span class="line"></span><br><span class="line">库对象：库名字、库属性</span><br><span class="line">开发规范：库名小写</span><br><span class="line"></span><br><span class="line">创建库：create database|schema   库名不能大写,因为mysql的物理结构是：最底层的数据文件</span><br><span class="line"></span><br><span class="line"><span class="comment">#mysql客户端显示所在路径(所在库)</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">...</span><br><span class="line">lower_case_table=1  <span class="comment">#忽略大小写</span></span><br><span class="line"><span class="comment">#显示所在路径在客户端标签中添加</span></span><br><span class="line">[client]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d \\r:\\m:\\s&gt; &quot;</span>     <span class="comment">#\\r:\\m:\\s这个是显示时间，不想要可以删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试：显示所在表，当前用户，主机域</span></span><br><span class="line">[root@db01 ~]# mysql -uroot -p123</span><br><span class="line">root@localhost:(none) 01:45:01&gt; use mysql;</span><br><span class="line">root@localhost:mysql 01:45:24&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# mysql -urep -p123</span><br><span class="line">rep@localhost:(none) 01:47:41&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1、库的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###############增：create</span></span><br><span class="line">root@localhost:(none) &gt; <span class="built_in">help</span> create database;</span><br><span class="line"><span class="comment">#语法 Syntax:</span></span><br><span class="line">CREATE &#123;DATABASE | SCHEMA&#125; [IF NOT EXISTS] db_name</span><br><span class="line">create database 库名字;</span><br><span class="line">create schema 库名字;</span><br><span class="line"><span class="comment">#创建的选项</span></span><br><span class="line">create_option: [DEFAULT] &#123;</span><br><span class="line">    CHARACTER SET [=] charset_name <span class="comment">#指定字符集</span></span><br><span class="line">  | COLLATE [=] collation_name   <span class="comment">#指定字符集的校验规则</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">1、创建数据库</span><br><span class="line">root@localhost:(none) &gt; create database aaa;</span><br><span class="line"></span><br><span class="line">2、如果aaa库存在，就不创建，而且不报错</span><br><span class="line">root@localhost:(none) &gt; create database <span class="keyword">if</span> not exists aaa;</span><br><span class="line"></span><br><span class="line">3、创建库的时候添加字符集</span><br><span class="line">root@localhost:(none) &gt; create database bbb character utf8;</span><br><span class="line">查看字符集</span><br><span class="line">root@localhost:(none) &gt; show create database bbb;</span><br><span class="line">+----------+--------------------------------------------------------------+</span><br><span class="line">| Database | Create Database                                              |</span><br><span class="line">+----------+--------------------------------------------------------------+</span><br><span class="line">| bbb      | CREATE DATABASE `bbb` /*!40100 DEFAULT CHARACTER SET utf8 */ |</span><br><span class="line">+----------+--------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">4、二进制安装的默认字符集是latin</span><br><span class="line">mysql&gt; show create database <span class="built_in">test</span>;</span><br><span class="line">+---------+---------------------------------------------------------------+</span><br><span class="line">| Database| Create Database                                                 </span><br><span class="line">+---------+---------------------------------------------------------------+</span><br><span class="line">| <span class="built_in">test</span>    |CREATE DATABASE `<span class="built_in">test</span>` /*!40100 DEFAULT CHARACTER SET latin1 */|</span><br><span class="line">+---------+---------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">5、#如果要修改默认的字符集，就要修改配置文件</span><br><span class="line">查看全部字符集</span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%char%&#x27;</span>;</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line">| Variable_name            | Value                             |</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line">| character_set_client     | utf8                              |</span><br><span class="line">| character_set_connection | utf8                              |</span><br><span class="line">| character_set_database   | latin1                            |</span><br><span class="line">| character_set_filesystem | binary                            |</span><br><span class="line">| character_set_results    | utf8                              |</span><br><span class="line">| character_set_server     | latin1                            |</span><br><span class="line">| character_set_system     | utf8                              |</span><br><span class="line">| character_sets_dir       | /app/mysql-5.6.50/share/charsets/ |</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line"><span class="comment">#修改字符集</span></span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">....</span><br><span class="line">character_set_server=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改之后重启mysql</span></span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# mysql </span><br><span class="line">mysql&gt; create database b1;</span><br><span class="line">mysql&gt; show create database b1;</span><br><span class="line">+----------+-------------------------------------------------------------+</span><br><span class="line">| Database | Create Database                                             |</span><br><span class="line">+----------+-------------------------------------------------------------+</span><br><span class="line">| b1       | CREATE DATABASE `b1` /*!40100 DEFAULT CHARACTER SET utf8 */ |</span><br><span class="line">+----------+-------------------------------------------------------------+</span><br><span class="line">现在创建库默认就是utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看字符集的校验规则</span></span><br><span class="line">root@localhost:(none) &gt; show  collation;</span><br><span class="line"></span><br><span class="line">6、创建库的时候指定校验规则和字符集</span><br><span class="line">root@localhost:(none) &gt; create database [<span class="keyword">if</span> not exists] zls123 charset utf8 collate utf8_general_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">#################删：drop</span></span><br><span class="line">root@localhost:(none) &gt; drop database bbb;</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果存在，就删除</span></span><br><span class="line">root@localhost:(none) &gt; drop database <span class="keyword">if</span> exists bbb;</span><br><span class="line"></span><br><span class="line"><span class="comment">#############改:alter</span></span><br><span class="line">库名字不能改，一般都是改库的字符集、校验规则</span><br><span class="line">1、更改库的字符集</span><br><span class="line">root@localhost:(none) &gt; alter database aaa charset latin5;</span><br><span class="line"></span><br><span class="line">2、更改库校验规则，一般和字符集一起改</span><br><span class="line">root@localhost:(none) &gt; alter database aaa charset utf8 collate utf8_bin;</span><br><span class="line"></span><br><span class="line"><span class="comment">###############查(DQL)</span></span><br><span class="line">1、查看数据库</span><br><span class="line">root@localhost:(none) &gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| aaa                |</span><br><span class="line">| bbb                |</span><br><span class="line">| db3306             |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p>2、表的操作</p><p>数据类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数字类型</span></span><br><span class="line">init :   整型      -2^31~2^31   -2147483648 ~ 2147483647</span><br><span class="line">tinyint: 最小整型  -128~127    一般用来存<span class="string">&quot;年龄&quot;</span> 无符号：0-255</span><br><span class="line"><span class="built_in">float</span>：  浮点数  单精度</span><br><span class="line">double： 浮点数 双精度</span><br><span class="line"></span><br><span class="line"><span class="comment">#字符串类型</span></span><br><span class="line">char:定长字符串         char(3)  张三，存2个也是占3个字符 这个一般用来存<span class="string">&quot;手机号&quot;</span>，<span class="string">&quot;身份证号&quot;</span>char(18)</span><br><span class="line">varchar：变长字符串     varchar(3) 最长存3个，一般用来存名字</span><br><span class="line">enum：枚举              enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>)  enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>) 一般用来选择</span><br><span class="line">一个中文占3个字节</span><br><span class="line"></span><br><span class="line"><span class="comment">#时间类型</span></span><br><span class="line">timestamp:时间戳类型，类型的值范围从1970-01-01 00:00:01 UTC到 2038-01-19 03:14:07UTC <span class="comment">#一般不用这种时间类型</span></span><br><span class="line">datetime:时间  类型的值范围从1000-01-01 00:00:00到 9999-12-31 23:59:59</span><br><span class="line"></span><br><span class="line"><span class="comment">#常用的约束</span></span><br><span class="line">NULL ：可以为空</span><br><span class="line">NOT NULL：不能为空，非空</span><br><span class="line">default：默认值</span><br><span class="line">primary key：主键 特点：唯一  且  非空，意思是这个字段的数据必须的填，不能重复，一般主键配合auto_increment:自增  使用  </span><br><span class="line">一张表只能设置一个主键，不能设置多个，主键的好处就是让查询速度更快</span><br><span class="line"></span><br><span class="line">nuique key：唯一键，唯一，但可以为空</span><br><span class="line">unsingned：无符号  可以理解为非负数，<span class="string">&quot;年龄&quot;</span>的约束，就不能写负数</span><br><span class="line">zerofill: 0填冲 一般和int搭配使用</span><br><span class="line"></span><br><span class="line">comment：注释</span><br></pre></td></tr></table></figure><p>操作表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增：创建表</span></span><br><span class="line">1、在student库里创建学生表stu1：<span class="built_in">id</span> 学号,name 名字,age 年龄，gender 性别,phone 手机号,comr_time 入学时间</span><br><span class="line">root@localhost:(none) &gt; create database student;</span><br><span class="line">root@localhost:(none) &gt; use student;</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; create table stu1(<span class="built_in">id</span> int,name varchar(10),age tinyint,gender enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>),phone char(11),come_time datetime);</span><br><span class="line"></span><br><span class="line">2、查看表</span><br><span class="line">root@localhost:student &gt; show tables;</span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_student |</span><br><span class="line">+-------------------+</span><br><span class="line">| stu1              |</span><br><span class="line">+-------------------+</span><br><span class="line"></span><br><span class="line">show tables from+表名  <span class="comment">#不在表里面的查看方法</span></span><br><span class="line"></span><br><span class="line">3、查看表结构</span><br><span class="line">root@localhost:student &gt; desc stu1;</span><br><span class="line">+-----------+---------------+------+-----+---------+-------+</span><br><span class="line">| Field     | Type          | Null | Key | Default | Extra |</span><br><span class="line">+-----------+---------------+------+-----+---------+-------+</span><br><span class="line">| <span class="built_in">id</span>        | int(11)       | YES  |     | NULL    |       |</span><br><span class="line">| name      | varchar(10)   | YES  |     | NULL    |       |</span><br><span class="line">| age       | tinyint(4)    | YES  |     | NULL    |       |</span><br><span class="line">| gender    | enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>) | YES  |     | NULL    |       |</span><br><span class="line">| phone     | char(11)      | YES  |     | NULL    |       |</span><br><span class="line">| come_time | datetime      | YES  |     | NULL    |       |</span><br><span class="line">+-----------+---------------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line">4、往表里面插入数据</span><br><span class="line">root@localhost:student &gt; insert into student.stu1(<span class="built_in">id</span>,name,age,gender,phone,come_time) values(1,<span class="string">&#x27;zhangsan&#x27;</span>,18,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;12345678901&#x27;</span>,NOW());</span><br><span class="line"></span><br><span class="line">male(男的) female(女的)</span><br><span class="line">NOW()当前时间</span><br><span class="line"></span><br><span class="line">查看数据</span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from stu1;</span><br><span class="line">+------+----------+------+--------+-------------+---------------------+</span><br><span class="line">| <span class="built_in">id</span>   | name     | age  | gender | phone       | come_time           |</span><br><span class="line">+------+----------+------+--------+-------------+---------------------+</span><br><span class="line">|    1 | zhangsan |   18 | f      | 12345678901 | 2024-08-13 03:25:18 |</span><br><span class="line">+------+----------+------+--------+-------------+---------------------+</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment">#规范化建表</span></span><br><span class="line">root@localhost:student &gt; create table stu2(</span><br><span class="line">      <span class="built_in">id</span> int primary key auto_increment comment <span class="string">&#x27;学生学号&#x27;</span>,</span><br><span class="line">      name varchar(10) not null comment <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">      age tinyint unsigned not null comment <span class="string">&#x27;学生年龄&#x27;</span>,</span><br><span class="line">      gender enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>) not null default <span class="string">&#x27;m&#x27;</span> comment <span class="string">&#x27;学生性别&#x27;</span>,</span><br><span class="line">      phone char(11) not null unique key comment <span class="string">&#x27;学手机号&#x27;</span>,</span><br><span class="line">      come_time datetime not null default NOW() comment <span class="string">&#x27;入学时间&#x27;</span>);</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">create table stu2(</span><br><span class="line"><span class="built_in">id</span> int primary key auto_increment comment <span class="string">&#x27;学生学号&#x27;</span>, <span class="comment">#主键+自增</span></span><br><span class="line">name varchar(10) not null comment <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">age tinyint unsigned not null comment <span class="string">&#x27;学生年龄&#x27;</span>,   <span class="comment">#无符号,不能写负数,先写unsigned,再写not null</span></span><br><span class="line">gender enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>) not null default <span class="string">&#x27;m&#x27;</span> comment <span class="string">&#x27;学生性别&#x27;</span>, <span class="comment">#给默认值</span></span><br><span class="line">phone char(11) not null unique key comment <span class="string">&#x27;学生手机号&#x27;</span>,    <span class="comment">#唯一</span></span><br><span class="line">come_time datetime not null default NOW() comment <span class="string">&#x27;入学时间&#x27;</span>); <span class="comment">#给默认值</span></span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; desc stu2;</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| Field     | Type                | Null | Key | Default           | Extra          |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| <span class="built_in">id</span>        | int(11)             | NO   | PRI | NULL              | auto_increment |</span><br><span class="line">| name      | varchar(10)         | NO   |     | NULL              |                |</span><br><span class="line">| age       | tinyint(3) unsigned | NO   |     | NULL              |                |</span><br><span class="line">| gender    | enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>)       | NO   |     | m                 |                |</span><br><span class="line">| phone     | char(11)            | NO   | UNI | NULL              |                |</span><br><span class="line">| come_time | datetime            | NO   |     | CURRENT_TIMESTAMP |                |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#插入数据，有的是默认值可以不需要写</span></span><br><span class="line">root@localhost:student &gt; insert into student.stu2(name,age,phone) values(<span class="string">&#x27;lisi&#x27;</span>,20,<span class="string">&#x27;12312312312&#x27;</span>);</span><br><span class="line">root@localhost:student &gt; insert into student.stu2(name,age,phone) values(<span class="string">&#x27;wangwu&#x27;</span>,22,<span class="string">&#x27;12312312355&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数据</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from stu2;</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line">| <span class="built_in">id</span> | name   | age | gender | phone       | come_time           |</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line">|  1 | lisi   |  20 | m      | 12312312312 | 2024-08-13 04:19:56 |</span><br><span class="line">|  2 | wangwu |  22 | m      | 12312312355 | 2024-08-13 04:21:46 |</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看注释，建表语句里面有</span><br><span class="line"><span class="comment">#查看建表语句</span></span><br><span class="line">root@localhost:student &gt; show create table stu2;</span><br><span class="line">| stu2  | CREATE TABLE `stu2` (</span><br><span class="line">  `<span class="built_in">id</span>` int(11) NOT NULL AUTO_INCREMENT COMMENT <span class="string">&#x27;学生学号&#x27;</span>,</span><br><span class="line">  `name` varchar(10) NOT NULL COMMENT <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">  `age` tinyint(3) unsigned NOT NULL COMMENT <span class="string">&#x27;学生年龄&#x27;</span>,</span><br><span class="line">  `gender` enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>) NOT NULL DEFAULT <span class="string">&#x27;m&#x27;</span> COMMENT <span class="string">&#x27;学生性别&#x27;</span>,</span><br><span class="line">  `phone` char(11) NOT NULL COMMENT <span class="string">&#x27;学手机号&#x27;</span>,</span><br><span class="line">  `come_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT <span class="string">&#x27;入学时间&#x27;</span>,</span><br><span class="line">  PRIMARY KEY (`<span class="built_in">id</span>`),</span><br><span class="line">  UNIQUE KEY `phone` (`phone`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">执行失败的语句也会自增，能不能插进去就是你的事，但是不插到表里面，生产中不会出现连续的自增，用户想删自己的数据就删，如果想要在生产中连号，就非常累，所以不需要在乎<span class="built_in">id</span>号不连续</span><br><span class="line">如果把表里面的数据全部删除，再插入数据，还是之前的序号记录还是在，序号不会从1开始</span><br></pre></td></tr></table></figure><p>图形化工具(Navicat Premium)建表</p><p>左上角  文件——&gt;新建连接——&gt;选择mysql连接的方式</p><p><img src="../image/study_img/image-20240812205646797.png" alt="image-20240812205646797"></p><p><img src="../image/study_img/image-20240812205757441.png" alt="image-20240812205757441"></p><p>点击测试连接，连接ok显示绿色</p><p><img src="../image/study_img/image-20240812205857192.png" alt="image-20240812205857192"></p><p>图形化工具建立出来的表</p><p><img src="../image/study_img/image-20240812211405705.png" alt="image-20240812211405705"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#从终端查看使用图形化创建的表</span></span><br><span class="line">root@localhost:student &gt; show tables;</span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_student |</span><br><span class="line">+-------------------+</span><br><span class="line">| stu1              |</span><br><span class="line">| stu2              |</span><br><span class="line">| stu3              |</span><br><span class="line">+-------------------+</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; desc stu3;</span><br><span class="line">+-----------+---------------+------+-----+-------------------+----------------+</span><br><span class="line">| Field     | Type          | Null | Key | Default           | Extra          |</span><br><span class="line">+-----------+---------------+------+-----+-------------------+----------------+</span><br><span class="line">| <span class="built_in">id</span>        | int(11)       | NO   | PRI | NULL              | auto_increment |</span><br><span class="line">| name      | varchar(20)   | NO   |     | NULL              |                |</span><br><span class="line">| age       | tinyint(4)    | NO   |     | NULL              |                |</span><br><span class="line">| gender    | enum(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;f&#x27;</span>) | NO   |     | m                 |                |</span><br><span class="line">| phone     | char(11)      | NO   | PRI | NULL              |                |</span><br><span class="line">| come_time | datetime      | NO   |     | CURRENT_TIMESTAMP |                |</span><br><span class="line">+-----------+---------------+------+-----+-------------------+----------------+</span><br><span class="line"></span><br><span class="line">表中虽然看到2个主键，实际上是1个主键，叫做联合主键，相当于一个主键包含2个字段（包含<span class="built_in">id</span>  phone字段）</span><br></pre></td></tr></table></figure><p>删表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删</span></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from stu2;                                 </span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line">| <span class="built_in">id</span> | name   | age | gender | phone       | come_time           |</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line">|  1 | lisi   |  20 | m      | 12312312312 | 2024-08-13 04:19:56 |</span><br><span class="line">|  2 | wangwu |  22 | m      | 12312312355 | 2024-08-13 04:21:46 |</span><br><span class="line">|  3 | aaa    |  17 | m      | 12312312366 | 2024-08-13 04:29:08 |</span><br><span class="line">|  4 | bbb    |  24 | m      | 12312312377 | 2024-08-13 04:29:31 |</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line"></span><br><span class="line">1、删除<span class="built_in">id</span>为3的行</span><br><span class="line">root@localhost:student &gt; delete from stu2 <span class="built_in">where</span> <span class="built_in">id</span>=3;</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; <span class="keyword">select</span> * from stu2;</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line">| <span class="built_in">id</span> | name   | age | gender | phone       | come_time           |</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line">|  1 | lisi   |  20 | m      | 12312312312 | 2024-08-13 04:19:56 |</span><br><span class="line">|  2 | wangwu |  22 | m      | 12312312355 | 2024-08-13 04:21:46 |</span><br><span class="line">|  4 | bbb    |  24 | m      | 12312312377 | 2024-08-13 04:29:31 |</span><br><span class="line">+----+--------+-----+--------+-------------+---------------------+</span><br><span class="line"></span><br><span class="line">2、删除表</span><br><span class="line">root@localhost:student &gt; drop table stu100; <span class="comment">#将文件从磁盘上删除，相当于rm</span></span><br><span class="line">root@localhost:student &gt;delete table stu100; <span class="comment">#相当于vim 只能把表里面的数据清掉，但表名还在</span></span><br><span class="line"></span><br><span class="line">3、删除表里面的全部内容</span><br><span class="line">root@localhost:student &gt; delete from stu2;  <span class="comment">#再次插入数据时,序号不是从1开始</span></span><br><span class="line">root@localhost:student &gt; <span class="built_in">truncate</span> stu1;     <span class="comment">#再次插入数据时,序号从1开始</span></span><br></pre></td></tr></table></figure><p>改表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#改：alter</span></span><br><span class="line">改表麻烦，里面的数据类型都需要改</span><br><span class="line"></span><br><span class="line">1、#修改表名  rename</span><br><span class="line">root@localhost:student &gt; alter table stu3 rename stu300;</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; show tables;</span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_student |</span><br><span class="line">+-------------------+</span><br><span class="line">| stu1              |</span><br><span class="line">| stu2              |</span><br><span class="line">| stu300            |</span><br><span class="line">+-------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、#对字段的修改  字段的增、删、改、查</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加字段：添加一个class字段    add   (默认添加在最后面)</span></span><br><span class="line">root@localhost:student &gt; alter table stu2 add class varchar(10) not null;</span><br><span class="line">root@localhost:student &gt; desc stu2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#添加leve字段在name的后面（添加在指定字段后面）</span></span><br><span class="line">root@localhost:student &gt; alter table stu2 add leve char(5) after name;</span><br><span class="line">root@localhost:student &gt; desc stu2;</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加aaa字段在最前面（将字段添加在最前面）</span></span><br><span class="line">root@localhost:student &gt; alter table stu2  add aaa char(3) first;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#删除指定的字段</span><br><span class="line">alter table stu10 drop +字段名</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; alter table stu2 drop aaa;</span><br><span class="line">root@localhost:student &gt; alter table stu2 drop leve;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、#修改字段，两种方法    modify  change</span><br><span class="line">char(11)，改成varchar(11)</span><br><span class="line"></span><br><span class="line"><span class="comment"># modify(只能修改字段类型和约束)</span></span><br><span class="line">alter table stu10 modify 你要改的字段名 你要改的类型</span><br><span class="line"></span><br><span class="line">root@localhost:student &gt; alter table stu2 modify phone varchar(11);</span><br><span class="line"></span><br><span class="line"><span class="comment">#change(可以修改字段类型和约束、字段名)</span></span><br><span class="line">alter table stu2 change 旧字段 新字段 新字段的类型;</span><br><span class="line">root@localhost:student &gt; alter table stu2 change <span class="built_in">id</span> ID varchar(11);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕2、MYSQL的结构体系</title>
      <link href="/posts/666852d5.html"/>
      <url>/posts/666852d5.html</url>
      
        <content type="html"><![CDATA[<h3 id="MYSQL的结构体系">MYSQL的结构体系</h3><p><strong>客户端服务器模型</strong></p><p>C/S结构的服务</p><p><img src="../image/study_img/image-20240808095924000.png" alt="image-20240808095924000"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql的客户端</span><br><span class="line"></span><br><span class="line">mysqldump</span><br><span class="line">mysqladmin</span><br><span class="line">mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1.mysql是一个典型的C/S服务结构</span><br><span class="line">  1.1 mysql自带的客户端程序（/application/mysql/bin）</span><br><span class="line">    mysql</span><br><span class="line">    mysqladmin</span><br><span class="line">    mysqldump</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">1.2 mysqld一个二进制程序，后台的守护进程</span><br><span class="line">  单进程</span><br><span class="line">  多线程</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">MySQL连接方式</span><br><span class="line">  TCP/IP的连接方式</span><br><span class="line">  列如：mysql -uroot -p123 -h172.16.1.51</span><br><span class="line">  Socket连接</span><br><span class="line">  列如：mysql -uroot -p123  -S /tmp/mysql.scoket</span><br><span class="line">  </span><br><span class="line">  \s可以看他是什么连接方式</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123 <span class="comment">#Socket连接</span></span><br><span class="line">mysql -uroot -p123 -h172.16.1.51 <span class="comment">#TCP/IP的连接方式</span></span><br><span class="line">mysql -uroot -p123 -hlocalhost#Socket连接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------错误写法，但也是TCP连接----</span><br><span class="line">mysql -uroot -p123 -h172.16.1.51 -S /tmp/mysql.scoket</span><br><span class="line">mysql -uroot -p123 -S /tmp/mysql.scoket -h172.16.1.51</span><br></pre></td></tr></table></figure><p><strong>MYSQL服务器构成</strong></p><p>MYSQL服务：守护进程</p><p>实例：一个进程+一个线程+一个预分配的内存结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 mysql-5.7.44]# mysqladmin -uroot -p123 variables|grep innodb_buffer_pool_size</span><br><span class="line">mysqladmin: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line"><span class="comment">#得到mysql的内存配置</span></span><br><span class="line">| innodb_buffer_pool_size                                  | 134217728 </span><br><span class="line"></span><br><span class="line">MYSQL的内存要占物理机内存的75%~80%</span><br><span class="line"></span><br><span class="line">比较大，可以更改一下，修改配置文件</span><br><span class="line">[root@db04 mysql-5.7.44]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">......</span><br><span class="line">innodb_buffer_pool_size=512M    <span class="comment">#设置mysql启动起来,占用物理机512M</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果用ansible推送配置文件，内存那里要写变量</span></span><br><span class="line">innodb_buffer_pool_size = &#123;&#123; (ansible_memtotal_mb * 0.8)|init &#125;&#125;M</span><br><span class="line">不能有小数点,配置文件里面有带小数点，mysql就起不来</span><br></pre></td></tr></table></figure><p><strong>mysql的底层原理</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">底层分为3层  连接层  SQL层  存储引擎层</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240808114234093.png" alt="image-20240808114234093"></p><p>连接层作用：</p><p>1、提供2种连接方式</p><ul><li>TCP连接</li><li>Socket连接</li></ul><p>2、验证用户的合法性（用户名  密码  IP   权限）</p><p>3、提供一个于SQL层交互的线程</p><p>SQL层作用：<br>1、接收连接层传递过来的SQL语句<br>2、验证语法<br>3、验证语义：就是验证你是要增删改查  DDL DML  DCL DQL DTL<br>4、命令解释器 ：解析输入的SQL语句<br>5、优化器：简单的优化SQL语句<br>6、执行器：执行优化器选择的最优一种方式的语句<br>提供一个和存储引擎层交互的线程<br>接收存储引擎层返回的结构化成表的数据<br>7、缓存<br>8、记录日志（binlog）</p><p>存储引擎层作用<br>1、接收SQL层传递过来的sql语句<br>2、于磁盘交互取出指定的数据<br>3、将数据结构化成表返回给SQL层</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 mysql-5.7.44]# mysql -uroot -p123 -e <span class="string">&#x27;show databases;&#x27;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.   <span class="comment">#这行不是标准输出，也不是错误输出，这个输出不是这条命令给的，是去不掉的</span></span><br><span class="line"></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |#元数据库，内存库，在磁盘上看不到，他是加载在内存里的</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p><strong>MySQL的结构</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">MySQL的2种结构</span><br><span class="line">逻辑结构（熟悉）</span><br><span class="line">物理结构</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">MySQL的逻辑结构：数据库管理人员或者开发人员可操作的对象</span><br><span class="line">1、库、表(元数据+真实数据行)  元数据是：字段名+字段的描述信息....</span><br><span class="line">字段又分为字段名，数据类型，约束</span><br><span class="line"></span><br><span class="line">3、元数据：列+其它属性（行数+占用空间大小+权限）</span><br><span class="line">4、列：列名字+数据类型+其他约束（非空、唯一、主键、非负数、自增长、默认值）</span><br><span class="line"></span><br><span class="line">MYSQL的物理结构：最底层的数据文件</span><br><span class="line">1）MySQL的最底层的物理结构是数据文件，也就是说，存储引擎层，打交道的文件，是数据文件。</span><br><span class="line">2）存储引擎分为很多种类（Linux中的FS）</span><br><span class="line">3）不同存储引擎的区别：存储方式、安全性、性能</span><br></pre></td></tr></table></figure><p><strong>mysql的单位</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">段、区、页（块）</span><br><span class="line"></span><br><span class="line">1、段(一张表)：理论上一个表就是一个段，由多个区构成，（分区表是一个分区一个段）</span><br><span class="line">2、区：一个区由连续的多个页构成  （1M）</span><br><span class="line">3、页：一个页最小的数据存储单元，默认是16k     block没占满的区域叫脏数据</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1、#有的数据库安装之后，会生成空用户</span><br><span class="line">mysql&gt;  <span class="keyword">select</span> user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | 127.0.0.1 |</span><br><span class="line">| root | ::1       |</span><br><span class="line">|      | db02      |</span><br><span class="line">| root | db02      |</span><br><span class="line">|      | localhost |</span><br><span class="line">| root | localhost |</span><br><span class="line">+------+-----------+</span><br><span class="line"></span><br><span class="line">2、#使用空用户连接，也可以连接，这些是非常危险的存在</span><br><span class="line">[root@db02 ~]# mysql -u<span class="string">&#x27;&#x27;</span> -hlocalhost</span><br><span class="line"></span><br><span class="line">3、把空用户删除</span><br><span class="line">mysql&gt; drop user root@<span class="string">&#x27;::1&#x27;</span>;</span><br><span class="line">mysql&gt; drop user <span class="string">&#x27;&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#这条命令虽然也可以删除，但是不能用，他会把root用户也删除，知道有这个命令就行了，不要去执行删除mysql&gt;  truncate mysql.user;   川king特</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">在企业中误删除了root用户，怎么解决</span><br><span class="line"></span><br><span class="line">1、先停止服务</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line">2、跳过授权表，忽略网络连接去启动数据库</span><br><span class="line">[root@db01 ~]# mysqld_safe --skip-grant-tables --skip-networking</span><br><span class="line"></span><br><span class="line">3、使用下列命令登陆mysql，无需密码</span><br><span class="line">[root@db01 ~]# mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、重新添加root用户</span><br><span class="line"><span class="comment">#方法一:重新添加root用户  没有给root用户设置密码</span></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; insert into user <span class="built_in">set</span> user=<span class="string">&#x27;root&#x27;</span>,ssl_cipher=<span class="string">&#x27;&#x27;</span>,x509_issuer=<span class="string">&#x27;&#x27;</span>,x509_subject=<span class="string">&#x27;&#x27;</span>;update user <span class="built_in">set</span> Host=<span class="string">&#x27;localhost&#x27;</span>,select_priv=<span class="string">&#x27;y&#x27;</span>, insert_priv=<span class="string">&#x27;y&#x27;</span>,update_priv=<span class="string">&#x27;y&#x27;</span>, Alter_priv=<span class="string">&#x27;y&#x27;</span>,delete_priv=<span class="string">&#x27;y&#x27;</span>,create_priv=<span class="string">&#x27;y&#x27;</span>,drop_priv=<span class="string">&#x27;y&#x27;</span>,reload_priv=<span class="string">&#x27;y&#x27;</span>,shutdown_priv=<span class="string">&#x27;y&#x27;</span>,Process_priv=<span class="string">&#x27;y&#x27;</span>,file_priv=<span class="string">&#x27;y&#x27;</span>,grant_priv=<span class="string">&#x27;y&#x27;</span>,References_priv=<span class="string">&#x27;y&#x27;</span>,index_priv=<span class="string">&#x27;y&#x27;</span>,create_user_priv=<span class="string">&#x27;y&#x27;</span>,show_db_priv=<span class="string">&#x27;y&#x27;</span>,super_priv=<span class="string">&#x27;y&#x27;</span>,create_tmp_table_priv=<span class="string">&#x27;y&#x27;</span>,Lock_tables_priv=<span class="string">&#x27;y&#x27;</span>,execute_priv=<span class="string">&#x27;y&#x27;</span>,repl_slave_priv=<span class="string">&#x27;y&#x27;</span>,repl_client_priv=<span class="string">&#x27;y&#x27;</span>,create_view_priv=<span class="string">&#x27;y&#x27;</span>,show_view_priv=<span class="string">&#x27;y&#x27;</span>,create_routine_priv=<span class="string">&#x27;y&#x27;</span>,alter_routine_priv=<span class="string">&#x27;y&#x27;</span>,create_user_priv=<span class="string">&#x27;y&#x27;</span>,event_priv=<span class="string">&#x27;y&#x27;</span>,trigger_priv=<span class="string">&#x27;y&#x27;</span>,create_tablespace_priv=<span class="string">&#x27;y&#x27;</span> <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;                                   </span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | localhost |</span><br><span class="line">+------+-----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：刷新授权表  然后我给root设置的密码是123</span></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with grant option;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、查看权限</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from mysql.user\G;</span><br><span class="line"></span><br><span class="line">6、重启</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕1、MySQL简介及安装</title>
      <link href="/posts/fb2c21f2.html"/>
      <url>/posts/fb2c21f2.html</url>
      
        <content type="html"><![CDATA[<h3 id="MySQL简介及安装"><strong>MySQL简介及安装</strong></h3><p>什么是数据?<br>数据(data)是事实或观察的结果，是对客观事物的逻辑归纳，是用于表示客观事物的未经加工的的原始素材。<br>数据可以是连续的值，比如声音、图像，称为模拟数据。也可以是离散的，如符号、文字，称为数字数据。<br>在计算机系统中，数据以二进制信息单元0,1的形式表示。</p><p>数据的定义: 数据是指对客观事件进行记录并可以鉴别的符号，是对客观事物的性质、状态以及相互关系等进行记载的物理符号或这些物理符号的组合。它是可识别的、抽象的符号。*</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5.6  5.7  版本是市面上用得最多的版本</span><br><span class="line"></span><br><span class="line">linux中数据储存在文件系统里面</span><br><span class="line">将代码的数据格式转换为JSON格式：叫序列化</span><br><span class="line">将代码接收到的JSON格式的数据后，转化成自己的代码，叫：反序列化</span><br></pre></td></tr></table></figure><p><strong>数据库管理系统类型</strong></p><ul><li><p>关系型数据库 RDBMS</p><p>所有的表都是有二维表组成</p><p>表与表之间有关联</p><p>使用SQL（结构化查询语言）语句来管理</p></li><li><p>非关系型数据库</p><p>不需要使用SQL语句，没有二维表</p></li></ul><p><strong>关系型数据库和非关系型数据库常见的应用</strong></p><p>关系型：MySQL、mariadb、Oracle、PostgreSQL、MMSQL<br>非关系型：Rdis(键值对)、MongDB(文档型数据库)、elasticsearch(搜索引擎数据库)、memcache(键值对)</p><p>InfluxDB/OpenTSDB:Time Series 时序数据库(适合出图，查询时间轴数据方便)<br>etcd：键值对数据库(配置文件管理中心,所有的web连到他，就可以读取配置)</p><p>JAVA程序，有自己的管理中心zookeeper，搭配kafka使用</p><h3 id="MySQL安装方式"><strong>MySQL安装方式</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1. rpm、yum安装：安装方便、安装速度快，无法定制</span><br><span class="line"> </span><br><span class="line">2. 二进制：不需要安装，解压即可使用，不能定制功能</span><br><span class="line"> </span><br><span class="line">3. 编译安装</span><br><span class="line">  3.1 可定制，安装慢</span><br><span class="line">  3.2 四个步骤：</span><br><span class="line">    3.2.1 解压（tar）</span><br><span class="line">    3.2.2 生成（./configure）cmake</span><br><span class="line">    3.2.3 编译（make）</span><br><span class="line">    3.2.4 安装（make install）</span><br><span class="line">  3.3  5.5版本之前：tar ./configure make make install</span><br><span class="line">  3.4  5.5版本之后：cmake gmake</span><br><span class="line"> </span><br><span class="line">4. 先编译，然后定制rpm包，制作yum仓库，然后yum安装</span><br><span class="line">  4.1 简单，速度快，可定制，比较复杂，制作时间极长</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">5. 企业中选择的安装方式</span><br><span class="line">  5.1 中小型企业：以上方式都可以，运维偏向编译，dba偏向二进制 运维也偏向二进制</span><br><span class="line">  5.2 大型企业：可以选择: 先编译然后定制rpm包，制作yum仓库，然后yum安装</span><br><span class="line">  </span><br><span class="line">6. docker容器</span><br></pre></td></tr></table></figure><h3 id="下载Mysql安装包"><strong>下载Mysql安装包</strong></h3><p><a href="https://www.mysql.com/">https://www.mysql.com/</a></p><p><img src="../image/study_img/image-20240807105637146.png" alt="image-20240807105637146"></p><p><img src="../image/study_img/image-20240807105944871.png" alt="image-20240807105944871"></p><p><img src="../image/study_img/image-20240807110117554.png" alt="image-20240807110117554"></p><p><img src="../image/study_img/image-20240807150422738.png" alt="image-20240807150422738"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MYSQL版本选择的潜规则</span></span><br><span class="line">MYSQL5.6：GA 6-12个月，就是他发布到现在你的具体时间，过了多久，选择在6-12个月内，小版本号为偶数的</span><br><span class="line"></span><br><span class="line">MySQL5.7：GA 6-12个月，小版本号为偶数版的，5.7.20以上版本（MGR是MySQL自带的高可用功能）</span><br></pre></td></tr></table></figure><p><strong>方式一：源码安装mysql5.6</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">1、#解压</span><br><span class="line">[root@db01 ~]# <span class="built_in">mkdir</span> /app</span><br><span class="line">[root@db01 ~]# tar xf mysql-5.6.50.tar.gz </span><br><span class="line"></span><br><span class="line">2、#源码安装需要cmake命令、依赖</span><br><span class="line">[root@db01 ~]# yum -y install cmake  openssl-devel ncurses-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、#生成，需要先加入工作目录</span><br><span class="line">[root@db01 ~]# <span class="built_in">cd</span> mysql-5.6.50/</span><br><span class="line"></span><br><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=/app/mysql-5.6.50 \</span><br><span class="line">-DMYSQL_DATADIR=/app/mysql-5.6.50/data \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/app/mysql-5.6.50/tmp/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_ZLIB=bundled \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line">-DENABLE_DOWNLOADS=1 \</span><br><span class="line">-DWITH_DEBUG=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定编译好的程序存放位置</span></span><br><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=/app/mysql-5.6.50 \</span><br><span class="line"><span class="comment">#数据存放位置</span></span><br><span class="line">-DMYSQL_DATADIR=/app/mysql-5.6.50/data \</span><br><span class="line"><span class="comment">#socket文件存放位置</span></span><br><span class="line">-DMYSQL_UNIX_ADDR=/app/mysql-5.6.50/tmp/mysql.sock \</span><br><span class="line"><span class="comment">#使用utf8字符集</span></span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line"><span class="comment">#校验规则</span></span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line"><span class="comment">#使用其他额外的字符集</span></span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line"><span class="comment">#支持的存储引擎</span></span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line"><span class="comment">#禁用的存储引擎</span></span><br><span class="line">-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \</span><br><span class="line"><span class="comment">#启用zlib库支持（zib、gzib相关）</span></span><br><span class="line">-DWITH_ZLIB=bundled \</span><br><span class="line"><span class="comment">#启用SSL库支持（安全套接层）</span></span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line"><span class="comment">#启用本地数据导入支持</span></span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line"><span class="comment">#编译嵌入式服务器支持</span></span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line"><span class="comment"># mysql5.6支持了google的c++mock框架了，允许下载，否则会安装报错。</span></span><br><span class="line">-DENABLE_DOWNLOADS=1 \</span><br><span class="line"><span class="comment">#禁用debug（默认为禁用）</span></span><br><span class="line">-DWITH_DEBUG=0</span><br><span class="line"></span><br><span class="line">如果cmake失败，请将CMakeCache.txt缓存移除</span><br><span class="line">4、#编译、安装</span><br><span class="line">[root@db01 mysql-5.6.50]# make &amp;&amp; make insatll</span><br><span class="line"></span><br><span class="line">5、创建mysql程序用户</span><br><span class="line">[root@db01 ~]# useradd mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line">6、#修改MySQL的配置文件到只留下[mysqld]标签</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">7、#拷贝启动脚本</span><br><span class="line">[root@db01 ~]# <span class="built_in">cp</span> /app/mysql-5.6.50/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">8、#启动</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240807151940351.png" alt="image-20240807151940351"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">9、#解决办法，安装perl模块，再初始化MYSQL    不要安装perl-devel,这里面是perl的所有模块，这样装的模块太多了，只需要安装autoconf这个模块</span><br><span class="line">[root@db01 ~]# yum -y install autoconf</span><br><span class="line">[root@db01 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">执行完成之后，找到2个ok，就初始化完成了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10、#再次启动  还是报错</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.6.50/data/db01.err&#x27;</span>.</span><br><span class="line">240807 23:35:33 mysqld_safe Directory <span class="string">&#x27;/app/mysql-5.6.50/tmp&#x27;</span> <span class="keyword">for</span> UNIX socket file don<span class="string">&#x27;t exists.</span></span><br><span class="line"><span class="string"> ERROR! The server quit without updating PID file (/app/mysql-5.6.50/data/db01.pid).</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> #报错原因:指定soket文件存放在/app/mysql-5.6.50/tmp，而且存放soket文件的目录没有权限</span></span><br><span class="line"><span class="string"> #解决办法</span></span><br><span class="line"><span class="string">[root@db01 ~]# mkdir /app/mysql-5.6.50/data/db01.err</span></span><br><span class="line"><span class="string">[root@db01 ~]# chown -R mysql.mysql /app</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">11、#再次启动 成功</span></span><br><span class="line"><span class="string">[root@db01 ~]# /etc/init.d/mysqld start</span></span><br><span class="line"><span class="string">Starting MySQL... SUCCESS! </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">12、#添加环境变量</span></span><br><span class="line"><span class="string">[root@db01 ~]# echo &#x27;</span><span class="built_in">export</span> PATH=<span class="string">&quot;/app/mysql-5.6.50/bin:<span class="variable">$PATH</span>&quot;</span><span class="string">&#x27; &gt; /etc/profile.d/mysql.sh</span></span><br><span class="line"><span class="string">[root@db01 ~]# source /etc/profile</span></span><br></pre></td></tr></table></figure><p><strong>方法二：二进制安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">1、下载二进制包</span><br><span class="line">[root@db02 ~]# wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.6.50-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">2、创建app目录，并解压，改名</span><br><span class="line">[root@db02 ~]# <span class="built_in">mkdir</span> /app</span><br><span class="line">[root@db02 ~]# tar xf mysql-5.6.50-linux-glibc2.12-x86_64.tar.gz -C /app</span><br><span class="line">[root@db02 ~]# <span class="built_in">mv</span> /app/mysql-5.6.50-linux-glibc2.12-x86_64/ /app/mysql-5.6.50</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、创建mysql程序用户</span><br><span class="line">[root@db02 ~]# useradd mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line">4、拷贝MySQL的配置文件到etc下，并把配置文件内的注释清除掉，只留下[mysqld]</span><br><span class="line">[root@db02 ~]# \<span class="built_in">cp</span> /app/mysql-5.6.50/support-files/my-default.cnf /etc/my.cnf</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、拷贝启动脚本</span><br><span class="line">[root@db02 ~]# <span class="built_in">cp</span> /app/mysql-5.6.50/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">6、初始化MYSQL</span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">FATAL ERROR: please install the following Perl modules before executing /app/mysql-5.6.50/scripts/mysql_install_db:</span><br><span class="line">Data::Dumper</span><br><span class="line"><span class="comment">#报错，原因缺少per模块</span></span><br><span class="line">安装perl模块</span><br><span class="line">[root@db02 ~]# yum -y install autoconf</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次初始化</span></span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">ok</span><br><span class="line">...</span><br><span class="line">ok</span><br><span class="line">WARNING: Default config file /etc/my.cnf exists on the system</span><br><span class="line">This file will be <span class="built_in">read</span> by default by the MySQL server</span><br><span class="line">If you <span class="keyword">do</span> not want to use this, either remove it, or use the</span><br><span class="line">--defaults-file argument to mysqld_safe when starting the server</span><br><span class="line">执行成功</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# ll /app/mysql-5.6.50/support-files/</span><br><span class="line">total 32</span><br><span class="line">-rwxr-xr-x 1 7161 31415  1153 Sep 23  2020 binary-configure</span><br><span class="line">-rw-r--r-- 1 7161 31415   773 Sep 23  2020 magic</span><br><span class="line">-rw-r--r-- 1 7161 31415  1126 Sep 23  2020 my-default.cnf#配置文件</span><br><span class="line">-rwxr-xr-x 1 7161 31415  1061 Sep 23  2020 mysqld_multi.server</span><br><span class="line">-rwxr-xr-x 1 7161 31415   894 Sep 23  2020 mysql-log-rotate</span><br><span class="line">-rwxr-xr-x 1 7161 31415 10565 Sep 23  2020 mysql.server#启动脚本</span><br><span class="line"></span><br><span class="line">7、启动mysql</span><br><span class="line"><span class="comment">#启动报错 </span></span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line">/etc/init.d/mysqld: line 244: my_print_defaults: <span class="built_in">command</span> not found</span><br><span class="line">/etc/init.d/mysqld: line 264: <span class="built_in">cd</span>: /usr/local/mysql: No such file or directory</span><br><span class="line">Starting MySQL ERROR! Couldn<span class="string">&#x27;t find MySQL server (/usr/local/mysql/bin/mysqld_safe)</span></span><br><span class="line"><span class="string">原因：二进制安装的mysql，mysql没有安装在/usr/local/mysql目录下</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#解决方法一：修改配置文件 (推荐这个方法，因为在读取的时候优先读取配置文件)</span></span><br><span class="line"><span class="string">[root@db02 ~]# vim /etc/my.cnf</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">basedir=/app/mysql-5.6.50</span></span><br><span class="line"><span class="string">datadir=/app/mysql-5.6.50/data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#解决方法二：修改脚本</span></span><br><span class="line"><span class="string">[root@db02 ~]# vim /etc/init.d/mysqld</span></span><br><span class="line"><span class="string">底行模式输入：</span></span><br><span class="line"><span class="string">%s#/usr/local/mysql#/app/mysql-5.6.50#g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#再次启动，启动成功</span></span><br><span class="line"><span class="string">[root@db02 ~]# /etc/init.d/mysqld start</span></span><br><span class="line"><span class="string">Starting MySQL.Logging to &#x27;</span>/app/mysql-5.6.50/data/db02.err<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">.... SUCCESS! </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">8、登陆mysql</span></span><br><span class="line"><span class="string">[root@db02 ~]# mysql</span></span><br><span class="line"><span class="string">-bash: mysql: command not found</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#添加环境变量</span></span><br><span class="line"><span class="string">[root@db02 ~]# echo &#x27;</span><span class="built_in">export</span> PATH=<span class="string">&quot;/app/mysql-5.6.50/bin:<span class="variable">$PATH</span>&quot;</span><span class="string">&#x27; &gt; /etc/profile.d/mysql.sh</span></span><br><span class="line"><span class="string">[root@db02 ~]# source /etc/profile</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">9、登陆连接数据库</span></span><br><span class="line"><span class="string">[root@db02 ~]# mysql</span></span><br><span class="line"><span class="string">mysql&gt; show databases;</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| Database           |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| information_schema |</span></span><br><span class="line"><span class="string">| mysql              |</span></span><br><span class="line"><span class="string">| performance_schema |</span></span><br><span class="line"><span class="string">| test               |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">脚本不能写source /etc/profile  ,会不生效</span></span><br></pre></td></tr></table></figure><p><strong>源码安装MYSQL5.7</strong></p><p>MySQL5.6与MySQL5.7安装的区别<br>1、cmake的时候加入了bostorg<br>2、初始化时 使用mysqld --initialize 替代mysql_install_db，其它参数没有变化：–user= --basedir= --datadir=<br>3、–initialize会生成一个临时密码</p><p>4、还可以用另外一个参数–initialize-insecure</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">1、下载源码包到root目录</span><br><span class="line"><span class="comment">#下载CGI的框架  注意这个下载非常非常慢</span></span><br><span class="line">[root@db03 ~]# wget https://downloads.mysql.com/archives/get/p/23/file/mysql-boost-5.7.44.tar.gz</span><br><span class="line"> </span><br><span class="line">[root@db03 ~]# wget https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.44.tar.gz</span><br><span class="line"></span><br><span class="line">2、安装依赖</span><br><span class="line">[root@db03 mysql-5.7.44]# yum -y install cmake  openssl-devel ncurses-devel autoconf</span><br><span class="line"></span><br><span class="line">3、创建app目录，并解压，改名</span><br><span class="line">[root@db03 ~]# <span class="built_in">mkdir</span> /app</span><br><span class="line">[root@db03 ~]# tar xf boost_1_59_0.tar.gz -C /app/</span><br><span class="line">[root@db03 ~]# <span class="built_in">cd</span> mysql-5.7.44/</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成  编译安装mysql和boost</span></span><br><span class="line">[root@db03 ~]# <span class="built_in">cd</span> /app/mysql-5.7.44/</span><br><span class="line"></span><br><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=/app/mysql-5.7.44 \</span><br><span class="line">-DWITH_BOOST=/app/boost_1_59_0/ \</span><br><span class="line">-DMYSQL_DATADIR=/app/mysql-5.7.44/data \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/app/mysql-5.7.44/tmp/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_ZLIB=bundled \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line">-DENABLE_DOWNLOADS=1 \</span><br><span class="line">-DWITH_DEBUG=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译安装</span></span><br><span class="line">[root@db03 mysql-5.7.44]# make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">4、创建用户，创建数据库目录</span><br><span class="line">[root@db03 mysql-5.7.44]# useradd mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.7.44</span><br><span class="line">datadir=/app/mysql-5.7.44/data</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# <span class="built_in">cp</span> /app/mysql-5.7.44/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# <span class="built_in">cd</span> /app/mysql-5.7.44/</span><br><span class="line"></span><br><span class="line">5、#创建data目录，并授予相关权限</span><br><span class="line">root@db04 mysql-5.7.44]# <span class="built_in">mkdir</span> &#123;mysql-files,data,tmp&#125;</span><br><span class="line">[root@db04 mysql-5.7.44]# <span class="built_in">chown</span> -R mysql.mysql /app/</span><br><span class="line"></span><br><span class="line">6、#初始化数据库 生成一个随机密码</span><br><span class="line">[root@db04 mysql-5.7.44]# /app/mysql-5.7.44/bin/mysqld --initialize --user=mysql --basedir=/app/mysql-5.7.44 --datadir=/app/mysql-5.7.44/data</span><br><span class="line">.....</span><br><span class="line">....</span><br><span class="line">2024-08-07T21:01:19.358769Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: XaD%I7h-&amp;laU</span><br><span class="line"></span><br><span class="line">7、启动</span><br><span class="line">[root@db04 mysql-5.7.44]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.7.44/data/db04.err&#x27;</span>.</span><br><span class="line">.. SUCCESS! </span><br><span class="line"></span><br><span class="line">8、#添加环境变量</span><br><span class="line">[root@db03 ~]# <span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.7.44/bin:$PATH&quot;&#x27;</span> &gt; /etc/profile.d/mysql.sh</span><br><span class="line">[root@db03 ~]# <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">9、#登陆使用随机密码登陆</span><br><span class="line">[root@db03 mysql-5.7.44]# mysql -uroot -p<span class="string">&#x27;XaD%I7h-&amp;laU&#x27;</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br><span class="line"></span><br><span class="line">10、#提醒需要重新设置密码</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p><strong>二进制安装MYSQL5.7</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">1、下载二进制包</span><br><span class="line">[root@db04 ~]#  wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.44-linux-glibc2.12-x86_64.tar</span><br><span class="line">解压出来有2个包，删除带<span class="built_in">test</span>的包</span><br><span class="line"></span><br><span class="line">2、创建/app，并把解压后的文件放到/app目录</span><br><span class="line">[root@db04 ~]# <span class="built_in">mkdir</span> /app</span><br><span class="line">[root@db04 ~]# tar xf mysql-5.7.44-linux-glibc2.12-x86_64.tar.gz  -C /app/</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# <span class="built_in">mv</span> /app/mysql-5.7.44-linux-glibc2.12-x86_64/ /app/mysql-5.7.44</span><br><span class="line"></span><br><span class="line">3、#在生产环境中，一定要在运行的数据库，拷贝其他数据库的配置文件</span><br><span class="line">[root@db04 ~]# useradd mysql -s /sbin/nologin -M</span><br><span class="line">[root@db04 mysql-5.7.44]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.7.44</span><br><span class="line">datadir=/app/mysql-5.7.44/data</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# <span class="built_in">cp</span> /app/mysql-5.7.44/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# <span class="built_in">cd</span> /app/mysql-5.7.44/</span><br><span class="line"></span><br><span class="line">4、#创建data目录，并授予相关权限</span><br><span class="line">root@db04 mysql-5.7.44]# <span class="built_in">mkdir</span> &#123;mysql-files,data&#125;</span><br><span class="line">[root@db04 mysql-5.7.44]# <span class="built_in">chown</span> -R mysql.mysql /app/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、#初始化数据库 生成一个随机密码</span><br><span class="line">[root@db04 mysql-5.7.44]# /app/mysql-5.7.44/bin/mysqld --initialize --user=mysql --basedir=/app/mysql-5.7.44 --datadir=/app/mysql-5.7.44/data</span><br><span class="line">2024-08-07T17:43:11.896232Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">2024-08-07T17:43:18.143399Z 0 [Warning] InnoDB: New <span class="built_in">log</span> files created, LSN=45790</span><br><span class="line">2024-08-07T17:43:19.266013Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2024-08-07T17:43:19.354535Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 88a4a42a-54e4-11ef-8129-000c2961c317.</span><br><span class="line">2024-08-07T17:43:19.358779Z 0 [Warning] Gtid table is not ready to be used. Table <span class="string">&#x27;mysql.gtid_executed&#x27;</span> cannot be opened.</span><br><span class="line">2024-08-07T17:43:20.532115Z 0 [Warning] A deprecated TLS version TLSv1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2024-08-07T17:43:20.532142Z 0 [Warning] A deprecated TLS version TLSv1.1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2024-08-07T17:43:20.540163Z 0 [Warning] CA certificate ca.pem is self signed.</span><br><span class="line">2024-08-07T17:43:20.824069Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: ?-h9g5kg9g%K   <span class="comment">#随机密码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果数据库崩溃了，需要重新初始化，就要<span class="built_in">rm</span> -rf /data 然后再初始化 </span><br><span class="line"></span><br><span class="line">6、#启动</span><br><span class="line">[root@db04 mysql-5.7.44]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.7.44/data/db04.err&#x27;</span>.</span><br><span class="line">.. SUCCESS! </span><br><span class="line"></span><br><span class="line">7、#添加环境变量</span><br><span class="line">[root@db03 ~]# <span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.7.44/bin:$PATH&quot;&#x27;</span> &gt; /etc/profile.d/mysql.sh</span><br><span class="line">[root@db03 ~]# <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">8、#登陆使用随机密码登陆</span><br><span class="line">[root@db04 mysql-5.7.44]# mysql -uroot -p<span class="string">&#x27;?-h9g5kg9g%K&#x27;</span> </span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br><span class="line"></span><br><span class="line">9、#提醒需要重新设置密码</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p>使用systemd管理数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1、查看mysql的源生启动命令</span><br><span class="line">[root@db02 ~]# ps -ef |grep mysql</span><br><span class="line">root       9719      1  0 Aug08 pts/0    00:00:00 /bin/sh /app/mysql-5.6.50/bin/mysqld_safe --datadir=/app/mysql-5.6.50/data --pid-file=/app/mysql-5.6.50/data/db01.pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#就是这个命令</span></span><br><span class="line">/app/mysql-5.6.50/bin/mysqld_safe --datadir=/app/mysql-5.6.50/data --pid-file=/app/mysql-5.6.50/data/db01.pid</span><br><span class="line"></span><br><span class="line">2、#拷贝sshd的启动脚本，并改成mysql的</span><br><span class="line">[root@db02 ~]# <span class="built_in">cp</span> /usr/lib/systemd/system/&#123;sshd,mysqld&#125;.service</span><br><span class="line">[root@db02 ~]# ll /usr/lib/systemd/system/mysqld.service</span><br><span class="line">-rw-r--r-- 1 root root 373 Aug  8 18:35 /usr/lib/systemd/system/mysqld.service</span><br><span class="line"></span><br><span class="line">3、编辑启动文件</span><br><span class="line">[root@db02 ~]# vim /usr/lib/systemd/system/mysqld.service</span><br><span class="line">[Unit] <span class="comment">#这个标签的信息不重要</span></span><br><span class="line">Description=mysql server</span><br><span class="line">Documentation=man:sshd(8) man:sshd_config(5)</span><br><span class="line">After=network.target sshd-keygen.service</span><br><span class="line">Wants=sshd-keygen.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="comment">#就修改这行,添加了启动脚本</span></span><br><span class="line">ExecStart=/app/mysql-5.6.50/bin/mysqld_safe --datadir=/app/mysql-5.6.50/data --pid-file=/app/mysql-5.6.50/data/db02.pid</span><br><span class="line">ExecReload=/bin/kill -HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="comment">#KillMode=process  #我如果打开这行,就不能停止服务,我注释掉就可以停止服务了,如果打开这行可以停止服务,就没必要注释掉</span></span><br><span class="line">KillMode=killall mysqld</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>💕3、MySQL的管理</title>
      <link href="/posts/1832714a.html"/>
      <url>/posts/1832714a.html</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL的管理">MySQL的管理</h2><h3 id="1、用户管理"><strong>1、用户管理</strong></h3><p>MySQL用户的作用:<br>1）登陆MySQL数据库<br>2）管理数据库对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">MySQL用户管理：</span><br><span class="line">1）创建用户：create user</span><br><span class="line">2）删除用户：delete user，drop user</span><br><span class="line">3）修改用户：update</span><br><span class="line"></span><br><span class="line">用户的定义：</span><br><span class="line">1) username@<span class="string">&#x27;主机域&#x27;</span>  这是一个完整的用户</span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;</span><br><span class="line">+------+-------------+</span><br><span class="line">| user | host        |</span><br><span class="line">+------+-------------+</span><br><span class="line">| root | 127.0.0.1   |</span><br><span class="line">|      | db02        |</span><br><span class="line">| root | db02        |</span><br><span class="line">| root | localhost   |</span><br><span class="line">+------+-------------+</span><br><span class="line"></span><br><span class="line">2）主机域：可以理解为是MySQL登陆的白名单</span><br><span class="line"></span><br><span class="line">3）主机域格式：</span><br><span class="line"><span class="comment">#这3个常用</span></span><br><span class="line">10.0.0.5%   10.0.0.50~10.0.0.59 10.0.0.5</span><br><span class="line">localhost</span><br><span class="line">10.0.0.%</span><br><span class="line"></span><br><span class="line">10.0.0.51</span><br><span class="line">10.0.%.%</span><br><span class="line">10.%.%.%</span><br><span class="line">%</span><br><span class="line">db01</span><br><span class="line">10.0.0.51/255.255.255.0</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to test1@<span class="string">&#x27;10.0.0.0/24&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">mysql&gt; grant all on *.* to test2@<span class="string">&#x27;10.0.0.0/255.255.255.0&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="comment">#注意：使用IP授权的用户，登陆时，都要指定IP去连接</span></span><br><span class="line">mysql&gt; grant all on *.* to asm@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;</span><br><span class="line">+------+-------------+</span><br><span class="line">| user | host        |</span><br><span class="line">+------+-------------+</span><br><span class="line">| asm  | 10.0.0.%    |</span><br><span class="line">| <span class="built_in">test</span> | 10.0.0.0/24 |</span><br><span class="line">| root | 127.0.0.1   |</span><br><span class="line">|      | db02        |</span><br><span class="line">| root | db02        |</span><br><span class="line">| root | localhost   |</span><br><span class="line">+------+-------------+</span><br><span class="line">[root@db02 ~]# mysql -uasm -p123 -h10.0.0.52</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#命令前面加空格，历史纪录不保存</span></span><br><span class="line">vim /etc/profile.d/xxxx.sh</span><br><span class="line">HISTCONTROL=ignorespace</span><br><span class="line"></span><br><span class="line"><span class="comment">#对用户的管理就是 </span></span><br><span class="line">增</span><br><span class="line">删</span><br><span class="line">改</span><br><span class="line">查</span><br></pre></td></tr></table></figure><p>增：创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#符合SQL92标准的，先创建，在grant</span></span><br><span class="line">create user asm@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">grant all on *.* to asm@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个不存在的用户并授权</span></span><br><span class="line">grant all on *.* to asm@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#insert into 这个相当于编辑/etc/passwd文件去增加用户</span></span><br></pre></td></tr></table></figure><p>删：删除用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user asm@<span class="string">&#x27;localhost&#x27;</span>;   <span class="comment">#相当于userdel</span></span><br><span class="line"><span class="comment">#查看用户已被删除</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; delete from mysql.user <span class="built_in">where</span> user=<span class="string">&#x27;asm&#x27;</span> and host=<span class="string">&#x27;localhost&#x27;</span>   <span class="comment">#相当于vim /etc/passwd</span></span><br></pre></td></tr></table></figure><p>改：修改用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">改密码  改权限  经常用来改密码</span><br><span class="line"></span><br><span class="line"><span class="comment">#改密码</span></span><br><span class="line">方法一</span><br><span class="line">命令提示行中修改</span><br><span class="line">[root@db04 ~]#mysqladmin -u用户  -p<span class="string">&#x27;旧密码&#x27;</span> password <span class="string">&#x27;新密码&#x27;</span></span><br><span class="line"></span><br><span class="line">方法二  只有5.7以上版本专用</span><br><span class="line">mysql&gt; alter asm@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">方法三  更改当前用户的密码 PASSWORD函数加密123</span><br><span class="line">mysql&gt; <span class="built_in">set</span> password=PASSWORD(<span class="string">&#x27;123&#x27;</span>);    </span><br><span class="line"></span><br><span class="line">方法四   只有使用updatae修改用户密码时，才需要执行flush privileges</span><br><span class="line"><span class="comment">#MYSQL5.6</span></span><br><span class="line">mysql&gt; updata mysql.user <span class="built_in">set</span> password=PASSWORD(<span class="string">&#x27;123&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;asm&#x27;</span> and host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges   <span class="comment">#刷新授权表   //很危险的命令，是全局的SQL语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#MYSQL5.7</span></span><br><span class="line">mysql&gt; updata mysql.user <span class="built_in">set</span> authentication_string=PASSWORD(<span class="string">&#x27;123&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;asm&#x27;</span> and host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges  </span><br><span class="line"></span><br><span class="line">方法五</span><br><span class="line">mysql&gt; grant all on *.* to asm@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br></pre></td></tr></table></figure><p>查：用户的查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;  相当于<span class="built_in">cat</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">mysql&gt; show grant <span class="keyword">for</span> asm@<span class="string">&#x27;localhost&#x27;</span></span><br><span class="line"></span><br><span class="line">mysql&gt; selcet * from mysql.user\G</span><br><span class="line"></span><br><span class="line">\G  格式化输出</span><br></pre></td></tr></table></figure><h3 id="2、权限管理">2、<strong>权限管理</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#全部权限</span></span><br><span class="line"></span><br><span class="line">INSERT,SELECT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN,  PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE  </span><br><span class="line"></span><br><span class="line"><span class="comment">#这两条命令都是授权，没什么区别</span></span><br><span class="line">mysql&gt; grant   all  on   *.*   to  <span class="built_in">test</span>@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">mysql&gt; grant   all privileges  on   *.*   to  <span class="built_in">test</span>@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">             权限           作用对象        归属                       密码</span><br><span class="line"></span><br><span class="line">想要用户有grant权限 ，需要在授权命令的后面加：with grant option</span><br><span class="line"></span><br><span class="line"><span class="comment">#授权用户</span></span><br><span class="line">mysql&gt; grant all on *.* to aaa@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">mysql&gt; show grants <span class="keyword">for</span> aaa@<span class="string">&#x27;10.0.0.%&#x27;</span>;</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> aaa@10.0.0.%                                                                                            |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;aaa&#x27;</span>@<span class="string">&#x27;10.0.0.%&#x27;</span> IDENTIFIED BY PASSWORD <span class="string">&#x27;*23AE809DDACAF96AF0FD78ED04B6A265E05AA257&#x27;</span> |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#作用对象分解</span></span><br><span class="line">*.* [当前MySQL实例中所有库下的所有表]</span><br><span class="line">wordpress.* [当前MySQL实例中wordpress库中所有表（单库级别）]#常用的级别</span><br><span class="line">wordpress.user [当前MySQL实例中wordpress库中的user表（单表级别）]</span><br><span class="line">单字段级别</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#给开发开权限（原始人版）</span></span><br><span class="line">INSERT,SELECT, UPDATE, DELETE</span><br><span class="line"><span class="comment">#给开发开权限（规范版本）</span></span><br><span class="line">INSERT,SELECT, UPDATE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#单字段级别：脱敏 ：脱离敏感信息</span></span><br><span class="line">比如一个表里面有用户的银行卡号，开发使用这个表，我不想让他看到表里面的银行卡信息，这个时候可以使用脱敏</span><br><span class="line"><span class="comment">#只给开发查看user host字段的信息，其他的不能看</span></span><br><span class="line">mysql&gt; grant insert,<span class="keyword">select</span>(user,host),update,delete on mysql.user to dev@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">[root@db02 ~]# mysql -udev -p123</span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;</span><br><span class="line">+------+-------------+</span><br><span class="line">| user | host        |</span><br><span class="line">+------+-------------+</span><br><span class="line">| aaa  | 10.0.0.%    |</span><br><span class="line">| root | db02        |</span><br><span class="line">| dev  | localhost   |</span><br><span class="line">| root | localhost   |</span><br><span class="line">+------+-------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"><span class="comment">#查看passwprd字段，报错没有权限</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host,password from mysql.user;</span><br><span class="line">ERROR 1143 (42000): SELECT <span class="built_in">command</span> denied to user <span class="string">&#x27;dev&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">for</span> column <span class="string">&#x27;password&#x27;</span> <span class="keyword">in</span> table <span class="string">&#x27;user&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">开发人员说：请给我开一个用户</span><br><span class="line">沟通：</span><br><span class="line">填写审批工单或者发邮件让老板同意，有一个审批流程  <span class="comment">#开发 ---开发领导审批 ---运维总监---你</span></span><br><span class="line">1、用户名</span><br><span class="line">2、从哪里连接过来</span><br><span class="line">3、密码要求</span><br><span class="line">4、需要对哪些库、表进行操作</span><br><span class="line"></span><br><span class="line">开发说：你把root用户给我呗？  </span><br><span class="line">把利弊给运维总监说，如果他同意，你就把用户名密码，发给运维总监，让总监发给他，你不要发</span><br></pre></td></tr></table></figure><h3 id="3、mysql的连接管理">3、<strong>mysql的连接管理</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# mysql</span><br><span class="line">-u：指定用户</span><br><span class="line">-p：指定密码</span><br><span class="line">-h：指定主机</span><br><span class="line">-S：指定socket</span><br><span class="line">-P：指定端口</span><br><span class="line">-e：免交互指定MySQL的SQL语句</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">连接工具</span><br><span class="line">2)第三方的连接工具</span><br><span class="line">sqlyog、navicat</span><br><span class="line">应用程序连接MySQL</span><br><span class="line">注意：需要加载对应语言程序的API</span><br><span class="line"></span><br><span class="line">2.连接方式</span><br><span class="line">1) socket连接</span><br><span class="line">mysql -uroot -poldboy123 -S/application/mysql/tmp/mysql.sock</span><br><span class="line">mysql -uroot -poldboy123</span><br><span class="line">2) TCP/IP</span><br><span class="line">mysql -uroot -poldboy123 -h10.0.0.51 -P3306</span><br></pre></td></tr></table></figure><p>数据库在生产环境中不给公网IP,不会暴露在公网上，eth0会down掉，这个时候想要用第三方工具连接数据库，就要端口转发，在生产环境中会有一台机器暴露在公网的，类似于负载均衡的机器，就从负载均衡的机器跳过去。</p><p><img src="../image/study_img/image-20240809152949694.png" alt="image-20240809152949694"></p><p><img src="../image/study_img/image-20240809153134945.png" alt="image-20240809153134945"></p><h3 id="4、MYSQL启动关闭流程">4、<strong>MYSQL启动关闭流程</strong></h3><p><img src="../image/study_img/image-20240809114555924.png" alt="image-20240809114555924"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld start ------&gt; mysqld_safe ------&gt; mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">/etc/init.d/mysqld start</span><br><span class="line">systemctl mysqld start</span><br><span class="line">mysqld_safe --defaults-file=/etcc/my.cnf &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">/etc/init.d/mysqld stop</span><br><span class="line">systemctl mysqld stop</span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 shutdown</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 以下停止方式别用</span></span><br><span class="line"><span class="built_in">kill</span> -9 pid ?</span><br><span class="line">killall mysqld ?</span><br><span class="line">pkill mysqld ?</span><br><span class="line">pkill -9 mysqld ?</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data buffer page 只记录变化过程</span><br></pre></td></tr></table></figure><h3 id="5、MYSQL启动配置">5、<strong>MYSQL启动配置</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">预编译：MySQL配置 datadir=/app/mysql/data</span><br><span class="line">配置文件：MySQL配置 datadir=/app/tmp/data</span><br><span class="line">命令行：mysqld_safe --datadir=/app/xxx/data</span><br><span class="line"></span><br><span class="line">配置文件读取顺序：</span><br><span class="line">/etc/my.cnf</span><br><span class="line">/etc/mysql/my.cnf</span><br><span class="line"><span class="variable">$basedir</span>/my.cnf（前提是在环境变量中定义了MYSQL_HOME变量）</span><br><span class="line">mysqld_safe --defaults-extra-file=/opt/my.cnf （类似include）</span><br><span class="line">~/.my.cnf   这个是自己写的</span><br><span class="line"></span><br><span class="line"><span class="comment">## 当MySQL启动时，指定了该参数，那么其他配置文件都不读取</span></span><br><span class="line">--defaults-file</span><br><span class="line"></span><br><span class="line">读取顺序和优先级相反  最后读的会覆盖前面的   当mysql启动时指定了配置文件，其他的都不读取   命令行的优先级最高</span><br><span class="line"></span><br><span class="line"><span class="comment">#在相同配置情况下，配置生效的优先级</span></span><br><span class="line">预编译 &lt; 配置文件 （ /etc/my.cnf &lt; /etc/mysql/my.cnf &lt; <span class="variable">$besedir</span>/my.cnf &lt; defaults-extra-file &lt; ~/.my.cnf &lt; defaults-file ） &lt; 命令行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍥6、Nginx部署</title>
      <link href="/posts/a1dff2a4.html"/>
      <url>/posts/a1dff2a4.html</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx部署">Nginx部署</h2><p><strong>linux和windows平台常见的web服务器</strong></p><ul><li><p>Apache，(国企性质，要求技术栈不需要那么先进，没有大量的流量，只需要系统架构稳定即可)</p></li><li><p>nginx(主流的互联网公司都选择使用nginx，京东，美团，斗鱼，网易)</p></li><li><p>Lighttpd(性能非常接近nginx的一款web server，主要是老外在用)</p></li><li><p>Tomcat(应用服务器，java做程序解析)</p></li><li><p>IBM(websphere)</p><p>windows平台下的</p><ul><li>llS()internet information server )</li></ul><p><strong>apache</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apache是世界主流的web服务器，大部分网站都是apache搭建的，优势是开放源代码，开发维护的团队很强大，有好几十年的历史，apche支持跨平台应用(1inux，unix，windows)但是apache属于重量级的产品，功能都是以模块化定制，且它的工作模式，占用的内存资源过多，对系统消耗很大，性能也稍弱于nginx</span><br></pre></td></tr></table></figure><p><strong>Lighttpd</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是一款高性能，高安全性，快速，且配置灵活的web服务器产品，，专门为高流量的网站设计，相比其他各款web服务器，内有占用量极小，能够提供有效的API，对cPU负载情况管理，支持后台请求转发，astcgi，scgi，资源压缩，ur1重写，别名等等通能，它是nginx的重头对手之一</span><br></pre></td></tr></table></figure><p><strong>tomcat</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat汤姆猫是一个开源，运行基于java的一个web应用服务器，主要根据serverlet进行执行，但是tomcat对于平台文件，静态文件，高并发处理还是较弱，因此也是和nginx，apache结合使用。想要使用tomcat应用服务器，需要掌握基本的java环境部署等等</span><br></pre></td></tr></table></figure><p><strong>IIS</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">和nginx，apache，lightttp有哪些区别呢<span class="string">?I</span>IS支持图形化操作，毕竟是在windows平台，通过鼠标点击就可以完成网站配置功能还是很强大，但是只能运行在windows平台</span><br></pre></td></tr></table></figure><p><strong>Nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是俄罗斯人开发出的一款高性能 HTTP web服务器，支持反向代理，负载均衡，资源压缩，ur1重写，网站跳转等等功能nginx以高效的1inux网络模型，epo11,event,作为网络I0模型,kqueue，在高并发网站情况下，nginx能够轻松支持5w+的并发流量，并且消耗的服务器内存，cpu等资源，也是很低的，运行起来非常稳定。</span><br></pre></td></tr></table></figure><p>开源: 直接获取源代码<br>高性能: 支持海量并发<br>可靠: <code>服务稳定</code></p></li></ul><p><strong>我们为什么选择Nginx服务</strong><br>Nginx非常轻量</p><p>nginx的优势：高并发、IO多路复用、epoll模型、异步、非阻塞</p><p>功能模块少 (源代码仅保留http与核心模块代码,其余不够核心代码会作为插件来安装)<br>代码模块化 (易读，便于二次开发，对于开发人员非常友好)<br>互联网公司都选择Nginx</p><p>1.Nginx技术成熟，具备的功能是企业最常使用而且最需要的<br>2.适合当前主流架构趋势, 微服务、云架构、中间层<br>3.统一技术栈, 降低维护成本, 降低技术更新成本。</p><p>Nginx采用Epool网络模型，Apache采用Select模型<br>Select: 当用户发起一次请求，select模型就会进行一次遍历扫描，从而导致性能低下。<br>Epool: 当用户发起请求，epool模型会直接进行处理，效率高效，并无连接限制。</p><p><strong>技术架构</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">收费技术栈:             redhat + jqurey+js+svn +oracle +tomcat +java + apache</span><br><span class="line">省钱，走向开源技术栈:    centos + jquery +js + git + mysql + java+tomcat +pythontperl+ nginx</span><br><span class="line"></span><br><span class="line">美企，比较有钱</span><br><span class="line"></span><br><span class="line">有钱的大公司，自己造机房，买服务器，数据都由自己管控，自己招聘IDC机房运维，1inux系统运维，头条，百团，苹果中等公司，外企，自己购买服务器，服务器放在专业的机房托管(内部的内网业务，也有在自己公司搭建小型的服务器机房)</span><br><span class="line"></span><br><span class="line">小型公司，选择云服务器，是最经济实惠</span><br></pre></td></tr></table></figure><p><strong>Nginx快速安装</strong><br>Nginx的安装方式<br>1.源码编译=&gt;Nginx (1.版本随意 2.安装复杂 3.升级繁琐 4.规范 5.便于管理)<br>2.epel仓库=&gt;Nginx (1.版本较低 2.安装简单 3.配置不易读)<br>3.官方仓库=&gt;Nginx (1.版本较新 2.安装简单 3.配置易读)</p><p><strong>Nginx官方仓库安装</strong></p><p>官方安装步骤，进入nginx官网<br>documentation——&gt;Installing nginx——&gt;packages——&gt;RHEL and derivatives</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1、配置yum源</span><br><span class="line">yum install yum-utils</span><br><span class="line">2、创建yum配置文件</span><br><span class="line">vim /etc/yum.repos.d/nginx.repo</span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line">3、安装nginx</span><br><span class="line">yum install nginx -y</span><br><span class="line">4、systemcl start nginx</span><br><span class="line">5、systemctl <span class="built_in">enable</span> nginx</span><br><span class="line">6、在浏览器输入ip看到测试页面即可</span><br><span class="line">7、nginx -V  查看版本</span><br></pre></td></tr></table></figure><p><strong>Nginx的启停</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.Nginx启动</span><br><span class="line">[root@m01 ~]# /usr/sbin/nginx</span><br><span class="line">[root@m01 ~]# systemctl start nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.Nginx停止</span><br><span class="line">[root@m01 ~]# /usr/sbin/nginx -s stop</span><br><span class="line">[root@m01 ~]# systemctl stop nginx</span><br><span class="line"></span><br><span class="line">3.Nginx重启</span><br><span class="line">[root@m01 ~]# systemctl restart nginx</span><br><span class="line"></span><br><span class="line">4.Nginx重载</span><br><span class="line">[root@m01 ~]# /usr/sbin/nginx -s reload</span><br><span class="line">[root@m01 ~]# systemctl reload nginx</span><br></pre></td></tr></table></figure><p><strong>Nginx配置文件</strong></p><p>1.Nginx主配置文件</p><table><thead><tr><th>路径</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>/etc/nginx/nginx.conf</td><td>配置文件</td><td>nginx主配置文件</td></tr><tr><td>/etc/nginx/conf.d/default.conf</td><td>配置文件</td><td>默认网站配置文件</td></tr></tbody></table><p><em>2.Nginx</em>代理相关参数文件</p><table><thead><tr><th>路径</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>/etc/nginx/fastcgi_params</td><td>配置文件</td><td>Fastcgi代理配置文件</td></tr><tr><td>/etc/nginx/scgi_params</td><td>配置文件</td><td>scgi代理配置文件</td></tr><tr><td>/etc/nginx/uwsgi_params</td><td>配置文件</td><td>uwsgi代理配置文件</td></tr></tbody></table><p><em>3.Nginx</em>编码相关配置文件</p><table><thead><tr><th>路径</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>/etc/nginx/win-utf</td><td>配置文件</td><td>Nginx编码转换映射文件</td></tr><tr><td>/etc/nginx/koi-utf</td><td>配置文件</td><td>Nginx编码转换映射文件</td></tr><tr><td>/etc/nginx/koi-win</td><td>配置文件</td><td>Nginx编码转换映射文件</td></tr><tr><td>/etc/nginx/mime.types</td><td>配置文件</td><td>Content-Type与扩展名</td></tr></tbody></table><p><em>4.Nginx</em>管理相关命令</p><table><thead><tr><th>路径</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>/usr/sbin/nginx</td><td>命令</td><td>Nginx命令行管理终端工具</td></tr><tr><td>/usr/sbin/nginx-debug</td><td>命令</td><td>Nginx命令行与终端调试工具</td></tr></tbody></table><p><em>5.Nginx</em>日志相关目录与文件</p><table><thead><tr><th>路径</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>/var/log/nginx</td><td>目录</td><td>nginx默认存放日志目录</td></tr><tr><td>/etc/logrotate.d/nginx</td><td>配置文件</td><td>Nginx默认的日志切割</td></tr></tbody></table><p><strong>nginx主配置文件讲解</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/nginx/nginx.conf  </span><br><span class="line"><span class="comment"># 核心模块</span></span><br><span class="line">user nginx;   <span class="comment">#启动nginx1的用户</span></span><br><span class="line">worker_processes auto;  <span class="comment"># nginxworker进程数 auto是根据服务器的cpu核心数自行判断</span></span><br><span class="line">error_log /var/log/nginx/error.log; <span class="comment"># 错误日志的路径和文件名称</span></span><br><span class="line">pid /var/run/nginx.pid;   <span class="comment">#nginx进程的pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#事件驱动模块</span></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024; <span class="comment">#每个worker进程支持的最大连接数，过多的连接会导致nginx性能下降、负载过高</span></span><br><span class="line">    use epoll; <span class="comment">#事件驱动模型, epoll默认          apache的驱动模块select</span></span><br><span class="line">    nginx使用epol能够高效处理大量的并发；提高了服务器的性能和稳定性</span><br><span class="line">   - 性能优势</span><br><span class="line">      同对比<span class="keyword">select</span>等其他事件驱动</span><br><span class="line">      epol在处理大规模并发事件的时候，表现优异</span><br><span class="line">      提高服务器的性能和稳定性</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># HttpCoreModule(http内核模块)，每一个server定义了一个虚拟主机和网站配置</span></span><br><span class="line">http &#123;</span><br><span class="line"><span class="comment">#定义了名为main日志的格式</span></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line">    <span class="comment">#访问日志路径和文件名</span></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;  <span class="comment">#高效文件传输，将文件内容从磁盘直接发送到客户端</span></span><br><span class="line">    tcp_nopush          on;  <span class="comment">#搭配sendfile一起使用</span></span><br><span class="line">    tcp_nodelay         on;  <span class="comment">#搭配sendfile一起使用</span></span><br><span class="line">    keepalive_timeout   65;  <span class="comment">#长连接，超时时间60s</span></span><br><span class="line">    types_hash_max_size 4096;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types; <span class="comment">#nginx相关的配置的类型配置文件。用于确定如何处理请求中的文件类型</span></span><br><span class="line">    default_type        application/octet-stream;#默认类型   如果请求中没有文件类型，nginx会默认使用他作为文件类型</span><br><span class="line"></span><br><span class="line">   <span class="comment">#nginx网址相关的编写路径和文件格式</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;  <span class="comment">#nginx默认的端口</span></span><br><span class="line">        listen       [::]:80;</span><br><span class="line">        server_name  _;   <span class="comment">#提供的域名</span></span><br><span class="line">        root         /usr/share/nginx/html; <span class="comment">#站点目录，存放网址代码的目录</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;  <span class="comment">#存放额外的nginx配置文件，使得配置更加清晰，易于管理</span></span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#server层,用于定义虚拟主机的配置，和客户端的http请求</span></span><br><span class="line">server &#123;                     </span><br><span class="line">listen 80;  <span class="comment">#告诉nginx在80端口上监听传入http的请求</span></span><br><span class="line">server_name  172.16.1.7; <span class="comment">#通过server name制定所匹配的主机名/IP地址</span></span><br><span class="line">charset utf-8;</span><br><span class="line">location / &#123;   <span class="comment">#使用来自该服务器的请求都会被这个配置处理</span></span><br><span class="line">root /www/lol/;    <span class="comment">#指定服务器的/目录</span></span><br><span class="line">index index.html;   <span class="comment">#指定默认的索引文件         </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">指定了虚拟主机的主机名，当请求的域名是php.web.com的时候就会应用改服务器块的配置</span><br></pre></td></tr></table></figure><p><strong>nginx日志配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">相关指令</span><br><span class="line">log_format     日志格式</span><br><span class="line">access.log     访问日志</span><br><span class="line">error.log      错误日志</span><br><span class="line">open_log_file_cache   日志缓存</span><br><span class="line"></span><br><span class="line">日志的格式和命令</span><br><span class="line"><span class="comment"># 日志格式允许包含的变量</span></span><br><span class="line">vim /etc/nginx/nginx.conf</span><br><span class="line"> log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line"><span class="variable">$remote_addr</span>    用户使用的设备的ip地址</span><br><span class="line"><span class="variable">$remote_user</span>    远程用户：记录客户端用户的名称</span><br><span class="line">[<span class="variable">$time_local</span>]   本地时间：用户访问网站的时间</span><br><span class="line"><span class="variable">$request</span>        记录请求的URL和HTTP协议，用户访问的网站 访问3段 动作/内容/版本</span><br><span class="line"><span class="variable">$status</span>         状态：记录请求状态，一般由3为数组成，叫状态码</span><br><span class="line">                 200  此处访问完成成功，用户需要的信息服务器已给出</span><br><span class="line">                 404  </span><br><span class="line"><span class="variable">$body_bytes_sent</span>  发送给客户端的文档体积，不包括响应头的大小</span><br><span class="line"><span class="variable">$http_referer</span>     引用：记录从哪个页面链接访问过来的  （超链接）</span><br><span class="line"><span class="variable">$http_user_agent</span>  用户用什么浏览器访问的</span><br><span class="line"><span class="variable">$http_x_forwarded_for</span>  代理ip</span><br></pre></td></tr></table></figure><p><strong>为什么nginx不能以root身份运行？</strong></p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 为什么nginx不能<span class="built_in">以root</span>身份运行？</span><br><span class="line"> 本<span class="built_in">身root</span>拥有最高的权限，会带来系统的安全性能，还有一些危险的操作，提高了攻击面</span><br><span class="line"> - 系统安全</span><br><span class="line">如果work进程<span class="built_in">以root</span>身份运行时，网站被攻击，攻击方拥有极大的控制权，造成严重的安全威胁</span><br><span class="line">- 权限过大<span class="built_in"></span></span><br><span class="line"><span class="built_in">root</span>身份运行时，可以访问系统的资源和文件</span><br><span class="line">导致系统进行未授权的操作/访问敏感信息，增加受到恶意攻击得的面</span><br><span class="line">-危险操作<span class="built_in"></span></span><br><span class="line"><span class="built_in">root</span>身份权限极高，比如修改系统配置，对我的系统产生系统崩溃，数据丢失</span><br><span class="line">- 提高了攻击面</span><br><span class="line">提高了攻击的渗透机会</span><br><span class="line"></span><br><span class="line">nginx的版本要隐藏，因为攻击者要工具版本信息找到隐藏的漏洞</span><br></pre></td></tr></table></figure><p><strong>简单的部署网页</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">1、编辑配置文件</span><br><span class="line">[root@web01 ~]# <span class="built_in">cat</span> /etc/nginx/conf.d/asm.conf</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name www.asm.com; </span><br><span class="line">  root /code;</span><br><span class="line">  index index.html; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">2、检查语法</span><br><span class="line">nginx -t</span><br><span class="line">nginx: the configuration file /opt/nginx-1.26.0/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /opt/nginx-1.26.0/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line">3、准备站点目录</span><br><span class="line"><span class="built_in">mkdir</span> /code</span><br><span class="line"></span><br><span class="line">4、准备索引文件</span><br><span class="line">[root@web02 nginx-1.26.0]# <span class="built_in">echo</span> 123 &gt; /code/index.html</span><br><span class="line">[root@web02 nginx-1.26.0]# <span class="built_in">cat</span> /code/index.html</span><br><span class="line">123</span><br><span class="line"></span><br><span class="line">5、重新加载nginx</span><br><span class="line">systemctl reload nginx</span><br><span class="line">6、检查进程，检查端口</span><br><span class="line">[root@web02 nginx-1.26.0]# ps -ef | grep nginx</span><br><span class="line">root 13755 1 0 11:38 ? 00:00:00 nginx: master process</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line">nginx 13757 13755 0 11:38 ? 00:00:00 nginx: worker process</span><br><span class="line">root 13762 6942 0 11:39 pts/0 00:00:00 grep --color=auto nginx</span><br><span class="line">[root@web02 nginx-1.26.0]# netstat -lntup | grep 80</span><br><span class="line">tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN</span><br><span class="line">13755/nginx: master</span><br><span class="line">tcp6 0 0 :::80 :::* LISTEN</span><br><span class="line">13755/nginx: master</span><br><span class="line"></span><br><span class="line">7、本地DNS解析</span><br><span class="line">windows键 + r  输入drivers，找到etc并进入，找到hosts编辑文件</span><br><span class="line">10.0.0.7  www.asm.com</span><br><span class="line"></span><br><span class="line">8、使用浏览器输入域名成功访问即可</span><br></pre></td></tr></table></figure><p><strong>Nginx搭建小游戏网站</strong></p><p>(游戏代码的下载地址) <a href="http://test.driverzeng.com/Nginx_Code/h5_games.zip">http://test.driverzeng.com/Nginx_Code/h5_games.zip</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1、编辑配置文件，并检测语法</span><br><span class="line">[root@web01 ~]# <span class="built_in">cat</span> /etc/nginx/conf.d/asm.conf</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name www.asm.com; </span><br><span class="line">  root /code;</span><br><span class="line">  index index.html; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">2、准备站点目录</span><br><span class="line"><span class="built_in">mkdir</span> /code</span><br><span class="line"></span><br><span class="line">4、准备游戏代码</span><br><span class="line"><span class="built_in">cd</span> /code</span><br><span class="line">wget  http://test.driverzeng.com/Nginx_Code/h5_games.zip</span><br><span class="line"></span><br><span class="line">5、解压代码</span><br><span class="line"><span class="built_in">cd</span> /code</span><br><span class="line">unzip h5_games.zip</span><br><span class="line"></span><br><span class="line">6、检测nginx</span><br><span class="line">nginx -t</span><br><span class="line">nginx: the configuration file /opt/nginx-1.26.0/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /opt/nginx-1.26.0/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line">7、重新加载检查端口</span><br><span class="line">systemctl reload nginx</span><br><span class="line"></span><br><span class="line">8、使用浏览器输入域名成功访问即可</span><br></pre></td></tr></table></figure><img src="../image/study_img/image-20240522153552120.png" alt="image-20240522153552120" style="zoom:80%;" />]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍥5、google的双向认证</title>
      <link href="/posts/6e8f0329.html"/>
      <url>/posts/6e8f0329.html</url>
      
        <content type="html"><![CDATA[<h3 id="google的双向认证">google的双向认证</h3><p>通常我们直接通过ssh输入密码连接服务器，但这样很容易出现暴力破解情况，所以我们可以结合google的动态认证+ssh密码，这样能够大大的提升登陆的安全。<br>简单来说，就是当用户通过ssh登陆系统时，先输入google的随机验证码，然后在输入服务器的ssh密码</p><p><strong>Google-authenticator部署</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">我在m01_10.0.0.61这个服务器上进行配置的认证</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">1、安装依赖包，环境是centos7的</span><br><span class="line">[root@m01 ~]# yum -y install pam-devel libpng-devel autoconf automake libtool</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载代码</span></span><br><span class="line"> 国内源</span><br><span class="line">wget http://test.driverzeng.com/other/1.04.tar.gz</span><br><span class="line"> 国外源</span><br><span class="line">wget https://github.com/google/google-authenticator-libpam/archive/1.04.tar.gz</span><br><span class="line"></span><br><span class="line">2、下载安装google-authenticator-libpam插件</span><br><span class="line">[root@m01 ~]# wget https://github.com/google/google-authenticator-libpam/archive/1.04.tar.gz</span><br><span class="line"></span><br><span class="line">3、解压</span><br><span class="line">[root@m01 ~]# tar xf 1.04</span><br><span class="line">得到这个目录 google-authenticator-libpam-1.04</span><br><span class="line"></span><br><span class="line">4、进入工作目录</span><br><span class="line">[root@m01 ~]# <span class="built_in">cd</span> google-authenticator-libpam-1.04/</span><br><span class="line"></span><br><span class="line">5、执行(构建代码)</span><br><span class="line">[root@m01 google-authenticator-libpam-1.04]# ./bootstrap.sh </span><br><span class="line"></span><br><span class="line">6、生成</span><br><span class="line">[root@m01 google-authenticator-libpam-1.04]# ./configure </span><br><span class="line">生成好了会多一些东西</span><br><span class="line"></span><br><span class="line">7、编译安装(编译的作用：让机器能够认识我的代码)</span><br><span class="line">[root@m01 google-authenticator-libpam-1.04]#make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">8、查看pam_google_authenticator.so的插件是否生成(验证插件是否安装)</span><br><span class="line">[root@m01 google-authenticator-libpam-1.04]# ll /usr/local/lib/security/</span><br><span class="line">total 136</span><br><span class="line">-rwxr-xr-x 1 root root   1021 May 21 08:59 pam_google_authenticator.la</span><br><span class="line">-rwxr-xr-x 1 root root 133552 May 21 08:59 pam_google_authenticator.so</span><br><span class="line"></span><br><span class="line">9、将google-authenticator-libpam复制到库文件</span><br><span class="line">[root@m01 google-authenticator-libpam-1.04]# <span class="built_in">cp</span> /usr/local/lib/security/pam_google_authenticator.so /usr/lib64/security/</span><br><span class="line"></span><br><span class="line"><span class="comment">#现在输入google会tab自动补全，证明安装已完成</span></span><br><span class="line">[root@m01 google-authenticator-libpam-1.04]# google-authenticator </span><br></pre></td></tr></table></figure><p><strong>生成google认证识别</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 google-authenticator-libpam-1.04]# google-authenticator </span><br><span class="line">输入命令之后，再输入y，会有一个二维码出来，用手机扫描，获取动态码之后再输入4个y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否基于时间的认证，为了防止不同跨时区的问题，这里选择y</span></span><br><span class="line">Do you want authentication tokens to be time-based (y/n) y</span><br><span class="line"><span class="comment">#然后会跳出一个google的二维码</span></span><br><span class="line"><span class="comment">#红色框框是: 生成的密钥</span></span><br><span class="line"><span class="comment">#绿色框框是: 生成的5个一次性紧急验证码，用于紧急情况下，使用过一次后该验证码即失效了。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否更新用户的 Google Authenticator 配置文件，选择 y 才能使上面操作对当前 root 用户生效，其实就是在对应用户的 Home 目录下生成了一个 .google_authenticator 文件，如果你想停用这个用户的 Google Authenticator 验证，只需要删除这个用户 Home 目录下的 .google_authenticator 文件就可以了。</span></span><br><span class="line">Do you want me to update your <span class="string">&quot;/root/.google_authenticator&quot;</span> file? (y/n) y</span><br><span class="line"></span><br><span class="line"><span class="comment">#每次生成的认证码是否同时只允许一个人使用？这里选择 y。</span></span><br><span class="line">Do you want to disallow multiple uses of the same authentication</span><br><span class="line">token? This restricts you to one login about every 30s, but it increases</span><br><span class="line">your chances to notice or even prevent man-in-the-middle attacks (y/n) y</span><br><span class="line"></span><br><span class="line"><span class="comment">#每次生成的令牌30s生成一次，最高允许存在误差4分钟。</span></span><br><span class="line">By default, a new token is generated every 30 seconds by the mobile app.</span><br><span class="line">In order to compensate <span class="keyword">for</span> possible time-skew between the client and the server,</span><br><span class="line">we allow an extra token before and after the current time. This allows <span class="keyword">for</span> a</span><br><span class="line">time skew of up to 30 seconds between authentication server and client. If you</span><br><span class="line">experience problems with poor time synchronization, you can increase the window</span><br><span class="line">from its default size of 3 permitted codes (one previous code, the current</span><br><span class="line">code, the next code) to 17 permitted codes (the 8 previous codes, the current</span><br><span class="line">code, and the 8 next codes). This will permit <span class="keyword">for</span> a time skew of up to 4 minutes</span><br><span class="line">between client and server.</span><br><span class="line">Do you want to <span class="keyword">do</span> so? (y/n) y</span><br></pre></td></tr></table></figure><p><strong>将google 2FA加到ssh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> 1、搭建配置文件(SSH调用及客户端配置，添加pam认证，再配置文件里面的第一行输入以下内容)</span><br><span class="line"> [root@m01 ~]# vim /etc/pam.d/sshd    </span><br><span class="line">  <span class="comment">#%PAM-1.0</span></span><br><span class="line">  auth       required     pam_google_authenticator.so</span><br><span class="line"></span><br><span class="line">2、修改ssh配置文件，关联google认证</span><br><span class="line">[root@m01 ~]# vim /etc/ssh/sshd_config </span><br><span class="line">ChallengeResponseAuthentication <span class="built_in">yes</span>     <span class="comment">#第69行的no，修改为yes</span></span><br><span class="line"> </span><br><span class="line">3、重启ssh服务</span><br><span class="line">[root@m01 ~]# systemctl restart sshd</span><br><span class="line"> </span><br><span class="line">4、验证google双向认证</span><br><span class="line">断开上述配置的服务器，再次重新连接发现无法连接登陆上去，代表Google二次认证已配置完成，可以使用远程连接的方法进行连接登陆</span><br><span class="line">[root@web01 ~]# ssh root@10.0.0.61</span><br><span class="line">  我在m01_10.0.0.61这个服务器上进行配置的认证，所以我要远程连接10.0.0.61，需要让我输入动态码即成功完成配置认证</span><br><span class="line">  </span><br><span class="line"> 或者使用xshell建立连接验证也可以</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240521100545835.png" alt="image-20240521100545835"></p><p><img src="../image/study_img/image-20240521140003525.png" alt="image-20240521140003525"></p><p>注意事项：<br><em>1.用password + google authenticator，如果使用公钥登录的话，会跳过google authenticator验证直接登录服务器的。<br>2.如果是内网测试使用，建议安装google authenticator 浏览器插件实践。如果是公网服务器建议安装手机版的Authenticator</em></p><p><em>二次认证并不是刚需，可以根据工作需要去部署，只有xsehll连接可以设置二次认证，windterm不支持</em></p><img src="../image/study_img/image-20240521140905172.png" alt="image-20240521140905172" style="zoom:80%;" /><img src="../image/study_img/image-20240521141110144.png" alt="image-20240521141110144" style="zoom:67%;" /><img src="../image/study_img/image-20240521141204024.png" alt="image-20240521141204024" style="zoom:67%;" /><p><strong>Nginx的部署</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#yum安装 </span></span><br><span class="line">优点：安装启动简单</span><br><span class="line">缺点：yum安装的版本是1.20版本是固定死的，升级简单，直接使用yum update升级即可</span><br><span class="line"></span><br><span class="line"><span class="comment">#源码安装   </span></span><br><span class="line">优点：可以选择自己需要的版本</span><br><span class="line">缺点：安装复杂，升级繁琐</span><br><span class="line"><span class="comment">#二进制安装</span></span><br><span class="line">解压即用</span><br><span class="line"></span><br><span class="line">Nginx官网  http://nginx.org/</span><br></pre></td></tr></table></figure><img src="../image/study_img/image-20240521141338448.png" alt="image-20240521141338448" style="zoom:67%;" /><img src="../image/study_img/image-20240521141437441.png" alt="image-20240521141437441" style="zoom:67%;" /><p><strong>Nginx源码安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#前期准备 安装编译需要的gcc和gcc-c++</span></span><br><span class="line">yum install -y gcc gcc-c++</span><br><span class="line"></span><br><span class="line">1、到Nginx官网下载源码包</span><br><span class="line">wget http://nginx.org/download/nginx-1.24.0.tar.gz</span><br><span class="line"></span><br><span class="line">[root@m01 ~]# ll</span><br><span class="line">-rw-rw-rw-   1 root root   54019 May 21 08:49 1.04.tar.gz</span><br><span class="line"></span><br><span class="line">2、创建工作目录，将源码包复制到工作目录并解压</span><br><span class="line">[root@m01 ~]# <span class="built_in">mkdir</span> /app</span><br><span class="line">[root@m01 ~]# <span class="built_in">mv</span> nginx-1.24.0.tar.gz  /app/</span><br><span class="line">[root@m01 ~]# <span class="built_in">cd</span> /app/</span><br><span class="line">[root@m01 app]# tar xf nginx-1.24.0.tar.gz </span><br><span class="line">[root@m01 app]# ll</span><br><span class="line">drwxr-xr-x 8 1001 1001     158 Apr 11  2023 nginx-1.24.0</span><br><span class="line">-rw-r--r-- 1 root root 1112471 Apr 12  2023 nginx-1.24.0.tar.gz</span><br><span class="line"></span><br><span class="line">3、生成(第1次生成)    </span><br><span class="line"><span class="comment">#为避免缺少依赖生成报错，可以提前安装依赖：yum -y install pcre-devel pcre-devel</span></span><br><span class="line"></span><br><span class="line">需要进入工作目录,再生成</span><br><span class="line">[root@m01 app]# <span class="built_in">cd</span> /app/nginx-1.24.0</span><br><span class="line">[root@m01 app]#./configure --prefix=/opt/nginx-1.24.0 --with-http_ssl_module --with-http_stub_status_module</span><br><span class="line"> --prefix=/opt/nginx-1.24.0 ：指定安装路径</span><br><span class="line">--with-http_ssl_module：想要nginx带http的功能</span><br><span class="line">--with-http_stub_status_module：这个模块能够获取Nginx自上次启动以来的工作状态</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行命令报错，问题1：缺少pcre的依赖</span></span><br><span class="line">./configure: error: the HTTP rewrite module requires the PCRE library.</span><br><span class="line">You can either <span class="built_in">disable</span> the module by using --without-http_rewrite_module</span><br><span class="line">option, or install the PCRE library into the system, or build the PCRE library</span><br><span class="line">statically from the <span class="built_in">source</span> with nginx by using --with-pcre=&lt;path&gt; option.</span><br><span class="line"><span class="comment">#解决办法：安装pcre的依赖</span></span><br><span class="line">[root@m01 nginx-1.24.0]# yum -y install pcre-devel</span><br><span class="line"></span><br><span class="line">4、生成(第2次生成)</span><br><span class="line">[root@m01 app]#./configure --prefix=/opt/nginx-1.24.0 --with-http_ssl_module --with-http_stub_status_module</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令报错，问题2：缺少openssl的依赖</span></span><br><span class="line">./configure: error: SSL modules require the OpenSSL library.</span><br><span class="line">You can either <span class="keyword">do</span> not <span class="built_in">enable</span> the modules, or install the OpenSSL library</span><br><span class="line">into the system, or build the OpenSSL library statically from the <span class="built_in">source</span></span><br><span class="line">with nginx by using --with-openssl=&lt;path&gt; option.</span><br><span class="line"><span class="comment">## 解决方案:安装openssl的依赖</span></span><br><span class="line">yum install -y openssl-devel</span><br><span class="line"></span><br><span class="line">5、生成(第3次生成)</span><br><span class="line">[root@m01 app]#./configure --prefix=/opt/nginx-1.24.0 --with-http_ssl_module --with-http_stub_status_module</span><br><span class="line">依赖全部安装完成后，再次生成，出现如下内容代表生成完成</span><br><span class="line">Configuration summary</span><br><span class="line">  + using system PCRE library</span><br><span class="line">  + using system OpenSSL library</span><br><span class="line">  + using system zlib library</span><br><span class="line"></span><br><span class="line">  nginx path prefix: <span class="string">&quot;/opt/nginx-1.24.0&quot;</span></span><br><span class="line">  nginx binary file: <span class="string">&quot;/opt/nginx-1.24.0/sbin/nginx&quot;</span></span><br><span class="line">  nginx modules path: <span class="string">&quot;/opt/nginx-1.24.0/modules&quot;</span></span><br><span class="line">  nginx configuration prefix: <span class="string">&quot;/opt/nginx-1.24.0/conf&quot;</span></span><br><span class="line">  nginx configuration file: <span class="string">&quot;/opt/nginx-1.24.0/conf/nginx.conf&quot;</span></span><br><span class="line">  nginx pid file: <span class="string">&quot;/opt/nginx-1.24.0/logs/nginx.pid&quot;</span></span><br><span class="line">  nginx error <span class="built_in">log</span> file: <span class="string">&quot;/opt/nginx-1.24.0/logs/error.log&quot;</span></span><br><span class="line">  nginx http access <span class="built_in">log</span> file: <span class="string">&quot;/opt/nginx-1.24.0/logs/access.log&quot;</span></span><br><span class="line">  nginx http client request body temporary files: <span class="string">&quot;client_body_temp&quot;</span></span><br><span class="line">  nginx http proxy temporary files: <span class="string">&quot;proxy_temp&quot;</span></span><br><span class="line">  nginx http fastcgi temporary files: <span class="string">&quot;fastcgi_temp&quot;</span></span><br><span class="line">  nginx http uwsgi temporary files: <span class="string">&quot;uwsgi_temp&quot;</span></span><br><span class="line">  nginx http scgi temporary files: <span class="string">&quot;scgi_temp&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、编译安装(让系统能够识别你的代码)  注意，要进入工作目录        </span><br><span class="line">[root@m01 nginx-1.24.0]# make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">7、安装   编译安装成功会在opt下生成nginx</span><br><span class="line">[root@m01 nginx-1.24.0]# ll /opt/</span><br><span class="line">drwxr-xr-x 6 root root 54 May 21 11:45 nginx-1.24.0</span><br><span class="line"></span><br><span class="line">8、添加软连接</span><br><span class="line">[root@m01 nginx-1.24.0]# <span class="built_in">ln</span> -s /opt/nginx-1.24.0/ /opt/nginx</span><br><span class="line">[root@m01 nginx-1.24.0]# ll /opt/</span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx 1 root root 18 May 21 11:52 nginx -&gt; /opt/nginx-1.24.0/</span><br><span class="line"></span><br><span class="line">9、添加环境变量</span><br><span class="line">[root@m01 nginx-1.24.0]# <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line">[root@m01 nginx-1.24.0]# vim /etc/profile.d/nginx.sh    <span class="comment">#这里会打开一个空文件，将如下内容写入文件即可</span></span><br><span class="line"><span class="built_in">export</span> NGINX_PATH=/opt/nginx/sbin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$NGINX_PATH</span></span><br><span class="line"></span><br><span class="line">10、生效环境变量</span><br><span class="line">[root@m01 nginx-1.24.0]# <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">11、检查环境变量</span><br><span class="line">[root@m01 nginx-1.24.0]# <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/opt/nginx/sbin</span><br><span class="line"></span><br><span class="line">12、启动Nginx，并检查启动是否成功</span><br><span class="line">[root@m01 nginx-1.24.0]# nginx </span><br><span class="line">[root@m01 nginx-1.24.0]# ps -aux |grep nginx</span><br><span class="line">root      24355  0.0  0.1  46004  1140 ?        Ss   11:58   0:00 nginx: master process nginx</span><br><span class="line">nobody    24356  0.0  0.1  46452  1888 ?        S    11:58   0:00 nginx: worker process</span><br><span class="line">root      24358  0.0  0.0 112812   980 pts/2    R+   11:58   0:00 grep --color=auto nginx</span><br><span class="line">[root@m01 nginx-1.24.0]# netstat -lntup|grep 80</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      24355/nginx: master </span><br><span class="line"></span><br><span class="line">访问10.0.0.61页面</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240521120431273.png" alt="image-20240521120431273"></p><p>注意：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果nginx起不来。可以查看是否有老版本存在，并将老版本移除</span></span><br><span class="line">[root@m01 nginx-1.24.0]# rpm -qa |grep nginx</span><br><span class="line">yum remove nginx</span><br><span class="line"></span><br><span class="line">不加环境变量就用/opt/nginx/sbin/nginx这个命令执行，nginx也可以启动</span><br></pre></td></tr></table></figure><p><strong>卸载源码安装的nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、关闭nginx</span><br><span class="line">nginx -s stop</span><br><span class="line">[root@m01 ~]# ps -aux|grep nginx</span><br><span class="line">root      24741  0.0  0.0 112812   976 pts/2    R+   15:09   0:00 grep --color=auto nginx</span><br><span class="line"></span><br><span class="line">2、输入以下指令全局查找nginx相关的文件：</span><br><span class="line">[root@m01 nginx-1.24.0]# <span class="built_in">sudo</span> find / -name <span class="string">&quot;nginx*&quot;</span></span><br><span class="line"></span><br><span class="line">3、删除查找出来的所有nginx相关文件</span><br><span class="line">[root@m01 nginx-1.24.0]# <span class="built_in">sudo</span> find / -name <span class="string">&quot;nginx*&quot;</span>|xargs <span class="built_in">rm</span> -rf</span><br><span class="line"></span><br><span class="line">4、尝试启动nginx 不能启动代表卸载成功</span><br><span class="line">[root@m01 ~]# /opt/nginx/sbin/nginx</span><br><span class="line">-bash: /opt/nginx/sbin/nginx: No such file or directory</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍥4、如何实现公钥推送脚本</title>
      <link href="/posts/ed89b172.html"/>
      <url>/posts/ed89b172.html</url>
      
        <content type="html"><![CDATA[<h3 id="如何实现推送公钥脚本">如何实现推送公钥脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#交互生成密钥对，需要按3个回车，才会生成密钥对</span></span><br><span class="line">[root@m01 ~]# ssh-keygen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.免交互生成密钥对，不需要输入回车，直接生成密钥对</span></span><br><span class="line">[root@m01 ~]# ssh-keygen -t rsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa  &amp;&gt;/dev/null </span><br><span class="line"></span><br><span class="line">我们在使用ssh root@10.0.0.31远程连接时，会让我们交互输入对方主机的密码才可进行连接</span><br><span class="line"><span class="comment"># 2.免交输入密码  安装sshpass</span></span><br><span class="line">[root@m01 ~]# yum install -y sshpass</span><br><span class="line">[root@m01 ~]# sshpass -p 1 ssh root@10.0.0.31</span><br><span class="line">sshpass -p 密码 ssh root@10.0.0.31</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.第一次远程连接时，需要指纹认证和输入密码，这些都可以使用如下命令做到免交互</span></span><br><span class="line">[root@m01 ~]# sshpass -p root ssh -o strictHostKeyChecking=no root@10.0.0.31</span><br><span class="line"></span><br><span class="line">sshpass -p 密码 ssh -o strictHostKeyChecking=no root@10.0.0.31</span><br><span class="line">-p：指定密码</span><br><span class="line">-o strictHostKeyChecking=no：忽略指纹认证</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写脚本</span></span><br><span class="line">[root@m01 ~]# vim push_public_key.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#判断公钥是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f ~/.ssh/id_rsa ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"> ssh-keygen -t rsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> &#123;5,6,7,8,31,41,51,61,71&#125;;<span class="keyword">do</span></span><br><span class="line">ping -c1 -W1 172.16.1.<span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="comment">#忽略指纹认证推送公钥</span></span><br><span class="line">[ $? -eq 0 ] &amp;&amp;\</span><br><span class="line">sshpass -p root ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pub root@172.16.1.<span class="variable">$ip</span> &amp;&gt;/dev/null &amp;&amp;\</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;172.16.1.<span class="variable">$ip</span> 推送成功...&quot;</span> ||\</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;172.16.1.<span class="variable">$ip</span> 推送失败...&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果脚本里面带密码，为了安全，就可以把文件变成二进制文件</span><br><span class="line">将脚本变成二进制文件(加密文件内容)安装shc </span><br><span class="line"><span class="comment">## 将脚本变成二进制文件</span></span><br><span class="line">[root@m01 ~]# yum install -y shc</span><br><span class="line">[root@m01 ~]# shc -f ip_host.sh</span><br><span class="line"></span><br><span class="line">shc -f 文件名</span><br><span class="line">会生成.x .x.c 的文件，把.x的文件进行执行就可以</span><br><span class="line">./文件名 ：二进制文件使用./执行</span><br></pre></td></tr></table></figure><p><strong>expect免交互语言(了解)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装expect</span></span><br><span class="line">[root@m01 ~]# yum install -y expect</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> ip 10.0.0.41</span><br><span class="line"><span class="built_in">set</span> pass root</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">timeout</span> 30</span><br><span class="line">spawn ssh root@<span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;(yes/no)&quot;</span> &#123;send <span class="string">&quot;yes\r&quot;</span>; exp_continue&#125;</span><br><span class="line"><span class="string">&quot;password:&quot;</span> &#123;send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">expect <span class="string">&quot;root@*&quot;</span> &#123;send <span class="string">&quot;df -h\r&quot;</span>&#125;</span><br><span class="line">expect <span class="string">&quot;root@*&quot;</span> &#123;send <span class="string">&quot;exit\r&quot;</span>&#125;</span><br><span class="line">expect eof</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 循环多台机器</span></span><br><span class="line">[root@m01 ~]# !vim</span><br><span class="line">vim 1.exp</span><br><span class="line"><span class="comment">#!/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> pass 1</span><br><span class="line">foreach ip &#123;<span class="string">&quot;7&quot;</span> <span class="string">&quot;8&quot;</span> <span class="string">&quot;31&quot;</span> <span class="string">&quot;41&quot;</span>&#125; &#123;</span><br><span class="line">puts <span class="string">&quot;当前IP地址: <span class="variable">$ip</span>&quot;</span></span><br><span class="line">spawn ssh root@172.16.1.<span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;(yes/no)&quot;</span> &#123;send <span class="string">&quot;yes\r&quot;</span>; exp_continue&#125;</span><br><span class="line"><span class="string">&quot;password:&quot;</span> &#123;send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">expect <span class="string">&quot;root@*&quot;</span> &#123;send <span class="string">&quot;df -h\r&quot;</span>&#125;</span><br><span class="line">expect <span class="string">&quot;root@*&quot;</span> &#123;send <span class="string">&quot;exit\r&quot;</span>&#125;</span><br><span class="line">expect eof</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-------------------------免交互推送公钥，免指纹认证脚本，一步到位------------------</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#创建一个IP地址文件。</span></span><br><span class="line">&gt;ip.txt</span><br><span class="line">pass=root</span><br><span class="line"><span class="comment">#检测expect是否安装，检测公钥是否创建。</span></span><br><span class="line">rpm -q expect &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ] ;<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;开始安装expect，请稍等一会...&quot;</span></span><br><span class="line">        yum install -y expect &amp;&gt; /dev/null</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;expect安装完成&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f ~/.ssh/id_rsa ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;开始创建密钥对...&quot;</span></span><br><span class="line">        ssh-keygen -P <span class="string">&quot;&quot;</span> -f ~/.ssh/id_rsa &amp;&gt; /dev/null</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;密钥对创建完成&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#使用for循环ping测试主机是否在线。</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;2..254&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">        ip=10.0.0.<span class="variable">$i</span></span><br><span class="line">        ping -c1 -W1 <span class="variable">$ip</span> &amp;&gt; /dev/null</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>&quot;</span> &gt;&gt; ip.txt</span><br><span class="line">        /usr/bin/expect &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">set timeout 10</span></span><br><span class="line"><span class="string">spawn ssh-copy-id $ip</span></span><br><span class="line"><span class="string">expect &#123;</span></span><br><span class="line"><span class="string">        &quot;yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125; &amp;&gt; /dev/null</span></span><br><span class="line"><span class="string">        &quot;password:&quot; &#123; send &quot;$pass\r&quot; &#125; &amp;&gt; /dev/null</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">expect eof</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        &#125;&amp;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;推送公钥和免交互工作已完成，你现在可以直接远程登陆机器了&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">expect的变量定义： <span class="built_in">set</span> 变量名  变量值</span><br><span class="line"></span><br><span class="line">\r 回车</span><br><span class="line">\n 换行符</span><br></pre></td></tr></table></figure><p><strong>SSH安全优化</strong></p><p>SSH作为远程连接服务，通常我们需要考虑到该服务的安全，所以需要对该服务进行安全方面的配置。<br>1.更改远程连接登陆的端口<br>2.禁止ROOT管理员直接登录<br>3.密码认证方式改为密钥认证<br>4.重要服务不使用公网IP地址<br>5.使用防火墙限制来源IP地址</p><p>SSH服务登录防护需进行如下配置调整，先对如下参数进行了解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Port 6666                       <span class="comment"># 变更SSH服务远程连接端口</span></span><br><span class="line">PermitRootLogin         no      <span class="comment"># 禁止root用户直接远程登录</span></span><br><span class="line">PasswordAuthentication  no      <span class="comment"># 禁止使用密码直接远程登录</span></span><br><span class="line">UseDNS                  no      <span class="comment"># 禁止ssh进行dns反向解析，影响ssh连接效率参数</span></span><br><span class="line">GSSAPIAuthentication    no      <span class="comment"># 禁止GSS认证，减少连接时产生的延迟</span></span><br></pre></td></tr></table></figure><p>将如下具体配置添加至/etc/ssh/sshd_config文件中，参数需根据实际情况进行调整</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###SSH###</span></span><br><span class="line"><span class="comment">#Port 6666</span></span><br><span class="line"><span class="comment">#PasswordAuthentication no</span></span><br><span class="line"><span class="comment">#PermitRootLogin no</span></span><br><span class="line">GSSAPIAuthentication no</span><br><span class="line">UseDNS no</span><br><span class="line"><span class="comment">###END###</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍥3、SSH远程管理服务实战</title>
      <link href="/posts/2a29ab50.html"/>
      <url>/posts/2a29ab50.html</url>
      
        <content type="html"><![CDATA[<h2 id="SSH远程管理服务实战">SSH远程管理服务实战</h2><p><strong>SSH基本概述</strong><br>SSH是一个安全协议，在进行数据传输时，会对数据包进行加密处理，加密后在进行数据传输。确保了数据传输安全。那SSH服务主要功能有哪些呢？</p><p>1.提供远程连接服务器的服务<br>2.对传输的数据进行加密</p><p>那么除了SSH协议能提供远程连接服务，Telnet也能提供远程连接服务, 那么分别的区别是什么呢?<br>ssh服务会对传输数据进行加密, 监听在本地22/tcp端口, ssh服务默认支持root用户登录<br>telnet服务不对数据进行加密, 监听在本地23/tcp端口, Telnet默认不支持root用户登录</p><p><strong>为什么不要telnet连接呢？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">telnet也可以远程连接，为什么不要telnet连接呢？</span><br><span class="line">1、刚安装完成的系统没有telnet的服务端，只有ssh的服务端，想要使用telnet远程，需要安装</span><br><span class="line">2、telnet是明文传输，不安全   端口是23端口</span><br></pre></td></tr></table></figure><table><thead><tr><th>服务连接方式</th><th>服务数据传输</th><th>服务监听端口</th><th>服务登陆用户</th></tr></thead><tbody><tr><td>ssh</td><td>加密</td><td>22/tcp</td><td>默认支持root用户登陆</td></tr><tr><td>telnet</td><td>明文</td><td>23/tcp</td><td>不支持root用户登陆</td></tr></tbody></table><p><strong>写出以下协议端口</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ftp:21</span><br><span class="line">dns:53</span><br><span class="line">ssh:22</span><br><span class="line">telnet:23</span><br><span class="line">mysql:3306</span><br><span class="line">http：80</span><br><span class="line">http：443</span><br><span class="line">rsync：873</span><br><span class="line">pop3收邮件协议：110</span><br><span class="line">smtp邮箱协议端口：25</span><br><span class="line">rdp远程连接windows：3389</span><br></pre></td></tr></table></figure><p><strong>SSH相关命令</strong></p><p>ssh命令一般都是建立远程连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh  远程连接</span></span><br><span class="line">远程连接的底层就是调用ssh这个命令</span><br><span class="line">ssh -p 22 root@172.16.1.13</span><br><span class="line"></span><br><span class="line">-p ：指定端口，默认22端口这个选项就可以省略</span><br><span class="line">@：分隔符，分割用户和ip</span><br><span class="line">172.16.1.13 ： 可以输入ip或者域名</span><br><span class="line"></span><br><span class="line">远程输入执行命令 </span><br><span class="line"><span class="comment">#注意</span></span><br><span class="line">1、在第一次建立连接时会进行指纹认证，让输入<span class="built_in">yes</span>，</span><br><span class="line">2、只要没有做免密的情况下，连接自己也需要输入密码</span><br><span class="line">[root@backup ~]# ssh root@10.0.0.7 <span class="string">&quot;ifconfig&quot;</span></span><br><span class="line">[root@backup ~]# ssh root@10.0.0.7 <span class="string">&quot;ls /root&quot;</span></span><br><span class="line">root@10.0.0.7<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">anaconda-ks.cfg</span></span><br><span class="line"><span class="string">jichu1.sh</span></span><br><span class="line"><span class="string">jichu.sh</span></span><br><span class="line"><span class="string">sh</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@backup ~]# ssh  -o strictHostKeyChecking=no root@10.0.0.7 &quot;ifconfig&quot;</span></span><br><span class="line"><span class="string">-o strictHostKeyChecking=no：忽略指纹认证，直接输入密码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># scp 远程拷贝</span></span><br><span class="line"><span class="string">scp -r /etc  root@10.0.0.7:/tmp</span></span><br><span class="line"><span class="string">-r:递归，传输目录</span></span><br><span class="line"><span class="string">-p(小写)：保持文件属性，传递过去etc目录下的文件属性不变</span></span><br><span class="line"><span class="string">-P(大写)：指定端口</span></span><br><span class="line"><span class="string">如果ssh的端口变了 就要加入端口的选项 -P</span></span><br><span class="line"><span class="string">scp -P 2222 -rp /etc  root@10.0.0.7:/tmp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#scp远程拉取文件</span></span><br><span class="line"><span class="string">scp 10.0.0.31:/backup /tmp</span></span><br></pre></td></tr></table></figure><p>学ssh协议需要一台新的机器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">机器巡检，每台机器一个脚本，发邮件给领导，如果100个服务器 那邮件都满了，一般巡检都是由一个机器完成</span><br><span class="line">[root@backup ~]# ssh root@10.0.0.7 <span class="string">&quot;idf -Th&quot;</span></span><br><span class="line"></span><br><span class="line">可以写一个脚本，就放到web01，执行远程执行的命令</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">ssh root@10.0.0.7 <span class="string">&quot;idf -Th&quot;</span></span><br><span class="line">ssh root@10.0.0.8 <span class="string">&quot;idf -Th&quot;</span></span><br><span class="line">ssh root@10.0.0.31 <span class="string">&quot;idf -Th&quot;</span> 但是要输入密码，没有写入密码的变量，需要做ssh免密验证</span><br></pre></td></tr></table></figure><p><strong>SSH免密连接方式</strong></p><p>默认情况下，通过<em>ssh</em>客户端命令登陆远程服务器，需要提供远程系统上的帐号与密码，但为了降低密码泄露的机率和提高登陆的方便性，建议使用密钥验证方式。</p><img src="../image/study_img/image-20240517133155314.png" alt="image-20240517133155314" style="zoom:80%;" /><p><strong>SSH免密连接方式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">1、必须要生成一对密钥对，才能免密连接别人</span><br><span class="line"><span class="comment"># 密钥对：由公钥 + 私钥组成</span></span><br><span class="line">公钥：门锁</span><br><span class="line">私钥：钥匙</span><br><span class="line"></span><br><span class="line">m01(10.0.0.61),做管理的机器，以后放巡检脚本用的</span><br><span class="line"><span class="comment"># 1.生成密钥对</span></span><br><span class="line">[root@m01 ~]# ssh-keygen</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): // 密钥对存放路径</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa. // 私钥</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub. // 公钥</span><br><span class="line"></span><br><span class="line">[root@m01 ~]# ll ~/.ssh/</span><br><span class="line">-rw------- 1 root root 1675 May 17 11:49 id_rsa // 私钥：钥匙</span><br><span class="line">-rw-r--r-- 1 root root 390 May 17 11:49 id_rsa.pub // 公钥：锁</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.免密连接web01</span></span><br><span class="line">[root@m01 ~]# ssh-copy-id -i ~/.ssh/id_rsa.pub     root@172.16.1.7</span><br><span class="line">[root@m01 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub root@172.16.1.8</span><br><span class="line">[root@m01 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub root@172.16.1.31</span><br><span class="line">[root@m01 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub root@172.16.1.41</span><br><span class="line">------------------------------------</span><br><span class="line"><span class="comment">## ssh-copy-id 底层原理</span></span><br><span class="line">1）远程创建.ssh目录</span><br><span class="line">免密跳板机</span><br><span class="line">[root@m01 ~]# ssh root@10.0.0.8 <span class="string">&#x27;mkdir /root/.ssh&#x27;</span></span><br><span class="line">2）将公钥保存到需要免密控制的机器</span><br><span class="line">[root@web02 ~]# vim /root/.ssh/authorized_keys</span><br><span class="line">ssh-rsa</span><br><span class="line">AAAAB3NzaC1yc2EAAAADAQABAAABAQDXrmYzl1/VAkM6pcAkjwuPzHzzhWKroscKwnGlsWLffgEe/WZT</span><br><span class="line">2mqQqfygUNQmhZF3BLySTRlI/vVZKoLgqKBGr6CbRXPWi1ETKCYpbkK8NCj97wO3SV6Q01GU1sIcFAFV</span><br><span class="line">pXl5O+BapM/tLJVC+5EJqtK+2O1am3PC2/OPxQJJXCYWg9GH4VZhTUK4jQISJX9YRMcY8/HFjhQkgHEA</span><br><span class="line">/O6bFzeEFcfOodVfUKO2cauBLJTNw5UIRvsBX9cH10478pN3+QaZCTab2d43bfGW2A8b/tVXfumCF253</span><br><span class="line">eBrPCA8mt1nAH+YRpPLRS4FovbqQpfFHn/fVR1WLDo5IYIUhbcPP root@m01</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssh-keygen    3个回车     </span><br><span class="line">会输出一个ll -a  ~/.ssh目录，里面有公钥和私钥文件</span><br><span class="line">我想免密连接哪个机器，我就要把公钥发给谁</span><br><span class="line"></span><br><span class="line">只有用ssh连接过别人，自己家目录下就会生成一个.ssh的目录，下次连接就不要输入<span class="built_in">yes</span>了</span><br><span class="line"></span><br><span class="line">fingerprint  指纹认证 在.ssh目录下的known_hosts</span><br><span class="line"></span><br><span class="line">2、免密连接  把锁发给需要连接的人</span><br><span class="line">ssh-copy-id -i /root/.ssh/id_rsa.pub root@172.16.1.7</span><br><span class="line"></span><br><span class="line">-i 指定锁的路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssh-copy-id底层原理</span><br><span class="line">会先创建一个 .ssh目录</span><br><span class="line"></span><br><span class="line">有这种免密连接的方式，写脚本就容易了，</span><br></pre></td></tr></table></figure><p><strong>免密跳板机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/bin/bash</span></span><br><span class="line"><span class="comment">#jumpserver</span></span><br><span class="line">lb01=10.0.0.5</span><br><span class="line">lb02=10.0.0.6</span><br><span class="line">web01=10.0.0.7</span><br><span class="line">web02=10.0.0.8</span><br><span class="line">web03=10.0.0.9</span><br><span class="line">nfs=10.0.0.31</span><br><span class="line">backup=10.0.0.41</span><br><span class="line">db01=10.0.0.51</span><br><span class="line">m01=10.0.0.61</span><br><span class="line">zabbix=10.0.0.71</span><br><span class="line"><span class="function"><span class="title">menu</span></span>()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">+-------------------------+</span></span><br><span class="line"><span class="string">| 1) lb01 |</span></span><br><span class="line"><span class="string">| 2) lb02 |</span></span><br><span class="line"><span class="string">| 3) web01 |</span></span><br><span class="line"><span class="string">| 4) web02 |</span></span><br><span class="line"><span class="string">| 5) web03 |</span></span><br><span class="line"><span class="string">| 6) nfs |</span></span><br><span class="line"><span class="string">| 7) backup |</span></span><br><span class="line"><span class="string">| 8) db01 |</span></span><br><span class="line"><span class="string">| 9) m01 |</span></span><br><span class="line"><span class="string">| 10) zabbix |</span></span><br><span class="line"><span class="string">| h) help |</span></span><br><span class="line"><span class="string">+-------------------------+</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#菜单函数</span></span><br><span class="line">menu</span><br><span class="line"><span class="comment">#连接函数</span></span><br><span class="line"><span class="function"><span class="title">connect</span></span>()&#123;</span><br><span class="line">ping -c 1 -w 1 <span class="variable">$1</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">ssh root@<span class="variable">$1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[5;4;40;31m 别连了,我的哥,<span class="variable">$2</span>:<span class="variable">$1</span>机器都没开!!!\033[0m&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#控制不让输入ctrl+c,z</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;&quot;</span> HUP INT TSTP</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入要连接的主机编号：&quot;</span> num</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$num</span> <span class="keyword">in</span></span><br><span class="line">1|lb01)</span><br><span class="line">connect <span class="variable">$lb01</span> lb01</span><br><span class="line">;;</span><br><span class="line">2|lb02)</span><br><span class="line">connect <span class="variable">$lb02</span> lb02</span><br><span class="line">;;</span><br><span class="line">3|web01)</span><br><span class="line">connect <span class="variable">$web01</span> web01</span><br><span class="line">;;</span><br><span class="line">4|web02)</span><br><span class="line">connect <span class="variable">$web02</span> web02</span><br><span class="line">;;</span><br><span class="line">5|web03)</span><br><span class="line">connect <span class="variable">$web03</span> web03</span><br><span class="line">;;</span><br><span class="line">6|nfs)</span><br><span class="line">connect <span class="variable">$nfs</span> nfs</span><br><span class="line">;;</span><br><span class="line">7|backup)</span><br><span class="line">connect <span class="variable">$backup</span> backup</span><br><span class="line">;;</span><br><span class="line">8|db01)</span><br><span class="line">connect <span class="variable">$db01</span> db01</span><br><span class="line">;;</span><br><span class="line">9|m01)</span><br><span class="line">connect <span class="variable">$m01</span> m01</span><br><span class="line">;;</span><br><span class="line">10|zabbix)</span><br><span class="line">connect <span class="variable">$zabbix</span> zabbix</span><br><span class="line">;;</span><br><span class="line">h|<span class="built_in">help</span>)</span><br><span class="line">clear</span><br><span class="line">menu</span><br><span class="line">;;</span><br><span class="line">close)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍥2、sersync实时同步数据</title>
      <link href="/posts/efb3d0d0.html"/>
      <url>/posts/efb3d0d0.html</url>
      
        <content type="html"><![CDATA[<h3 id="sersync实时同步数据">sersync实时同步数据</h3><p>inotify：是一个可以实时监控文件和目录的工具<br>监控文件内容是否发生变化，目录是否发生创建和删除</p><p>实时同步：通过监控到文件或目录有变化，就会触发rsync推送数据的动作，起到实时同步的作用</p><p><strong>安装inotify——在客户端安装</strong></p><p>明确inotify安装在客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install inotify-tools </span><br><span class="line"><span class="comment">#查询安装后产生的配置文件</span></span><br><span class="line">rpm -ql inotify-tools</span><br><span class="line">使用的是ywait 和ywatch</span><br></pre></td></tr></table></figure><p><strong>inotify选项和参数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-m 持续监控</span><br><span class="line">-r 递归</span><br><span class="line">-q 静默，仅打印时间信息</span><br><span class="line">--timefmt 指定输出时间格式</span><br><span class="line">--format 指定事件输出格式</span><br><span class="line">%Xe 事件</span><br><span class="line">%w 目录</span><br><span class="line">%f 文件</span><br><span class="line">-e 指定监控的事件</span><br><span class="line">access 访问</span><br><span class="line">modify 内容修改</span><br><span class="line">attrib 属性修改</span><br><span class="line">close_write 修改真实文件内容</span><br><span class="line">open 打开</span><br><span class="line">create 创建</span><br><span class="line">delete 删除</span><br><span class="line">umount 卸载</span><br></pre></td></tr></table></figure><p><strong>inotify命令测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --format <span class="string">&#x27;%Xe %w %f&#x27;</span> -e create,modify,delete,attrib,close_write /backup</span><br></pre></td></tr></table></figure><p><strong>脚本实时同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 实时同步：rsync + inotify</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">cat</span> bak.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=123</span><br><span class="line">bak_dir=/zls_backup/</span><br><span class="line">/usr/bin/inotifywait -mrq --format <span class="string">&#x27;%Xe %w %f&#x27;</span> -e</span><br><span class="line">create,modify,delete,attrib,close_write <span class="variable">$bak_dir</span>|<span class="keyword">while</span> <span class="built_in">read</span> line;<span class="keyword">do</span></span><br><span class="line">rsync -az --delete <span class="variable">$bak_dir</span> rsync_backup@172.16.1.41::zls</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">若发生服务器重启，脚本无法使用，所以还是有缺陷的，就无法实时监控文件或目录是否有变化，所以我们就可以使用Sersync</span><br></pre></td></tr></table></figure><p><strong>Sersync+rsync实时同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">实时同步的目的：为了保证数据的一致性</span><br><span class="line">所以我们可以使用Sersync+rsync</span><br><span class="line"></span><br><span class="line">Inotify 是一个通知接口，用来监控文件系统的各种变化，如果文件存取，删除，移动。可以非常方便地实现文件异动告警，增量备份，并针对目录或文件的变化及时作出响应。 rsync+inotify 可以实触发实时同步增量备份</span><br><span class="line"></span><br><span class="line">sersync 是国人基于 rsync+inotify-tools 开发的工具，不仅保留了优点同时还强化了实时监控，文</span><br><span class="line">件过滤，简化配置等功能，帮助用户提高运行效率，节省时间和网络资源。sersync项目地址</span><br></pre></td></tr></table></figure><p><strong>环境准备——实现3台机器同步</strong></p><table><thead><tr><th>主机名</th><th>公网IP</th><th>内网IP</th><th>作用</th><th>应用</th></tr></thead><tbody><tr><td>backup</td><td>10.0.0.41</td><td>172.16.1.41</td><td>仓库(存储所有备份数据的机器)，服务端</td><td>rsync的服务端</td></tr><tr><td>web01</td><td>10.0.0.7</td><td>172.16.1.7</td><td>需要备份数据的机器，客户端</td><td>rsync的客户端、sersync、inotify</td></tr><tr><td>web02</td><td>10.0.0.8</td><td>172.16.1.8</td><td>需要备份数据的机器，客户端</td><td>rsync的客户端、sersync、inotify</td></tr></tbody></table><p><strong>安装rsync服务端并配置(backup)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">1、安装rsync服务端</span><br><span class="line">yum -y install rsync</span><br><span class="line">2、配置rsync服务端   (作实时备份，两边的目录要一致)</span><br><span class="line">vim /etc/rsyncd.conf</span><br><span class="line">删除里面的全部内容，添加如下内容</span><br><span class="line">[root@backup ~]# <span class="built_in">cat</span> /etc/rsyncd.conf</span><br><span class="line">uid = rsync</span><br><span class="line">gid = rsync</span><br><span class="line">port = 873</span><br><span class="line">fake super = <span class="built_in">yes</span></span><br><span class="line">use <span class="built_in">chroot</span> = no</span><br><span class="line">max connections = 200</span><br><span class="line"><span class="built_in">timeout</span> = 600</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">auth <span class="built_in">users</span> = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/log/rsyncd.log</span><br><span class="line"><span class="comment">#####################################重点是下面这几行</span></span><br><span class="line"><span class="comment">#作数据备份模块</span></span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to backup!</span><br><span class="line">path = /backup</span><br><span class="line"><span class="comment">#作实时同步的模块</span></span><br><span class="line">[data_web01]</span><br><span class="line">path = /data_web01</span><br><span class="line">[data_web02]</span><br><span class="line">path = /data_web02</span><br><span class="line"></span><br><span class="line">3、创建配置文件里面的目录</span><br><span class="line"><span class="built_in">mkdir</span> /data_web01</span><br><span class="line"><span class="built_in">mkdir</span> /data_web02</span><br><span class="line"></span><br><span class="line">4、创建用户</span><br><span class="line">useradd rsync -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line">5、授权目录</span><br><span class="line"><span class="built_in">chown</span> rsync.rsync /data_web01</span><br><span class="line"><span class="built_in">chown</span> rsync.rsync /data_web02</span><br><span class="line"></span><br><span class="line">6、创建密码文件</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;rsync_backup:123&#x27;</span> &gt;/etc/rsync.passwd</span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/rsync.passwd</span><br><span class="line"></span><br><span class="line">7、启动服务，开机自启动</span><br><span class="line">[root@backup ~]# systemctl start rsyncd</span><br><span class="line">[root@backup ~]# systemctl <span class="built_in">enable</span> rsyncd</span><br></pre></td></tr></table></figure><p><strong>安装配置sersync客户端(web01、web02)</strong></p><p><strong>Web01</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">1、下载sersync安装包，下载依赖包rsync、inotify-tools</span><br><span class="line"> yum -y install inotify-tools</span><br><span class="line"> wget http://test.driverzeng.com/other/sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">2、创建安装目录</span><br><span class="line"><span class="built_in">mkdir</span> /app</span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">tar xf app/sersync2.5.4_64bit_binary_stable_final.tar.gz  -C app/</span><br><span class="line">修改程序目录名，习惯要给程序做软连接</span><br><span class="line">[root@web01 app]# <span class="built_in">mv</span> /app/GNU-Linux-x86 /app/sersync-2.5.4</span><br><span class="line">[root@web01 app]# <span class="built_in">ln</span> -s sersync2.5.4 sersync</span><br><span class="line">测试推送</span><br><span class="line">rsync -az --delete /data_web01 rsync_backup@172.16.1.41::data_web01 --password-file=/etc/rsync.pass</span><br><span class="line">3、修改配置文件</span><br><span class="line">找到inotify  改成<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@web01 app]# vim /app/sersync/confxml.xml</span><br><span class="line">  &lt;inotify&gt;</span><br><span class="line">&lt;delete start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;createFolder start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;createFile start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;closeWrite start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;moveFrom start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;moveTo start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;attrib start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;modify start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;/inotify&gt;</span><br><span class="line">&lt;sersync&gt;</span><br><span class="line">&lt;localpath watch=<span class="string">&quot;/data_web01&quot;</span>&gt;</span><br><span class="line">&lt;remote ip=<span class="string">&quot;172.16.1.41&quot;</span> name=<span class="string">&quot;data_web01&quot;</span>/&gt;</span><br><span class="line">&lt;!--&lt;remote ip=<span class="string">&quot;192.168.8.39&quot;</span> name=<span class="string">&quot;tongbu&quot;</span>/&gt;--&gt;</span><br><span class="line">&lt;!--&lt;remote ip=<span class="string">&quot;192.168.8.40&quot;</span> name=<span class="string">&quot;tongbu&quot;</span>/&gt;--&gt;</span><br><span class="line">&lt;/localpath&gt;</span><br><span class="line">&lt;rsync&gt;</span><br><span class="line">&lt;commonParams params=<span class="string">&quot;-az --delete&quot;</span>/&gt;</span><br><span class="line">&lt;auth start=<span class="string">&quot;true&quot;</span> <span class="built_in">users</span>=<span class="string">&quot;rsync_backup&quot;</span></span><br><span class="line">passwordfile=<span class="string">&quot;/etc/rsync.pass&quot;</span>/&gt;</span><br><span class="line">&lt;userDefinedPort start=<span class="string">&quot;false&quot;</span> port=<span class="string">&quot;874&quot;</span>/&gt;&lt;!-- port=874 --&gt;</span><br><span class="line">&lt;<span class="built_in">timeout</span> start=<span class="string">&quot;false&quot;</span> time=<span class="string">&quot;100&quot;</span>/&gt;&lt;!-- <span class="built_in">timeout</span>=100 --&gt;</span><br><span class="line">&lt;ssh start=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">&lt;/rsync&gt;</span><br><span class="line">&lt;failLog path=<span class="string">&quot;/tmp/rsync_fail_log.sh&quot;</span> timeToExecute=<span class="string">&quot;60&quot;</span>/&gt;&lt;!--default</span><br><span class="line">every 60mins execute once--&gt;</span><br><span class="line">&lt;crontab start=<span class="string">&quot;false&quot;</span> schedule=<span class="string">&quot;600&quot;</span>&gt;&lt;!--600mins--&gt;</span><br><span class="line">&lt;crontabfilter start=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">&lt;exclude expression=<span class="string">&quot;*.php&quot;</span>&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;exclude expression=<span class="string">&quot;info/*&quot;</span>&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;/crontabfilter&gt;</span><br><span class="line">&lt;/crontab&gt;</span><br><span class="line">&lt;plugin start=<span class="string">&quot;false&quot;</span> name=<span class="string">&quot;command&quot;</span>/&gt;</span><br><span class="line">&lt;/sersync&gt;</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240916180931786.png" alt="image-20240916180931786"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">4、创建数据目录data</span><br><span class="line"><span class="built_in">mkdir</span> /data_web01</span><br><span class="line">5、创建密码文件，授权600</span><br><span class="line">[root@web01 app]# <span class="built_in">echo</span> <span class="string">&#x27;123&#x27;</span> &gt; /etc/rsync.pass</span><br><span class="line">[root@web01 app]# <span class="built_in">chmod</span> 600 /etc/rsync.pass</span><br><span class="line">6、启动服务</span><br><span class="line">[root@web01 app]# /app/sersync/sersync2 -rdo /app/sersync/confxml.xml</span><br><span class="line">再用此命令实现数据同步</span><br><span class="line"><span class="built_in">cd</span> /data_web01 &amp;&amp; rsync -az --delete -R --delete ./ rsync_backup@172.16.1.41::data_web01 --password-file=/etc/rsync.pass</span><br><span class="line">在data创建文件，查看服务端是否同步数据即可</span><br></pre></td></tr></table></figure><p><strong>Web02</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">1、下载sersync安装包，下载依赖包rsync、inotify-tools</span><br><span class="line"> yum -y install inotify-tools</span><br><span class="line"> wget http://test.driverzeng.com/other/sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">2、创建安装目录</span><br><span class="line"><span class="built_in">mkdir</span> /app</span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">tar xf app/sersync2.5.4_64bit_binary_stable_final.tar.gz  -C app/</span><br><span class="line">修改程序目录名，习惯要给程序做软连接</span><br><span class="line">[root@web01 app]# <span class="built_in">mv</span> /app/GNU-Linux-x86 /app/sersync-2.5.4</span><br><span class="line">[root@nfs app]# <span class="built_in">cd</span> ~</span><br><span class="line">[root@nfs ~]# <span class="built_in">ln</span> -s /app/sersync-2.5.4 /app/sersync</span><br><span class="line">创建数据目录，测试推送</span><br><span class="line"><span class="built_in">mkdir</span> /data2</span><br><span class="line">rsync -az --delete /data2 rsync_backup@172.16.1.41::datd --password-file=/etc/rsync.pass</span><br><span class="line"></span><br><span class="line">3、修改配置文件</span><br><span class="line">找到inotify  改成<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@web01 app]# vim /app/sersync/confxml.xml</span><br><span class="line">  &lt;inotify&gt;</span><br><span class="line">&lt;delete start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;createFolder start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;createFile start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;closeWrite start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;moveFrom start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;moveTo start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;attrib start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;modify start=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;/inotify&gt;</span><br><span class="line"></span><br><span class="line">&lt;sersync&gt;</span><br><span class="line">&lt;localpath watch=<span class="string">&quot;/data_web02&quot;</span>&gt;</span><br><span class="line">&lt;remote ip=<span class="string">&quot;172.16.1.41&quot;</span> name=<span class="string">&quot;data_web012&quot;</span>/&gt;</span><br><span class="line">&lt;!--&lt;remote ip=<span class="string">&quot;192.168.8.39&quot;</span> name=<span class="string">&quot;tongbu&quot;</span>/&gt;--&gt;</span><br><span class="line">&lt;!--&lt;remote ip=<span class="string">&quot;192.168.8.40&quot;</span> name=<span class="string">&quot;tongbu&quot;</span>/&gt;--&gt;</span><br><span class="line">&lt;/localpath&gt;</span><br><span class="line">&lt;rsync&gt;</span><br><span class="line">&lt;commonParams params=<span class="string">&quot;-az --delete&quot;</span>/&gt;</span><br><span class="line">&lt;auth start=<span class="string">&quot;true&quot;</span> <span class="built_in">users</span>=<span class="string">&quot;rsync_backup&quot;</span></span><br><span class="line">passwordfile=<span class="string">&quot;/etc/rsync.pass&quot;</span>/&gt;</span><br><span class="line">&lt;userDefinedPort start=<span class="string">&quot;false&quot;</span> port=<span class="string">&quot;874&quot;</span>/&gt;&lt;!-- port=874 --&gt;</span><br><span class="line">&lt;<span class="built_in">timeout</span> start=<span class="string">&quot;false&quot;</span> time=<span class="string">&quot;100&quot;</span>/&gt;&lt;!-- <span class="built_in">timeout</span>=100 --&gt;</span><br><span class="line">&lt;ssh start=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">&lt;/rsync&gt;</span><br><span class="line">&lt;failLog path=<span class="string">&quot;/tmp/rsync_fail_log.sh&quot;</span> timeToExecute=<span class="string">&quot;60&quot;</span>/&gt;&lt;!--default</span><br><span class="line">every 60mins execute once--&gt;</span><br><span class="line">&lt;crontab start=<span class="string">&quot;false&quot;</span> schedule=<span class="string">&quot;600&quot;</span>&gt;&lt;!--600mins--&gt;</span><br><span class="line">&lt;crontabfilter start=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">&lt;exclude expression=<span class="string">&quot;*.php&quot;</span>&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;exclude expression=<span class="string">&quot;info/*&quot;</span>&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;/crontabfilter&gt;</span><br><span class="line">&lt;/crontab&gt;</span><br><span class="line">&lt;plugin start=<span class="string">&quot;false&quot;</span> name=<span class="string">&quot;command&quot;</span>/&gt;</span><br><span class="line">&lt;/sersync&gt;</span><br><span class="line"></span><br><span class="line">5、创建密码文件，授权600</span><br><span class="line">[root@web01 app]# <span class="built_in">echo</span> <span class="string">&#x27;123&#x27;</span> &gt; /etc/rsync.pass</span><br><span class="line">[root@web01 app]# <span class="built_in">chmod</span> 600 /etc/rsync.pass</span><br><span class="line">6、启动服务</span><br><span class="line">[root@web01 app]# /app/sersync/sersync2 -rdo /app/sersync/confxml.xml</span><br><span class="line">再用此命令实现数据同步</span><br><span class="line"><span class="built_in">cd</span> /data_web02 &amp;&amp; rsync -az --delete -R --delete ./ rsync_backup@172.16.1.41::data_web02 --password-file=/etc/rsync.pass</span><br><span class="line">在data创建文件，查看服务端是否同步数据即可</span><br></pre></td></tr></table></figure><p><img src="../image/study_img/image-20240516091401677.png" alt="image-20240516091401677"></p>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>🍥1、Rsync备份服务实战</title>
      <link href="/posts/8f355f8a.html"/>
      <url>/posts/8f355f8a.html</url>
      
        <content type="html"><![CDATA[<h3 id="Rsyn备份服务实战">Rsyn备份服务实战</h3><p><strong>Rsync介绍</strong></p><p>rsync是一款开源、快速、多功能、可实现<strong>全量及增量</strong>的本地或<strong>远程数据同步</strong>备份的优秀工具。rsync软件适用于Unix/linux/Windows等多种操作系统平台</p><p>这个功能类似于ssh带的scp命令，但是又优于scp命令的功能，scp每次都是全量拷贝，而rsync可以增量拷贝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scp推送的是全部文件，推送速度慢</span><br><span class="line">rsync只推送增加的文件，推送速度快，效率高</span><br><span class="line"></span><br><span class="line"><span class="comment">#文件推送  跨机器copy文件  -r复制目录</span></span><br><span class="line">scp 源文件  root@目标主机ip:/tmp</span><br><span class="line">[root@backup ~]# scp -r 111/ root@10.0.0.7:/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#文件拉取</span></span><br><span class="line">scp 用户名@目标主机ip:/路径/文件名  ./</span><br><span class="line">[root@backup ~]# scp root@10.0.0.7:/tmp/yum.log ./</span><br></pre></td></tr></table></figure><p>rsync官方地址：TP<br>rsync监听端口：873<br>rsync运行模式：C/S</p><p>小提示：利用rsync还可以实现删除文件和目录的功能，这又相当于rm命令，一个rsync相当于scp、cp、rm，但是还优于他们的每一个命令。</p><p><strong>Rsync的特性</strong><br>支持拷贝特殊文件，如链接文件、设备等。<br>可以有排除指定文件或目录同步的功能，相当于打包命令tar的排除功能。<br>可以做到保持原文件或目录的权限、时间、软硬链接、属主、组等所有属性均不改变 –p。<br>可以实现增量同步，既只同步发生变化的数据，因此数据传输效率很高（tar-N）。<br>可以使用rcp、rsh、ssh等方式来配合传输文件（rsync本身不对数据加密）。<br>可以通过socket（进程方式）传输文件和数据（服务端和客户端）*****。<br>支持匿名用户认证（无需系统用户）的进程模式传输，可以实现方便安全的进行数据备份和镜像。</p><p><strong>备份类型</strong></p><ul><li><p>全量备份</p><p><img src="../image/study_img/image-20240514145710956.png" alt="image-20240514145710956"></p></li></ul><p>全量备份，将客户端所有的数据内容file1 file2 file3全部备份至服务端 (效率低下, 占用空间)</p><ul><li><p>增量备份</p><p><img src="../image/study_img/image-20240514145739675.png" alt="image-20240514145739675"></p></li></ul><p>增量备份，将客户端的file2 file3增量备份至服务端 (提高备份效率,节省空间, 适合异地备份 )</p><p><strong>Rsync的应用场景</strong></p><p><em>1.<em>推</em>:</em> 所有主机推送本地数据至<em>Rsync</em>备份服务器，会导致数据同步缓慢*(<em>适合少量数据备份</em>)*</p><p><img src="../image/study_img/image-20240514150109176.png" alt="image-20240514150109176"></p><p><em>2.<em>拉</em>: rsync</em>备份服务端拉取所有主机上的数据，会导致备份服务器开销大</p><p><img src="../image/study_img/image-20240514150214345.png" alt="image-20240514150214345"></p><p>*3.*大量服务器备份场景</p><p><img src="../image/study_img/image-20240514150323325.png" alt="image-20240514150323325"></p><p>*4.*异地备份实现思路</p><p><img src="../image/study_img/image-20240514150351675.png" alt="image-20240514150351675"></p><p><strong>rsync传输模式</strong></p><ul><li>本地模式</li><li>远程模式</li><li>守护模式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地模式：类似cp命令，本地拷贝目录或文件</span></span><br><span class="line">[root@web01 ~]# rsync /root/base.sh /usr/local/</span><br><span class="line">rsync [OPTION...] SRC... [DEST]</span><br><span class="line">rsync [选项...] 源文件... 目标路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程模式：类似scp命令 基于ssh协议</span></span><br><span class="line"><span class="comment">## 推Push：把本机的文件推送到其他机器</span></span><br><span class="line">rsync [OPTION...] [USER@]HOST:SRC... [DEST]</span><br><span class="line">rsync [选项...] [用户@]主机IP:源文件... 本机的目标路径</span><br><span class="line">[root@web01 ~]# scp 1.txt 10.0.0.41:/opt</span><br><span class="line">[root@web01 ~]# rsync 1.txt 10.0.0.41:/usr/local</span><br><span class="line"></span><br><span class="line"><span class="comment">## 拉pull:将其他机器的文件拉到本机</span></span><br><span class="line">rsync [OPTION...] SRC... [USER@]HOST:DEST</span><br><span class="line">rsync [选项...] 本机的源文件 [用户@]主机IP:目标路径</span><br><span class="line">[root@web01 ~]# scp root@10.0.0.8:/root/base.sh ./</span><br><span class="line">[root@web01 ~]# rsync root@10.0.0.8:/root/base.sh ./</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 守护进程</span></span><br><span class="line">Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]</span><br><span class="line">      rsync [选项...] [匿名用户@]主机IP::模块名... 目标路径</span><br><span class="line">      rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]</span><br><span class="line"></span><br><span class="line">Push: rsync [OPTION...] SRC... [USER@]HOST::DEST</span><br><span class="line">      rsync [选项...] 源文件... [匿名用户@]主机IP::模块名</span><br><span class="line">      rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">      rsync [选项...] 源文件... [匿名用户@]主机IP::模块名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rz不能上传大于4G的文件，如果想要上传大于4g的文件，可以在windows上使用cmder利用scp去上传</span><br><span class="line"></span><br><span class="line">-avz 常用的搭配选项</span><br></pre></td></tr></table></figure><p>rsync的选项</p><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>归档传输</td></tr><tr><td>-v</td><td>显示传输过程</td></tr><tr><td>-z</td><td>压缩传输</td></tr><tr><td>–delete</td><td>无差异传输(会删除不存在的文件)</td></tr></tbody></table><p><strong>rsync实战</strong></p><p><strong>环境准备</strong></p><table><thead><tr><th>主机名</th><th>公网IP</th><th>内网IP</th><th>作用</th><th>应用</th></tr></thead><tbody><tr><td>backup</td><td>10.0.0.41</td><td>172.16.1.41</td><td>仓库(存储所有备份数据的机器)，服务端</td><td>rsync的服务端</td></tr><tr><td>web01</td><td>10.0.0.7</td><td>172.16.1.7</td><td>需要备份数据的机器，客户端</td><td>rsync的客户端</td></tr><tr><td>web02</td><td>10.0.0.8</td><td>172.16.1.8</td><td>需要备份数据的机器，客户端</td><td>rsync的客户端</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">1、安装rsync的客户端和服务端</span><br><span class="line">yum -y install rsync</span><br><span class="line">2、修改服务端配置文件</span><br><span class="line">vim /etc/rsyncd.conf</span><br><span class="line">删除里面的全部内容，添加如下内容</span><br><span class="line">[root@backup ~]# <span class="built_in">cat</span> /etc/rsyncd.conf</span><br><span class="line">uid = rsync</span><br><span class="line">gid = rsync</span><br><span class="line">port = 873</span><br><span class="line">fake super = <span class="built_in">yes</span></span><br><span class="line">use <span class="built_in">chroot</span> = no</span><br><span class="line">max connections = 200</span><br><span class="line"><span class="built_in">timeout</span> = 600</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">auth <span class="built_in">users</span> = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/log/rsyncd.log</span><br><span class="line"><span class="comment">#####################################重点是下面这几行</span></span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to backup!</span><br><span class="line">path = /backup</span><br><span class="line"> </span><br><span class="line">--- 配置详解</span><br><span class="line">[root@backup ~]# vim /etc/rsyncd.conf</span><br><span class="line">uid = rsync                      <span class="comment"># 运行rsync服务的用户</span></span><br><span class="line">gid = rsync                      <span class="comment"># 运行rsync服务的用户组</span></span><br><span class="line">port = 873                       <span class="comment"># 监听端口</span></span><br><span class="line">fake super = <span class="built_in">yes</span>                 <span class="comment"># 无需让rsync以root身份运行，允许接收文件的完整属性</span></span><br><span class="line">use <span class="built_in">chroot</span> = no                  <span class="comment"># 禁锢推送的数据至某个目录, 不允许跳出该目录</span></span><br><span class="line">max connections = 200            <span class="comment"># 最大连接数，接收200个客户端推送数据</span></span><br><span class="line"><span class="built_in">timeout</span> = 600                    <span class="comment"># 超时时间，在指定时间内数据没有传完，自动断开</span></span><br><span class="line">ignore errors                    <span class="comment"># 忽略错误信息</span></span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span>                <span class="comment"># 对备份数据可读写，false关闭只读</span></span><br><span class="line">list = <span class="literal">false</span>                     <span class="comment"># 不允许查看模块信息</span></span><br><span class="line">auth <span class="built_in">users</span> = rsync_backup        <span class="comment"># 认证用户(匿名用户)</span></span><br><span class="line">secrets file = /etc/rsync.passwd <span class="comment"># 定义rsync服务用户连接认证密码文件路径</span></span><br><span class="line"><span class="built_in">log</span> file = /var/log/rsyncd.log   <span class="comment">#日志文件</span></span><br><span class="line"><span class="comment">#####################################重点是下面这几行</span></span><br><span class="line">[backup]                <span class="comment"># 定义模块信息</span></span><br><span class="line">comment = commit        <span class="comment"># 自定义模块注释信息</span></span><br><span class="line">path = /backup          <span class="comment"># 定义服务端接收备份数据目录</span></span><br><span class="line"></span><br><span class="line">3、创建服务启动用户</span><br><span class="line">useradd rsync -s /sbin/nologin  -M</span><br><span class="line">4、创建备份目录并授权目录</span><br><span class="line"><span class="built_in">mkdir</span> -p /backup</span><br><span class="line"><span class="built_in">chown</span>  -R rsync.rsync /backup</span><br><span class="line">5、编写密码文件</span><br><span class="line">vim /etc/rsync.passwd</span><br><span class="line">rsync_backup：123</span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/rsync.passwd</span><br><span class="line">6、启动服务，开机自启动</span><br><span class="line">systemctl start rsync</span><br><span class="line">systemctl enabled rsync</span><br><span class="line">7、检查服务是否启动成功</span><br><span class="line">[root@backup ~]# ps -aux |grep rsync</span><br><span class="line">root       6046  0.0  0.1 114856  1136 ?        Ss   22:32   0:00 /usr/bin/rsync --daemon --no-detach</span><br><span class="line">root       7279  0.0  0.0 112812   980 pts/0    R+   23:37   0:00 grep --color=auto rsync</span><br><span class="line">[root@backup ~]# netstat -lntup|grep 873</span><br><span class="line">tcp        0      0 0.0.0.0:873             0.0.0.0:*               LISTEN      6046/rsync          </span><br><span class="line">tcp6       0      0 :::873                  :::*                    LISTEN      6046/rsync  </span><br></pre></td></tr></table></figure><p><strong>客户端推送命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# rsync -avz base.sh rsync_backup@172.16.1.41::backup</span><br><span class="line">Password: 123</span><br><span class="line"></span><br><span class="line"><span class="comment">## rsync免交互推送</span></span><br><span class="line"><span class="comment"># 1.客户端配置密码文件（此处需和服务端secrets file文件密码对应上）</span></span><br><span class="line">[root@web01 ~]# vi /etc/asm_rsync.pass</span><br><span class="line">123  <span class="comment">#密码</span></span><br><span class="line"><span class="comment"># 2.客户端密码文件授权</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">chmod</span> 600 /etc/asm_rsync.pass</span><br><span class="line"><span class="comment"># 3.客户端推送数据</span></span><br><span class="line">[root@web01 ~]# rsync -avz /etc rsync_backup@172.16.1.41::backup --password-file=/etc/asm_rsync.pass</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note">2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
